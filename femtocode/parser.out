Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> body
Rule 1     body -> suite
Rule 2     body -> body_star suite
Rule 3     body_star -> SEMI
Rule 4     body_star -> body_star SEMI
Rule 5     suite -> expression
Rule 6     suite -> expression suite_star
Rule 7     suite -> suite_star2 expression
Rule 8     suite -> suite_star2 expression suite_star3
Rule 9     suite_star -> SEMI
Rule 10    suite_star -> suite_star SEMI
Rule 11    suite_star3 -> SEMI
Rule 12    suite_star3 -> suite_star3 SEMI
Rule 13    suite_star2 -> assignment
Rule 14    suite_star2 -> assignment suite_star2_star
Rule 15    suite_star2 -> suite_star2 assignment
Rule 16    suite_star2 -> suite_star2 assignment suite_star2_star
Rule 17    suite_star2_star -> SEMI
Rule 18    suite_star2_star -> suite_star2_star SEMI
Rule 19    lvalues -> NAME
Rule 20    lvalues -> NAME COMMA
Rule 21    lvalues -> lvalues_star NAME
Rule 22    lvalues -> lvalues_star NAME COMMA
Rule 23    lvalues_star -> NAME COMMA
Rule 24    lvalues_star -> lvalues_star NAME COMMA
Rule 25    assignment -> lvalues EQUAL closed_expression
Rule 26    assignment -> fcnndef
Rule 27    fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite
Rule 28    expression -> ifblock
Rule 29    expression -> fcndef
Rule 30    expression -> or_test
Rule 31    closed_expression -> closed_ifblock
Rule 32    closed_expression -> fcndef
Rule 33    closed_expression -> or_test SEMI
Rule 34    fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE
Rule 35    fcn1def -> parameter RIGHTARROW expression
Rule 36    fcn1def -> parameter RIGHTARROW LBRACE suite RBRACE
Rule 37    paramlist -> parameter
Rule 38    paramlist -> parameter COMMA
Rule 39    paramlist -> paramlist_star parameter
Rule 40    paramlist -> paramlist_star parameter COMMA
Rule 41    paramlist_star -> parameter COMMA
Rule 42    paramlist_star -> paramlist_star parameter COMMA
Rule 43    parameter -> NAME
Rule 44    parameter -> NAME EQUAL expression
Rule 45    exprsuite -> COLON expression
Rule 46    exprsuite -> LBRACE suite RBRACE
Rule 47    exprsuite -> COLON LBRACE suite RBRACE
Rule 48    closed_exprsuite -> COLON closed_expression
Rule 49    closed_exprsuite -> LBRACE suite RBRACE
Rule 50    closed_exprsuite -> COLON LBRACE suite RBRACE
Rule 51    ifblock -> IF expression exprsuite ELSE exprsuite
Rule 52    ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite
Rule 53    ifblock_star -> ELIF expression exprsuite
Rule 54    ifblock_star -> ifblock_star ELIF expression exprsuite
Rule 55    closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite
Rule 56    closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite
Rule 57    closed_ifblock_star -> ELIF expression exprsuite
Rule 58    closed_ifblock_star -> closed_ifblock_star ELIF expression exprsuite
Rule 59    or_test -> and_test
Rule 60    or_test -> and_test or_test_star
Rule 61    or_test_star -> OR and_test
Rule 62    or_test_star -> or_test_star OR and_test
Rule 63    and_test -> not_test
Rule 64    and_test -> not_test and_test_star
Rule 65    and_test_star -> AND not_test
Rule 66    and_test_star -> and_test_star AND not_test
Rule 67    not_test -> NOT not_test
Rule 68    not_test -> comparison
Rule 69    comparison -> arith_expr
Rule 70    comparison -> arith_expr comparison_star
Rule 71    comparison_star -> comp_op arith_expr
Rule 72    comparison_star -> comparison_star comp_op arith_expr
Rule 73    comp_op -> LESS
Rule 74    comp_op -> GREATER
Rule 75    comp_op -> EQEQUAL
Rule 76    comp_op -> GREATEREQUAL
Rule 77    comp_op -> LESSEQUAL
Rule 78    comp_op -> NOTEQUAL
Rule 79    comp_op -> IN
Rule 80    comp_op -> NOT IN
Rule 81    arith_expr -> term
Rule 82    arith_expr -> term arith_expr_star
Rule 83    arith_expr_star -> PLUS term
Rule 84    arith_expr_star -> MINUS term
Rule 85    arith_expr_star -> arith_expr_star PLUS term
Rule 86    arith_expr_star -> arith_expr_star MINUS term
Rule 87    term -> factor
Rule 88    term -> factor term_star
Rule 89    term_star -> STAR factor
Rule 90    term_star -> SLASH factor
Rule 91    term_star -> PERCENT factor
Rule 92    term_star -> DOUBLESLASH factor
Rule 93    term_star -> term_star STAR factor
Rule 94    term_star -> term_star SLASH factor
Rule 95    term_star -> term_star PERCENT factor
Rule 96    term_star -> term_star DOUBLESLASH factor
Rule 97    factor -> PLUS factor
Rule 98    factor -> MINUS factor
Rule 99    factor -> power
Rule 100   power -> atom
Rule 101   power -> atom DOUBLESTAR factor
Rule 102   power -> atom power_star
Rule 103   power -> atom power_star DOUBLESTAR factor
Rule 104   power_star -> trailer
Rule 105   power_star -> power_star trailer
Rule 106   atom -> LPAR RPAR
Rule 107   atom -> LPAR expression RPAR
Rule 108   atom -> fcndef LPAR RPAR
Rule 109   atom -> fcndef LPAR arglist RPAR
Rule 110   atom -> STRING
Rule 111   atom -> IMAG_NUMBER
Rule 112   atom -> FLOAT_NUMBER
Rule 113   atom -> HEX_NUMBER
Rule 114   atom -> OCT_NUMBER
Rule 115   atom -> DEC_NUMBER
Rule 116   atom -> ATARG
Rule 117   atom -> NAME
Rule 118   trailer -> LPAR RPAR
Rule 119   trailer -> LPAR arglist RPAR
Rule 120   trailer -> LSQB subscriptlist RSQB
Rule 121   trailer -> DOT NAME
Rule 122   subscriptlist -> subscript
Rule 123   subscriptlist -> subscript COMMA
Rule 124   subscriptlist -> subscript subscriptlist_star
Rule 125   subscriptlist -> subscript subscriptlist_star COMMA
Rule 126   subscriptlist_star -> COMMA subscript
Rule 127   subscriptlist_star -> subscriptlist_star COMMA subscript
Rule 128   subscript -> expression
Rule 129   subscript -> COLON
Rule 130   subscript -> COLON sliceop
Rule 131   subscript -> COLON expression
Rule 132   subscript -> COLON expression sliceop
Rule 133   subscript -> expression COLON
Rule 134   subscript -> expression COLON sliceop
Rule 135   subscript -> expression COLON expression
Rule 136   subscript -> expression COLON expression sliceop
Rule 137   sliceop -> COLON
Rule 138   sliceop -> COLON expression
Rule 139   arglist -> argument
Rule 140   arglist -> argument COMMA
Rule 141   arglist -> arglist_star argument
Rule 142   arglist -> arglist_star argument COMMA
Rule 143   arglist -> fcn1def
Rule 144   arglist_star -> argument COMMA
Rule 145   arglist_star -> arglist_star argument COMMA
Rule 146   argument -> expression
Rule 147   argument -> NAME EQUAL expression

Terminals, with rules where they appear

AND                  : 65 66
ATARG                : 116
COLON                : 45 47 48 50 129 130 131 132 133 134 135 136 137 138
COMMA                : 20 22 23 24 38 40 41 42 123 125 126 127 140 142 144 145
DEC_NUMBER           : 115
DEF                  : 27
DOT                  : 121
DOUBLESLASH          : 92 96
DOUBLESTAR           : 101 103
ELIF                 : 53 54 57 58
ELSE                 : 51 52 55 56
EQEQUAL              : 75
EQUAL                : 25 44 147
FLOAT_NUMBER         : 112
GREATER              : 74
GREATEREQUAL         : 76
HEX_NUMBER           : 113
IF                   : 51 52 55 56
IMAG_NUMBER          : 111
IN                   : 79 80
LBRACE               : 34 36 46 47 49 50
LESS                 : 73
LESSEQUAL            : 77
LPAR                 : 27 106 107 108 109 118 119
LSQB                 : 120
MINUS                : 84 86 98
NAME                 : 19 20 21 22 23 24 27 43 44 117 121 147
NOT                  : 67 80
NOTEQUAL             : 78
OCT_NUMBER           : 114
OR                   : 61 62
PERCENT              : 91 95
PLUS                 : 83 85 97
RBRACE               : 34 36 46 47 49 50
RIGHTARROW           : 34 35 36
RPAR                 : 27 106 107 108 109 118 119
RSQB                 : 120
SEMI                 : 3 4 9 10 11 12 17 18 33
SLASH                : 90 94
STAR                 : 89 93
STRING               : 110
error                : 

Nonterminals, with rules where they appear

and_test             : 59 60 61 62
and_test_star        : 64 66
arglist              : 109 119
arglist_star         : 141 142 145
argument             : 139 140 141 142 144 145
arith_expr           : 69 70 71 72
arith_expr_star      : 82 85 86
assignment           : 13 14 15 16
atom                 : 100 101 102 103
body                 : 0
body_star            : 2 4
closed_expression    : 25 48
closed_exprsuite     : 27 55 56
closed_ifblock       : 31
closed_ifblock_star  : 56 58
comp_op              : 71 72
comparison           : 68
comparison_star      : 70 72
expression           : 5 6 7 8 35 44 45 51 52 53 54 55 56 57 58 107 128 131 132 133 134 135 135 136 136 138 146 147
exprsuite            : 51 51 52 52 53 54 55 56 57 58
factor               : 87 88 89 90 91 92 93 94 95 96 97 98 101 103
fcn1def              : 143
fcndef               : 29 32 108 109
fcnndef              : 26
ifblock              : 28
ifblock_star         : 52 54
lvalues              : 25
lvalues_star         : 21 22 24
not_test             : 63 64 65 66 67
or_test              : 30 33
or_test_star         : 60 62
parameter            : 35 36 37 38 39 40 41 42
paramlist            : 27 34
paramlist_star       : 39 40 42
power                : 99
power_star           : 102 103 105
sliceop              : 130 132 134 136
subscript            : 122 123 124 125 126 127
subscriptlist        : 120
subscriptlist_star   : 124 125 127
suite                : 1 2 34 36 46 47 49 50
suite_star           : 6 10
suite_star2          : 7 8 15 16
suite_star2_star     : 14 16 18
suite_star3          : 8 12
term                 : 81 82 83 84 85 86
term_star            : 88 93 94 95 96
trailer              : 104 105

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . suite
    (2) body -> . body_star suite
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (3) body_star -> . SEMI
    (4) body_star -> . body_star SEMI
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    SEMI            shift and go to state 36
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NAME            shift and go to state 15
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    not_test                       shift and go to state 30
    suite                          shift and go to state 19
    lvalues_star                   shift and go to state 18
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    body_star                      shift and go to state 12
    and_test                       shift and go to state 14
    body                           shift and go to state 34

state 1

    (34) fcndef -> LBRACE . paramlist RIGHTARROW suite RBRACE
    (37) paramlist -> . parameter
    (38) paramlist -> . parameter COMMA
    (39) paramlist -> . paramlist_star parameter
    (40) paramlist -> . paramlist_star parameter COMMA
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (41) paramlist_star -> . parameter COMMA
    (42) paramlist_star -> . paramlist_star parameter COMMA

    NAME            shift and go to state 37

    parameter                      shift and go to state 38
    paramlist                      shift and go to state 39
    paramlist_star                 shift and go to state 40

state 2

    (114) atom -> OCT_NUMBER .

    DOUBLESTAR      reduce using rule 114 (atom -> OCT_NUMBER .)
    LPAR            reduce using rule 114 (atom -> OCT_NUMBER .)
    LSQB            reduce using rule 114 (atom -> OCT_NUMBER .)
    DOT             reduce using rule 114 (atom -> OCT_NUMBER .)
    STAR            reduce using rule 114 (atom -> OCT_NUMBER .)
    SLASH           reduce using rule 114 (atom -> OCT_NUMBER .)
    PERCENT         reduce using rule 114 (atom -> OCT_NUMBER .)
    DOUBLESLASH     reduce using rule 114 (atom -> OCT_NUMBER .)
    PLUS            reduce using rule 114 (atom -> OCT_NUMBER .)
    MINUS           reduce using rule 114 (atom -> OCT_NUMBER .)
    LESS            reduce using rule 114 (atom -> OCT_NUMBER .)
    GREATER         reduce using rule 114 (atom -> OCT_NUMBER .)
    EQEQUAL         reduce using rule 114 (atom -> OCT_NUMBER .)
    GREATEREQUAL    reduce using rule 114 (atom -> OCT_NUMBER .)
    LESSEQUAL       reduce using rule 114 (atom -> OCT_NUMBER .)
    NOTEQUAL        reduce using rule 114 (atom -> OCT_NUMBER .)
    IN              reduce using rule 114 (atom -> OCT_NUMBER .)
    NOT             reduce using rule 114 (atom -> OCT_NUMBER .)
    AND             reduce using rule 114 (atom -> OCT_NUMBER .)
    OR              reduce using rule 114 (atom -> OCT_NUMBER .)
    COLON           reduce using rule 114 (atom -> OCT_NUMBER .)
    LBRACE          reduce using rule 114 (atom -> OCT_NUMBER .)
    SEMI            reduce using rule 114 (atom -> OCT_NUMBER .)
    $end            reduce using rule 114 (atom -> OCT_NUMBER .)
    RBRACE          reduce using rule 114 (atom -> OCT_NUMBER .)
    RPAR            reduce using rule 114 (atom -> OCT_NUMBER .)
    COMMA           reduce using rule 114 (atom -> OCT_NUMBER .)
    RSQB            reduce using rule 114 (atom -> OCT_NUMBER .)
    RIGHTARROW      reduce using rule 114 (atom -> OCT_NUMBER .)
    ELSE            reduce using rule 114 (atom -> OCT_NUMBER .)
    ELIF            reduce using rule 114 (atom -> OCT_NUMBER .)


state 3

    (106) atom -> LPAR . RPAR
    (107) atom -> LPAR . expression RPAR
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    RPAR            shift and go to state 41
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 42
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 4

    (26) assignment -> fcnndef .

    SEMI            reduce using rule 26 (assignment -> fcnndef .)
    IF              reduce using rule 26 (assignment -> fcnndef .)
    LBRACE          reduce using rule 26 (assignment -> fcnndef .)
    NAME            reduce using rule 26 (assignment -> fcnndef .)
    DEF             reduce using rule 26 (assignment -> fcnndef .)
    NOT             reduce using rule 26 (assignment -> fcnndef .)
    PLUS            reduce using rule 26 (assignment -> fcnndef .)
    MINUS           reduce using rule 26 (assignment -> fcnndef .)
    LPAR            reduce using rule 26 (assignment -> fcnndef .)
    STRING          reduce using rule 26 (assignment -> fcnndef .)
    IMAG_NUMBER     reduce using rule 26 (assignment -> fcnndef .)
    FLOAT_NUMBER    reduce using rule 26 (assignment -> fcnndef .)
    HEX_NUMBER      reduce using rule 26 (assignment -> fcnndef .)
    OCT_NUMBER      reduce using rule 26 (assignment -> fcnndef .)
    DEC_NUMBER      reduce using rule 26 (assignment -> fcnndef .)
    ATARG           reduce using rule 26 (assignment -> fcnndef .)


state 5

    (29) expression -> fcndef .
    (108) atom -> fcndef . LPAR RPAR
    (109) atom -> fcndef . LPAR arglist RPAR

    SEMI            reduce using rule 29 (expression -> fcndef .)
    RBRACE          reduce using rule 29 (expression -> fcndef .)
    COLON           reduce using rule 29 (expression -> fcndef .)
    LBRACE          reduce using rule 29 (expression -> fcndef .)
    COMMA           reduce using rule 29 (expression -> fcndef .)
    RIGHTARROW      reduce using rule 29 (expression -> fcndef .)
    RPAR            reduce using rule 29 (expression -> fcndef .)
    RSQB            reduce using rule 29 (expression -> fcndef .)
    $end            reduce using rule 29 (expression -> fcndef .)
    ELSE            reduce using rule 29 (expression -> fcndef .)
    ELIF            reduce using rule 29 (expression -> fcndef .)
    LPAR            shift and go to state 44


state 6

    (87) term -> factor .
    (88) term -> factor . term_star
    (89) term_star -> . STAR factor
    (90) term_star -> . SLASH factor
    (91) term_star -> . PERCENT factor
    (92) term_star -> . DOUBLESLASH factor
    (93) term_star -> . term_star STAR factor
    (94) term_star -> . term_star SLASH factor
    (95) term_star -> . term_star PERCENT factor
    (96) term_star -> . term_star DOUBLESLASH factor

    PLUS            reduce using rule 87 (term -> factor .)
    MINUS           reduce using rule 87 (term -> factor .)
    LESS            reduce using rule 87 (term -> factor .)
    GREATER         reduce using rule 87 (term -> factor .)
    EQEQUAL         reduce using rule 87 (term -> factor .)
    GREATEREQUAL    reduce using rule 87 (term -> factor .)
    LESSEQUAL       reduce using rule 87 (term -> factor .)
    NOTEQUAL        reduce using rule 87 (term -> factor .)
    IN              reduce using rule 87 (term -> factor .)
    NOT             reduce using rule 87 (term -> factor .)
    AND             reduce using rule 87 (term -> factor .)
    OR              reduce using rule 87 (term -> factor .)
    ELSE            reduce using rule 87 (term -> factor .)
    ELIF            reduce using rule 87 (term -> factor .)
    SEMI            reduce using rule 87 (term -> factor .)
    $end            reduce using rule 87 (term -> factor .)
    RPAR            reduce using rule 87 (term -> factor .)
    COLON           reduce using rule 87 (term -> factor .)
    LBRACE          reduce using rule 87 (term -> factor .)
    RBRACE          reduce using rule 87 (term -> factor .)
    COMMA           reduce using rule 87 (term -> factor .)
    RSQB            reduce using rule 87 (term -> factor .)
    RIGHTARROW      reduce using rule 87 (term -> factor .)
    STAR            shift and go to state 45
    SLASH           shift and go to state 49
    PERCENT         shift and go to state 48
    DOUBLESLASH     shift and go to state 47

    term_star                      shift and go to state 46

state 7

    (27) fcnndef -> DEF . NAME LPAR paramlist RPAR closed_exprsuite

    NAME            shift and go to state 50


state 8

    (68) not_test -> comparison .

    AND             reduce using rule 68 (not_test -> comparison .)
    OR              reduce using rule 68 (not_test -> comparison .)
    COMMA           reduce using rule 68 (not_test -> comparison .)
    RPAR            reduce using rule 68 (not_test -> comparison .)
    SEMI            reduce using rule 68 (not_test -> comparison .)
    RBRACE          reduce using rule 68 (not_test -> comparison .)
    $end            reduce using rule 68 (not_test -> comparison .)
    COLON           reduce using rule 68 (not_test -> comparison .)
    LBRACE          reduce using rule 68 (not_test -> comparison .)
    RSQB            reduce using rule 68 (not_test -> comparison .)
    RIGHTARROW      reduce using rule 68 (not_test -> comparison .)
    ELSE            reduce using rule 68 (not_test -> comparison .)
    ELIF            reduce using rule 68 (not_test -> comparison .)


state 9

    (30) expression -> or_test .

    SEMI            reduce using rule 30 (expression -> or_test .)
    RBRACE          reduce using rule 30 (expression -> or_test .)
    COLON           reduce using rule 30 (expression -> or_test .)
    LBRACE          reduce using rule 30 (expression -> or_test .)
    COMMA           reduce using rule 30 (expression -> or_test .)
    RIGHTARROW      reduce using rule 30 (expression -> or_test .)
    RPAR            reduce using rule 30 (expression -> or_test .)
    RSQB            reduce using rule 30 (expression -> or_test .)
    $end            reduce using rule 30 (expression -> or_test .)
    ELSE            reduce using rule 30 (expression -> or_test .)
    ELIF            reduce using rule 30 (expression -> or_test .)


state 10

    (13) suite_star2 -> assignment .
    (14) suite_star2 -> assignment . suite_star2_star
    (17) suite_star2_star -> . SEMI
    (18) suite_star2_star -> . suite_star2_star SEMI

    IF              reduce using rule 13 (suite_star2 -> assignment .)
    LBRACE          reduce using rule 13 (suite_star2 -> assignment .)
    NAME            reduce using rule 13 (suite_star2 -> assignment .)
    DEF             reduce using rule 13 (suite_star2 -> assignment .)
    NOT             reduce using rule 13 (suite_star2 -> assignment .)
    PLUS            reduce using rule 13 (suite_star2 -> assignment .)
    MINUS           reduce using rule 13 (suite_star2 -> assignment .)
    LPAR            reduce using rule 13 (suite_star2 -> assignment .)
    STRING          reduce using rule 13 (suite_star2 -> assignment .)
    IMAG_NUMBER     reduce using rule 13 (suite_star2 -> assignment .)
    FLOAT_NUMBER    reduce using rule 13 (suite_star2 -> assignment .)
    HEX_NUMBER      reduce using rule 13 (suite_star2 -> assignment .)
    OCT_NUMBER      reduce using rule 13 (suite_star2 -> assignment .)
    DEC_NUMBER      reduce using rule 13 (suite_star2 -> assignment .)
    ATARG           reduce using rule 13 (suite_star2 -> assignment .)
    SEMI            shift and go to state 51

    suite_star2_star               shift and go to state 52

state 11

    (112) atom -> FLOAT_NUMBER .

    DOUBLESTAR      reduce using rule 112 (atom -> FLOAT_NUMBER .)
    LPAR            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    LSQB            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    DOT             reduce using rule 112 (atom -> FLOAT_NUMBER .)
    STAR            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    SLASH           reduce using rule 112 (atom -> FLOAT_NUMBER .)
    PERCENT         reduce using rule 112 (atom -> FLOAT_NUMBER .)
    DOUBLESLASH     reduce using rule 112 (atom -> FLOAT_NUMBER .)
    PLUS            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    MINUS           reduce using rule 112 (atom -> FLOAT_NUMBER .)
    LESS            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    GREATER         reduce using rule 112 (atom -> FLOAT_NUMBER .)
    EQEQUAL         reduce using rule 112 (atom -> FLOAT_NUMBER .)
    GREATEREQUAL    reduce using rule 112 (atom -> FLOAT_NUMBER .)
    LESSEQUAL       reduce using rule 112 (atom -> FLOAT_NUMBER .)
    NOTEQUAL        reduce using rule 112 (atom -> FLOAT_NUMBER .)
    IN              reduce using rule 112 (atom -> FLOAT_NUMBER .)
    NOT             reduce using rule 112 (atom -> FLOAT_NUMBER .)
    AND             reduce using rule 112 (atom -> FLOAT_NUMBER .)
    OR              reduce using rule 112 (atom -> FLOAT_NUMBER .)
    COLON           reduce using rule 112 (atom -> FLOAT_NUMBER .)
    LBRACE          reduce using rule 112 (atom -> FLOAT_NUMBER .)
    SEMI            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    $end            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    RBRACE          reduce using rule 112 (atom -> FLOAT_NUMBER .)
    RPAR            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    COMMA           reduce using rule 112 (atom -> FLOAT_NUMBER .)
    RSQB            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    RIGHTARROW      reduce using rule 112 (atom -> FLOAT_NUMBER .)
    ELSE            reduce using rule 112 (atom -> FLOAT_NUMBER .)
    ELIF            reduce using rule 112 (atom -> FLOAT_NUMBER .)


state 12

    (2) body -> body_star . suite
    (4) body_star -> body_star . SEMI
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    SEMI            shift and go to state 54
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NAME            shift and go to state 15
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    not_test                       shift and go to state 30
    suite                          shift and go to state 53
    lvalues_star                   shift and go to state 18
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14

state 13

    (111) atom -> IMAG_NUMBER .

    DOUBLESTAR      reduce using rule 111 (atom -> IMAG_NUMBER .)
    LPAR            reduce using rule 111 (atom -> IMAG_NUMBER .)
    LSQB            reduce using rule 111 (atom -> IMAG_NUMBER .)
    DOT             reduce using rule 111 (atom -> IMAG_NUMBER .)
    STAR            reduce using rule 111 (atom -> IMAG_NUMBER .)
    SLASH           reduce using rule 111 (atom -> IMAG_NUMBER .)
    PERCENT         reduce using rule 111 (atom -> IMAG_NUMBER .)
    DOUBLESLASH     reduce using rule 111 (atom -> IMAG_NUMBER .)
    PLUS            reduce using rule 111 (atom -> IMAG_NUMBER .)
    MINUS           reduce using rule 111 (atom -> IMAG_NUMBER .)
    LESS            reduce using rule 111 (atom -> IMAG_NUMBER .)
    GREATER         reduce using rule 111 (atom -> IMAG_NUMBER .)
    EQEQUAL         reduce using rule 111 (atom -> IMAG_NUMBER .)
    GREATEREQUAL    reduce using rule 111 (atom -> IMAG_NUMBER .)
    LESSEQUAL       reduce using rule 111 (atom -> IMAG_NUMBER .)
    NOTEQUAL        reduce using rule 111 (atom -> IMAG_NUMBER .)
    IN              reduce using rule 111 (atom -> IMAG_NUMBER .)
    NOT             reduce using rule 111 (atom -> IMAG_NUMBER .)
    AND             reduce using rule 111 (atom -> IMAG_NUMBER .)
    OR              reduce using rule 111 (atom -> IMAG_NUMBER .)
    COLON           reduce using rule 111 (atom -> IMAG_NUMBER .)
    LBRACE          reduce using rule 111 (atom -> IMAG_NUMBER .)
    SEMI            reduce using rule 111 (atom -> IMAG_NUMBER .)
    $end            reduce using rule 111 (atom -> IMAG_NUMBER .)
    RBRACE          reduce using rule 111 (atom -> IMAG_NUMBER .)
    RPAR            reduce using rule 111 (atom -> IMAG_NUMBER .)
    COMMA           reduce using rule 111 (atom -> IMAG_NUMBER .)
    RSQB            reduce using rule 111 (atom -> IMAG_NUMBER .)
    RIGHTARROW      reduce using rule 111 (atom -> IMAG_NUMBER .)
    ELSE            reduce using rule 111 (atom -> IMAG_NUMBER .)
    ELIF            reduce using rule 111 (atom -> IMAG_NUMBER .)


state 14

    (59) or_test -> and_test .
    (60) or_test -> and_test . or_test_star
    (61) or_test_star -> . OR and_test
    (62) or_test_star -> . or_test_star OR and_test

    SEMI            reduce using rule 59 (or_test -> and_test .)
    RBRACE          reduce using rule 59 (or_test -> and_test .)
    RPAR            reduce using rule 59 (or_test -> and_test .)
    COLON           reduce using rule 59 (or_test -> and_test .)
    LBRACE          reduce using rule 59 (or_test -> and_test .)
    COMMA           reduce using rule 59 (or_test -> and_test .)
    RSQB            reduce using rule 59 (or_test -> and_test .)
    $end            reduce using rule 59 (or_test -> and_test .)
    RIGHTARROW      reduce using rule 59 (or_test -> and_test .)
    ELSE            reduce using rule 59 (or_test -> and_test .)
    ELIF            reduce using rule 59 (or_test -> and_test .)
    OR              shift and go to state 55

    or_test_star                   shift and go to state 56

state 15

    (19) lvalues -> NAME .
    (20) lvalues -> NAME . COMMA
    (23) lvalues_star -> NAME . COMMA
    (117) atom -> NAME .

    EQUAL           reduce using rule 19 (lvalues -> NAME .)
    COMMA           shift and go to state 57
    DOUBLESTAR      reduce using rule 117 (atom -> NAME .)
    LPAR            reduce using rule 117 (atom -> NAME .)
    LSQB            reduce using rule 117 (atom -> NAME .)
    DOT             reduce using rule 117 (atom -> NAME .)
    STAR            reduce using rule 117 (atom -> NAME .)
    SLASH           reduce using rule 117 (atom -> NAME .)
    PERCENT         reduce using rule 117 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 117 (atom -> NAME .)
    PLUS            reduce using rule 117 (atom -> NAME .)
    MINUS           reduce using rule 117 (atom -> NAME .)
    LESS            reduce using rule 117 (atom -> NAME .)
    GREATER         reduce using rule 117 (atom -> NAME .)
    EQEQUAL         reduce using rule 117 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 117 (atom -> NAME .)
    LESSEQUAL       reduce using rule 117 (atom -> NAME .)
    NOTEQUAL        reduce using rule 117 (atom -> NAME .)
    IN              reduce using rule 117 (atom -> NAME .)
    NOT             reduce using rule 117 (atom -> NAME .)
    AND             reduce using rule 117 (atom -> NAME .)
    OR              reduce using rule 117 (atom -> NAME .)
    SEMI            reduce using rule 117 (atom -> NAME .)
    $end            reduce using rule 117 (atom -> NAME .)
    RBRACE          reduce using rule 117 (atom -> NAME .)


state 16

    (116) atom -> ATARG .

    DOUBLESTAR      reduce using rule 116 (atom -> ATARG .)
    LPAR            reduce using rule 116 (atom -> ATARG .)
    LSQB            reduce using rule 116 (atom -> ATARG .)
    DOT             reduce using rule 116 (atom -> ATARG .)
    STAR            reduce using rule 116 (atom -> ATARG .)
    SLASH           reduce using rule 116 (atom -> ATARG .)
    PERCENT         reduce using rule 116 (atom -> ATARG .)
    DOUBLESLASH     reduce using rule 116 (atom -> ATARG .)
    PLUS            reduce using rule 116 (atom -> ATARG .)
    MINUS           reduce using rule 116 (atom -> ATARG .)
    LESS            reduce using rule 116 (atom -> ATARG .)
    GREATER         reduce using rule 116 (atom -> ATARG .)
    EQEQUAL         reduce using rule 116 (atom -> ATARG .)
    GREATEREQUAL    reduce using rule 116 (atom -> ATARG .)
    LESSEQUAL       reduce using rule 116 (atom -> ATARG .)
    NOTEQUAL        reduce using rule 116 (atom -> ATARG .)
    IN              reduce using rule 116 (atom -> ATARG .)
    NOT             reduce using rule 116 (atom -> ATARG .)
    AND             reduce using rule 116 (atom -> ATARG .)
    OR              reduce using rule 116 (atom -> ATARG .)
    COLON           reduce using rule 116 (atom -> ATARG .)
    LBRACE          reduce using rule 116 (atom -> ATARG .)
    SEMI            reduce using rule 116 (atom -> ATARG .)
    $end            reduce using rule 116 (atom -> ATARG .)
    RBRACE          reduce using rule 116 (atom -> ATARG .)
    RPAR            reduce using rule 116 (atom -> ATARG .)
    COMMA           reduce using rule 116 (atom -> ATARG .)
    RSQB            reduce using rule 116 (atom -> ATARG .)
    RIGHTARROW      reduce using rule 116 (atom -> ATARG .)
    ELSE            reduce using rule 116 (atom -> ATARG .)
    ELIF            reduce using rule 116 (atom -> ATARG .)


state 17

    (98) factor -> MINUS . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 59

state 18

    (21) lvalues -> lvalues_star . NAME
    (22) lvalues -> lvalues_star . NAME COMMA
    (24) lvalues_star -> lvalues_star . NAME COMMA

    NAME            shift and go to state 60


state 19

    (1) body -> suite .

    $end            reduce using rule 1 (body -> suite .)


state 20

    (67) not_test -> NOT . not_test
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    not_test                       shift and go to state 61
    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8

state 21

    (100) power -> atom .
    (101) power -> atom . DOUBLESTAR factor
    (102) power -> atom . power_star
    (103) power -> atom . power_star DOUBLESTAR factor
    (104) power_star -> . trailer
    (105) power_star -> . power_star trailer
    (118) trailer -> . LPAR RPAR
    (119) trailer -> . LPAR arglist RPAR
    (120) trailer -> . LSQB subscriptlist RSQB
    (121) trailer -> . DOT NAME

    STAR            reduce using rule 100 (power -> atom .)
    SLASH           reduce using rule 100 (power -> atom .)
    PERCENT         reduce using rule 100 (power -> atom .)
    DOUBLESLASH     reduce using rule 100 (power -> atom .)
    PLUS            reduce using rule 100 (power -> atom .)
    MINUS           reduce using rule 100 (power -> atom .)
    LESS            reduce using rule 100 (power -> atom .)
    GREATER         reduce using rule 100 (power -> atom .)
    EQEQUAL         reduce using rule 100 (power -> atom .)
    GREATEREQUAL    reduce using rule 100 (power -> atom .)
    LESSEQUAL       reduce using rule 100 (power -> atom .)
    NOTEQUAL        reduce using rule 100 (power -> atom .)
    IN              reduce using rule 100 (power -> atom .)
    NOT             reduce using rule 100 (power -> atom .)
    AND             reduce using rule 100 (power -> atom .)
    OR              reduce using rule 100 (power -> atom .)
    COMMA           reduce using rule 100 (power -> atom .)
    RPAR            reduce using rule 100 (power -> atom .)
    RIGHTARROW      reduce using rule 100 (power -> atom .)
    ELSE            reduce using rule 100 (power -> atom .)
    ELIF            reduce using rule 100 (power -> atom .)
    SEMI            reduce using rule 100 (power -> atom .)
    $end            reduce using rule 100 (power -> atom .)
    COLON           reduce using rule 100 (power -> atom .)
    LBRACE          reduce using rule 100 (power -> atom .)
    RBRACE          reduce using rule 100 (power -> atom .)
    RSQB            reduce using rule 100 (power -> atom .)
    DOUBLESTAR      shift and go to state 64
    LPAR            shift and go to state 63
    LSQB            shift and go to state 65
    DOT             shift and go to state 62

    trailer                        shift and go to state 66
    power_star                     shift and go to state 67

state 22

    (51) ifblock -> IF . expression exprsuite ELSE exprsuite
    (52) ifblock -> IF . expression exprsuite ifblock_star ELSE exprsuite
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 68
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 23

    (25) assignment -> lvalues . EQUAL closed_expression

    EQUAL           shift and go to state 69


state 24

    (99) factor -> power .

    STAR            reduce using rule 99 (factor -> power .)
    SLASH           reduce using rule 99 (factor -> power .)
    PERCENT         reduce using rule 99 (factor -> power .)
    DOUBLESLASH     reduce using rule 99 (factor -> power .)
    PLUS            reduce using rule 99 (factor -> power .)
    MINUS           reduce using rule 99 (factor -> power .)
    LESS            reduce using rule 99 (factor -> power .)
    GREATER         reduce using rule 99 (factor -> power .)
    EQEQUAL         reduce using rule 99 (factor -> power .)
    GREATEREQUAL    reduce using rule 99 (factor -> power .)
    LESSEQUAL       reduce using rule 99 (factor -> power .)
    NOTEQUAL        reduce using rule 99 (factor -> power .)
    IN              reduce using rule 99 (factor -> power .)
    NOT             reduce using rule 99 (factor -> power .)
    AND             reduce using rule 99 (factor -> power .)
    OR              reduce using rule 99 (factor -> power .)
    SEMI            reduce using rule 99 (factor -> power .)
    $end            reduce using rule 99 (factor -> power .)
    RPAR            reduce using rule 99 (factor -> power .)
    COLON           reduce using rule 99 (factor -> power .)
    LBRACE          reduce using rule 99 (factor -> power .)
    RBRACE          reduce using rule 99 (factor -> power .)
    COMMA           reduce using rule 99 (factor -> power .)
    RSQB            reduce using rule 99 (factor -> power .)
    RIGHTARROW      reduce using rule 99 (factor -> power .)
    ELSE            reduce using rule 99 (factor -> power .)
    ELIF            reduce using rule 99 (factor -> power .)


state 25

    (110) atom -> STRING .

    DOUBLESTAR      reduce using rule 110 (atom -> STRING .)
    LPAR            reduce using rule 110 (atom -> STRING .)
    LSQB            reduce using rule 110 (atom -> STRING .)
    DOT             reduce using rule 110 (atom -> STRING .)
    STAR            reduce using rule 110 (atom -> STRING .)
    SLASH           reduce using rule 110 (atom -> STRING .)
    PERCENT         reduce using rule 110 (atom -> STRING .)
    DOUBLESLASH     reduce using rule 110 (atom -> STRING .)
    PLUS            reduce using rule 110 (atom -> STRING .)
    MINUS           reduce using rule 110 (atom -> STRING .)
    LESS            reduce using rule 110 (atom -> STRING .)
    GREATER         reduce using rule 110 (atom -> STRING .)
    EQEQUAL         reduce using rule 110 (atom -> STRING .)
    GREATEREQUAL    reduce using rule 110 (atom -> STRING .)
    LESSEQUAL       reduce using rule 110 (atom -> STRING .)
    NOTEQUAL        reduce using rule 110 (atom -> STRING .)
    IN              reduce using rule 110 (atom -> STRING .)
    NOT             reduce using rule 110 (atom -> STRING .)
    AND             reduce using rule 110 (atom -> STRING .)
    OR              reduce using rule 110 (atom -> STRING .)
    COLON           reduce using rule 110 (atom -> STRING .)
    LBRACE          reduce using rule 110 (atom -> STRING .)
    SEMI            reduce using rule 110 (atom -> STRING .)
    $end            reduce using rule 110 (atom -> STRING .)
    RBRACE          reduce using rule 110 (atom -> STRING .)
    RPAR            reduce using rule 110 (atom -> STRING .)
    COMMA           reduce using rule 110 (atom -> STRING .)
    RSQB            reduce using rule 110 (atom -> STRING .)
    RIGHTARROW      reduce using rule 110 (atom -> STRING .)
    ELSE            reduce using rule 110 (atom -> STRING .)
    ELIF            reduce using rule 110 (atom -> STRING .)


state 26

    (7) suite -> suite_star2 . expression
    (8) suite -> suite_star2 . expression suite_star3
    (15) suite_star2 -> suite_star2 . assignment
    (16) suite_star2 -> suite_star2 . assignment suite_star2_star
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NAME            shift and go to state 15
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    lvalues_star                   shift and go to state 18
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    assignment                     shift and go to state 70
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 71
    and_test                       shift and go to state 14
    not_test                       shift and go to state 30

state 27

    (113) atom -> HEX_NUMBER .

    DOUBLESTAR      reduce using rule 113 (atom -> HEX_NUMBER .)
    LPAR            reduce using rule 113 (atom -> HEX_NUMBER .)
    LSQB            reduce using rule 113 (atom -> HEX_NUMBER .)
    DOT             reduce using rule 113 (atom -> HEX_NUMBER .)
    STAR            reduce using rule 113 (atom -> HEX_NUMBER .)
    SLASH           reduce using rule 113 (atom -> HEX_NUMBER .)
    PERCENT         reduce using rule 113 (atom -> HEX_NUMBER .)
    DOUBLESLASH     reduce using rule 113 (atom -> HEX_NUMBER .)
    PLUS            reduce using rule 113 (atom -> HEX_NUMBER .)
    MINUS           reduce using rule 113 (atom -> HEX_NUMBER .)
    LESS            reduce using rule 113 (atom -> HEX_NUMBER .)
    GREATER         reduce using rule 113 (atom -> HEX_NUMBER .)
    EQEQUAL         reduce using rule 113 (atom -> HEX_NUMBER .)
    GREATEREQUAL    reduce using rule 113 (atom -> HEX_NUMBER .)
    LESSEQUAL       reduce using rule 113 (atom -> HEX_NUMBER .)
    NOTEQUAL        reduce using rule 113 (atom -> HEX_NUMBER .)
    IN              reduce using rule 113 (atom -> HEX_NUMBER .)
    NOT             reduce using rule 113 (atom -> HEX_NUMBER .)
    AND             reduce using rule 113 (atom -> HEX_NUMBER .)
    OR              reduce using rule 113 (atom -> HEX_NUMBER .)
    COLON           reduce using rule 113 (atom -> HEX_NUMBER .)
    LBRACE          reduce using rule 113 (atom -> HEX_NUMBER .)
    SEMI            reduce using rule 113 (atom -> HEX_NUMBER .)
    $end            reduce using rule 113 (atom -> HEX_NUMBER .)
    RBRACE          reduce using rule 113 (atom -> HEX_NUMBER .)
    RPAR            reduce using rule 113 (atom -> HEX_NUMBER .)
    COMMA           reduce using rule 113 (atom -> HEX_NUMBER .)
    RSQB            reduce using rule 113 (atom -> HEX_NUMBER .)
    RIGHTARROW      reduce using rule 113 (atom -> HEX_NUMBER .)
    ELSE            reduce using rule 113 (atom -> HEX_NUMBER .)
    ELIF            reduce using rule 113 (atom -> HEX_NUMBER .)


state 28

    (28) expression -> ifblock .

    SEMI            reduce using rule 28 (expression -> ifblock .)
    RBRACE          reduce using rule 28 (expression -> ifblock .)
    COLON           reduce using rule 28 (expression -> ifblock .)
    LBRACE          reduce using rule 28 (expression -> ifblock .)
    COMMA           reduce using rule 28 (expression -> ifblock .)
    RIGHTARROW      reduce using rule 28 (expression -> ifblock .)
    RPAR            reduce using rule 28 (expression -> ifblock .)
    RSQB            reduce using rule 28 (expression -> ifblock .)
    $end            reduce using rule 28 (expression -> ifblock .)
    ELSE            reduce using rule 28 (expression -> ifblock .)
    ELIF            reduce using rule 28 (expression -> ifblock .)


state 29

    (115) atom -> DEC_NUMBER .

    DOUBLESTAR      reduce using rule 115 (atom -> DEC_NUMBER .)
    LPAR            reduce using rule 115 (atom -> DEC_NUMBER .)
    LSQB            reduce using rule 115 (atom -> DEC_NUMBER .)
    DOT             reduce using rule 115 (atom -> DEC_NUMBER .)
    STAR            reduce using rule 115 (atom -> DEC_NUMBER .)
    SLASH           reduce using rule 115 (atom -> DEC_NUMBER .)
    PERCENT         reduce using rule 115 (atom -> DEC_NUMBER .)
    DOUBLESLASH     reduce using rule 115 (atom -> DEC_NUMBER .)
    PLUS            reduce using rule 115 (atom -> DEC_NUMBER .)
    MINUS           reduce using rule 115 (atom -> DEC_NUMBER .)
    LESS            reduce using rule 115 (atom -> DEC_NUMBER .)
    GREATER         reduce using rule 115 (atom -> DEC_NUMBER .)
    EQEQUAL         reduce using rule 115 (atom -> DEC_NUMBER .)
    GREATEREQUAL    reduce using rule 115 (atom -> DEC_NUMBER .)
    LESSEQUAL       reduce using rule 115 (atom -> DEC_NUMBER .)
    NOTEQUAL        reduce using rule 115 (atom -> DEC_NUMBER .)
    IN              reduce using rule 115 (atom -> DEC_NUMBER .)
    NOT             reduce using rule 115 (atom -> DEC_NUMBER .)
    AND             reduce using rule 115 (atom -> DEC_NUMBER .)
    OR              reduce using rule 115 (atom -> DEC_NUMBER .)
    COLON           reduce using rule 115 (atom -> DEC_NUMBER .)
    LBRACE          reduce using rule 115 (atom -> DEC_NUMBER .)
    SEMI            reduce using rule 115 (atom -> DEC_NUMBER .)
    $end            reduce using rule 115 (atom -> DEC_NUMBER .)
    RBRACE          reduce using rule 115 (atom -> DEC_NUMBER .)
    RPAR            reduce using rule 115 (atom -> DEC_NUMBER .)
    COMMA           reduce using rule 115 (atom -> DEC_NUMBER .)
    RSQB            reduce using rule 115 (atom -> DEC_NUMBER .)
    RIGHTARROW      reduce using rule 115 (atom -> DEC_NUMBER .)
    ELSE            reduce using rule 115 (atom -> DEC_NUMBER .)
    ELIF            reduce using rule 115 (atom -> DEC_NUMBER .)


state 30

    (63) and_test -> not_test .
    (64) and_test -> not_test . and_test_star
    (65) and_test_star -> . AND not_test
    (66) and_test_star -> . and_test_star AND not_test

    OR              reduce using rule 63 (and_test -> not_test .)
    COMMA           reduce using rule 63 (and_test -> not_test .)
    RPAR            reduce using rule 63 (and_test -> not_test .)
    COLON           reduce using rule 63 (and_test -> not_test .)
    LBRACE          reduce using rule 63 (and_test -> not_test .)
    SEMI            reduce using rule 63 (and_test -> not_test .)
    $end            reduce using rule 63 (and_test -> not_test .)
    RBRACE          reduce using rule 63 (and_test -> not_test .)
    RSQB            reduce using rule 63 (and_test -> not_test .)
    RIGHTARROW      reduce using rule 63 (and_test -> not_test .)
    ELSE            reduce using rule 63 (and_test -> not_test .)
    ELIF            reduce using rule 63 (and_test -> not_test .)
    AND             shift and go to state 72

    and_test_star                  shift and go to state 73

state 31

    (5) suite -> expression .
    (6) suite -> expression . suite_star
    (9) suite_star -> . SEMI
    (10) suite_star -> . suite_star SEMI

    RBRACE          reduce using rule 5 (suite -> expression .)
    $end            reduce using rule 5 (suite -> expression .)
    SEMI            shift and go to state 74

    suite_star                     shift and go to state 75

state 32

    (97) factor -> PLUS . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 76

state 33

    (81) arith_expr -> term .
    (82) arith_expr -> term . arith_expr_star
    (83) arith_expr_star -> . PLUS term
    (84) arith_expr_star -> . MINUS term
    (85) arith_expr_star -> . arith_expr_star PLUS term
    (86) arith_expr_star -> . arith_expr_star MINUS term

    LESS            reduce using rule 81 (arith_expr -> term .)
    GREATER         reduce using rule 81 (arith_expr -> term .)
    EQEQUAL         reduce using rule 81 (arith_expr -> term .)
    GREATEREQUAL    reduce using rule 81 (arith_expr -> term .)
    LESSEQUAL       reduce using rule 81 (arith_expr -> term .)
    NOTEQUAL        reduce using rule 81 (arith_expr -> term .)
    IN              reduce using rule 81 (arith_expr -> term .)
    NOT             reduce using rule 81 (arith_expr -> term .)
    AND             reduce using rule 81 (arith_expr -> term .)
    OR              reduce using rule 81 (arith_expr -> term .)
    SEMI            reduce using rule 81 (arith_expr -> term .)
    RBRACE          reduce using rule 81 (arith_expr -> term .)
    COLON           reduce using rule 81 (arith_expr -> term .)
    COMMA           reduce using rule 81 (arith_expr -> term .)
    RSQB            reduce using rule 81 (arith_expr -> term .)
    LBRACE          reduce using rule 81 (arith_expr -> term .)
    RPAR            reduce using rule 81 (arith_expr -> term .)
    ELSE            reduce using rule 81 (arith_expr -> term .)
    ELIF            reduce using rule 81 (arith_expr -> term .)
    $end            reduce using rule 81 (arith_expr -> term .)
    RIGHTARROW      reduce using rule 81 (arith_expr -> term .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 79

    arith_expr_star                shift and go to state 78

state 34

    (0) S' -> body .



state 35

    (69) comparison -> arith_expr .
    (70) comparison -> arith_expr . comparison_star
    (71) comparison_star -> . comp_op arith_expr
    (72) comparison_star -> . comparison_star comp_op arith_expr
    (73) comp_op -> . LESS
    (74) comp_op -> . GREATER
    (75) comp_op -> . EQEQUAL
    (76) comp_op -> . GREATEREQUAL
    (77) comp_op -> . LESSEQUAL
    (78) comp_op -> . NOTEQUAL
    (79) comp_op -> . IN
    (80) comp_op -> . NOT IN

    AND             reduce using rule 69 (comparison -> arith_expr .)
    OR              reduce using rule 69 (comparison -> arith_expr .)
    SEMI            reduce using rule 69 (comparison -> arith_expr .)
    $end            reduce using rule 69 (comparison -> arith_expr .)
    RBRACE          reduce using rule 69 (comparison -> arith_expr .)
    COLON           reduce using rule 69 (comparison -> arith_expr .)
    COMMA           reduce using rule 69 (comparison -> arith_expr .)
    RSQB            reduce using rule 69 (comparison -> arith_expr .)
    LBRACE          reduce using rule 69 (comparison -> arith_expr .)
    RPAR            reduce using rule 69 (comparison -> arith_expr .)
    RIGHTARROW      reduce using rule 69 (comparison -> arith_expr .)
    ELSE            reduce using rule 69 (comparison -> arith_expr .)
    ELIF            reduce using rule 69 (comparison -> arith_expr .)
    LESS            shift and go to state 87
    GREATER         shift and go to state 89
    EQEQUAL         shift and go to state 83
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 88
    NOTEQUAL        shift and go to state 82
    IN              shift and go to state 80
    NOT             shift and go to state 81

    comp_op                        shift and go to state 84
    comparison_star                shift and go to state 85

state 36

    (3) body_star -> SEMI .

    SEMI            reduce using rule 3 (body_star -> SEMI .)
    IF              reduce using rule 3 (body_star -> SEMI .)
    LBRACE          reduce using rule 3 (body_star -> SEMI .)
    NAME            reduce using rule 3 (body_star -> SEMI .)
    DEF             reduce using rule 3 (body_star -> SEMI .)
    NOT             reduce using rule 3 (body_star -> SEMI .)
    PLUS            reduce using rule 3 (body_star -> SEMI .)
    MINUS           reduce using rule 3 (body_star -> SEMI .)
    LPAR            reduce using rule 3 (body_star -> SEMI .)
    STRING          reduce using rule 3 (body_star -> SEMI .)
    IMAG_NUMBER     reduce using rule 3 (body_star -> SEMI .)
    FLOAT_NUMBER    reduce using rule 3 (body_star -> SEMI .)
    HEX_NUMBER      reduce using rule 3 (body_star -> SEMI .)
    OCT_NUMBER      reduce using rule 3 (body_star -> SEMI .)
    DEC_NUMBER      reduce using rule 3 (body_star -> SEMI .)
    ATARG           reduce using rule 3 (body_star -> SEMI .)


state 37

    (43) parameter -> NAME .
    (44) parameter -> NAME . EQUAL expression

    COMMA           reduce using rule 43 (parameter -> NAME .)
    RPAR            reduce using rule 43 (parameter -> NAME .)
    RIGHTARROW      reduce using rule 43 (parameter -> NAME .)
    EQUAL           shift and go to state 90


state 38

    (37) paramlist -> parameter .
    (38) paramlist -> parameter . COMMA
    (41) paramlist_star -> parameter . COMMA

    RIGHTARROW      reduce using rule 37 (paramlist -> parameter .)
    RPAR            reduce using rule 37 (paramlist -> parameter .)
    COMMA           shift and go to state 91


state 39

    (34) fcndef -> LBRACE paramlist . RIGHTARROW suite RBRACE

    RIGHTARROW      shift and go to state 92


state 40

    (39) paramlist -> paramlist_star . parameter
    (40) paramlist -> paramlist_star . parameter COMMA
    (42) paramlist_star -> paramlist_star . parameter COMMA
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression

    NAME            shift and go to state 37

    parameter                      shift and go to state 93

state 41

    (106) atom -> LPAR RPAR .

    DOUBLESTAR      reduce using rule 106 (atom -> LPAR RPAR .)
    LPAR            reduce using rule 106 (atom -> LPAR RPAR .)
    LSQB            reduce using rule 106 (atom -> LPAR RPAR .)
    DOT             reduce using rule 106 (atom -> LPAR RPAR .)
    STAR            reduce using rule 106 (atom -> LPAR RPAR .)
    SLASH           reduce using rule 106 (atom -> LPAR RPAR .)
    PERCENT         reduce using rule 106 (atom -> LPAR RPAR .)
    DOUBLESLASH     reduce using rule 106 (atom -> LPAR RPAR .)
    PLUS            reduce using rule 106 (atom -> LPAR RPAR .)
    MINUS           reduce using rule 106 (atom -> LPAR RPAR .)
    LESS            reduce using rule 106 (atom -> LPAR RPAR .)
    GREATER         reduce using rule 106 (atom -> LPAR RPAR .)
    EQEQUAL         reduce using rule 106 (atom -> LPAR RPAR .)
    GREATEREQUAL    reduce using rule 106 (atom -> LPAR RPAR .)
    LESSEQUAL       reduce using rule 106 (atom -> LPAR RPAR .)
    NOTEQUAL        reduce using rule 106 (atom -> LPAR RPAR .)
    IN              reduce using rule 106 (atom -> LPAR RPAR .)
    NOT             reduce using rule 106 (atom -> LPAR RPAR .)
    AND             reduce using rule 106 (atom -> LPAR RPAR .)
    OR              reduce using rule 106 (atom -> LPAR RPAR .)
    COLON           reduce using rule 106 (atom -> LPAR RPAR .)
    LBRACE          reduce using rule 106 (atom -> LPAR RPAR .)
    SEMI            reduce using rule 106 (atom -> LPAR RPAR .)
    $end            reduce using rule 106 (atom -> LPAR RPAR .)
    RBRACE          reduce using rule 106 (atom -> LPAR RPAR .)
    RPAR            reduce using rule 106 (atom -> LPAR RPAR .)
    COMMA           reduce using rule 106 (atom -> LPAR RPAR .)
    RSQB            reduce using rule 106 (atom -> LPAR RPAR .)
    RIGHTARROW      reduce using rule 106 (atom -> LPAR RPAR .)
    ELSE            reduce using rule 106 (atom -> LPAR RPAR .)
    ELIF            reduce using rule 106 (atom -> LPAR RPAR .)


state 42

    (107) atom -> LPAR expression . RPAR

    RPAR            shift and go to state 94


state 43

    (117) atom -> NAME .

    DOUBLESTAR      reduce using rule 117 (atom -> NAME .)
    LPAR            reduce using rule 117 (atom -> NAME .)
    LSQB            reduce using rule 117 (atom -> NAME .)
    DOT             reduce using rule 117 (atom -> NAME .)
    STAR            reduce using rule 117 (atom -> NAME .)
    SLASH           reduce using rule 117 (atom -> NAME .)
    PERCENT         reduce using rule 117 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 117 (atom -> NAME .)
    PLUS            reduce using rule 117 (atom -> NAME .)
    MINUS           reduce using rule 117 (atom -> NAME .)
    LESS            reduce using rule 117 (atom -> NAME .)
    GREATER         reduce using rule 117 (atom -> NAME .)
    EQEQUAL         reduce using rule 117 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 117 (atom -> NAME .)
    LESSEQUAL       reduce using rule 117 (atom -> NAME .)
    NOTEQUAL        reduce using rule 117 (atom -> NAME .)
    IN              reduce using rule 117 (atom -> NAME .)
    NOT             reduce using rule 117 (atom -> NAME .)
    AND             reduce using rule 117 (atom -> NAME .)
    OR              reduce using rule 117 (atom -> NAME .)
    COLON           reduce using rule 117 (atom -> NAME .)
    LBRACE          reduce using rule 117 (atom -> NAME .)
    SEMI            reduce using rule 117 (atom -> NAME .)
    $end            reduce using rule 117 (atom -> NAME .)
    RPAR            reduce using rule 117 (atom -> NAME .)
    RBRACE          reduce using rule 117 (atom -> NAME .)
    COMMA           reduce using rule 117 (atom -> NAME .)
    RSQB            reduce using rule 117 (atom -> NAME .)
    RIGHTARROW      reduce using rule 117 (atom -> NAME .)
    ELSE            reduce using rule 117 (atom -> NAME .)
    ELIF            reduce using rule 117 (atom -> NAME .)


state 44

    (108) atom -> fcndef LPAR . RPAR
    (109) atom -> fcndef LPAR . arglist RPAR
    (139) arglist -> . argument
    (140) arglist -> . argument COMMA
    (141) arglist -> . arglist_star argument
    (142) arglist -> . arglist_star argument COMMA
    (143) arglist -> . fcn1def
    (146) argument -> . expression
    (147) argument -> . NAME EQUAL expression
    (144) arglist_star -> . argument COMMA
    (145) arglist_star -> . arglist_star argument COMMA
    (35) fcn1def -> . parameter RIGHTARROW expression
    (36) fcn1def -> . parameter RIGHTARROW LBRACE suite RBRACE
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    RPAR            shift and go to state 95
    NAME            shift and go to state 97
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    argument                       shift and go to state 99
    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    arglist_star                   shift and go to state 96
    expression                     shift and go to state 100
    fcn1def                        shift and go to state 101
    and_test                       shift and go to state 14
    term                           shift and go to state 33
    arglist                        shift and go to state 102
    parameter                      shift and go to state 98

state 45

    (89) term_star -> STAR . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 103

state 46

    (88) term -> factor term_star .
    (93) term_star -> term_star . STAR factor
    (94) term_star -> term_star . SLASH factor
    (95) term_star -> term_star . PERCENT factor
    (96) term_star -> term_star . DOUBLESLASH factor

    PLUS            reduce using rule 88 (term -> factor term_star .)
    MINUS           reduce using rule 88 (term -> factor term_star .)
    LESS            reduce using rule 88 (term -> factor term_star .)
    GREATER         reduce using rule 88 (term -> factor term_star .)
    EQEQUAL         reduce using rule 88 (term -> factor term_star .)
    GREATEREQUAL    reduce using rule 88 (term -> factor term_star .)
    LESSEQUAL       reduce using rule 88 (term -> factor term_star .)
    NOTEQUAL        reduce using rule 88 (term -> factor term_star .)
    IN              reduce using rule 88 (term -> factor term_star .)
    NOT             reduce using rule 88 (term -> factor term_star .)
    AND             reduce using rule 88 (term -> factor term_star .)
    OR              reduce using rule 88 (term -> factor term_star .)
    ELSE            reduce using rule 88 (term -> factor term_star .)
    ELIF            reduce using rule 88 (term -> factor term_star .)
    SEMI            reduce using rule 88 (term -> factor term_star .)
    $end            reduce using rule 88 (term -> factor term_star .)
    RPAR            reduce using rule 88 (term -> factor term_star .)
    COLON           reduce using rule 88 (term -> factor term_star .)
    LBRACE          reduce using rule 88 (term -> factor term_star .)
    RBRACE          reduce using rule 88 (term -> factor term_star .)
    COMMA           reduce using rule 88 (term -> factor term_star .)
    RSQB            reduce using rule 88 (term -> factor term_star .)
    RIGHTARROW      reduce using rule 88 (term -> factor term_star .)
    STAR            shift and go to state 104
    SLASH           shift and go to state 107
    PERCENT         shift and go to state 106
    DOUBLESLASH     shift and go to state 105


state 47

    (92) term_star -> DOUBLESLASH . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 108

state 48

    (91) term_star -> PERCENT . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 109

state 49

    (90) term_star -> SLASH . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 110

state 50

    (27) fcnndef -> DEF NAME . LPAR paramlist RPAR closed_exprsuite

    LPAR            shift and go to state 111


state 51

    (17) suite_star2_star -> SEMI .

    SEMI            reduce using rule 17 (suite_star2_star -> SEMI .)
    IF              reduce using rule 17 (suite_star2_star -> SEMI .)
    LBRACE          reduce using rule 17 (suite_star2_star -> SEMI .)
    NAME            reduce using rule 17 (suite_star2_star -> SEMI .)
    DEF             reduce using rule 17 (suite_star2_star -> SEMI .)
    NOT             reduce using rule 17 (suite_star2_star -> SEMI .)
    PLUS            reduce using rule 17 (suite_star2_star -> SEMI .)
    MINUS           reduce using rule 17 (suite_star2_star -> SEMI .)
    LPAR            reduce using rule 17 (suite_star2_star -> SEMI .)
    STRING          reduce using rule 17 (suite_star2_star -> SEMI .)
    IMAG_NUMBER     reduce using rule 17 (suite_star2_star -> SEMI .)
    FLOAT_NUMBER    reduce using rule 17 (suite_star2_star -> SEMI .)
    HEX_NUMBER      reduce using rule 17 (suite_star2_star -> SEMI .)
    OCT_NUMBER      reduce using rule 17 (suite_star2_star -> SEMI .)
    DEC_NUMBER      reduce using rule 17 (suite_star2_star -> SEMI .)
    ATARG           reduce using rule 17 (suite_star2_star -> SEMI .)


state 52

    (14) suite_star2 -> assignment suite_star2_star .
    (18) suite_star2_star -> suite_star2_star . SEMI

    IF              reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    LBRACE          reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    NAME            reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    DEF             reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    NOT             reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    PLUS            reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    MINUS           reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    LPAR            reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    STRING          reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    IMAG_NUMBER     reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    FLOAT_NUMBER    reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    HEX_NUMBER      reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    OCT_NUMBER      reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    DEC_NUMBER      reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    ATARG           reduce using rule 14 (suite_star2 -> assignment suite_star2_star .)
    SEMI            shift and go to state 112


state 53

    (2) body -> body_star suite .

    $end            reduce using rule 2 (body -> body_star suite .)


state 54

    (4) body_star -> body_star SEMI .

    SEMI            reduce using rule 4 (body_star -> body_star SEMI .)
    IF              reduce using rule 4 (body_star -> body_star SEMI .)
    LBRACE          reduce using rule 4 (body_star -> body_star SEMI .)
    NAME            reduce using rule 4 (body_star -> body_star SEMI .)
    DEF             reduce using rule 4 (body_star -> body_star SEMI .)
    NOT             reduce using rule 4 (body_star -> body_star SEMI .)
    PLUS            reduce using rule 4 (body_star -> body_star SEMI .)
    MINUS           reduce using rule 4 (body_star -> body_star SEMI .)
    LPAR            reduce using rule 4 (body_star -> body_star SEMI .)
    STRING          reduce using rule 4 (body_star -> body_star SEMI .)
    IMAG_NUMBER     reduce using rule 4 (body_star -> body_star SEMI .)
    FLOAT_NUMBER    reduce using rule 4 (body_star -> body_star SEMI .)
    HEX_NUMBER      reduce using rule 4 (body_star -> body_star SEMI .)
    OCT_NUMBER      reduce using rule 4 (body_star -> body_star SEMI .)
    DEC_NUMBER      reduce using rule 4 (body_star -> body_star SEMI .)
    ATARG           reduce using rule 4 (body_star -> body_star SEMI .)


state 55

    (61) or_test_star -> OR . and_test
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    not_test                       shift and go to state 30
    power                          shift and go to state 24
    atom                           shift and go to state 21
    and_test                       shift and go to state 113
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8

state 56

    (60) or_test -> and_test or_test_star .
    (62) or_test_star -> or_test_star . OR and_test

    SEMI            reduce using rule 60 (or_test -> and_test or_test_star .)
    RBRACE          reduce using rule 60 (or_test -> and_test or_test_star .)
    RPAR            reduce using rule 60 (or_test -> and_test or_test_star .)
    COLON           reduce using rule 60 (or_test -> and_test or_test_star .)
    LBRACE          reduce using rule 60 (or_test -> and_test or_test_star .)
    COMMA           reduce using rule 60 (or_test -> and_test or_test_star .)
    RSQB            reduce using rule 60 (or_test -> and_test or_test_star .)
    $end            reduce using rule 60 (or_test -> and_test or_test_star .)
    RIGHTARROW      reduce using rule 60 (or_test -> and_test or_test_star .)
    ELSE            reduce using rule 60 (or_test -> and_test or_test_star .)
    ELIF            reduce using rule 60 (or_test -> and_test or_test_star .)
    OR              shift and go to state 114


state 57

    (20) lvalues -> NAME COMMA .
    (23) lvalues_star -> NAME COMMA .

    EQUAL           reduce using rule 20 (lvalues -> NAME COMMA .)
    NAME            reduce using rule 23 (lvalues_star -> NAME COMMA .)


state 58

    (108) atom -> fcndef . LPAR RPAR
    (109) atom -> fcndef . LPAR arglist RPAR

    LPAR            shift and go to state 44


state 59

    (98) factor -> MINUS factor .

    STAR            reduce using rule 98 (factor -> MINUS factor .)
    SLASH           reduce using rule 98 (factor -> MINUS factor .)
    PERCENT         reduce using rule 98 (factor -> MINUS factor .)
    DOUBLESLASH     reduce using rule 98 (factor -> MINUS factor .)
    PLUS            reduce using rule 98 (factor -> MINUS factor .)
    MINUS           reduce using rule 98 (factor -> MINUS factor .)
    LESS            reduce using rule 98 (factor -> MINUS factor .)
    GREATER         reduce using rule 98 (factor -> MINUS factor .)
    EQEQUAL         reduce using rule 98 (factor -> MINUS factor .)
    GREATEREQUAL    reduce using rule 98 (factor -> MINUS factor .)
    LESSEQUAL       reduce using rule 98 (factor -> MINUS factor .)
    NOTEQUAL        reduce using rule 98 (factor -> MINUS factor .)
    IN              reduce using rule 98 (factor -> MINUS factor .)
    NOT             reduce using rule 98 (factor -> MINUS factor .)
    AND             reduce using rule 98 (factor -> MINUS factor .)
    OR              reduce using rule 98 (factor -> MINUS factor .)
    SEMI            reduce using rule 98 (factor -> MINUS factor .)
    $end            reduce using rule 98 (factor -> MINUS factor .)
    RPAR            reduce using rule 98 (factor -> MINUS factor .)
    COLON           reduce using rule 98 (factor -> MINUS factor .)
    LBRACE          reduce using rule 98 (factor -> MINUS factor .)
    RBRACE          reduce using rule 98 (factor -> MINUS factor .)
    COMMA           reduce using rule 98 (factor -> MINUS factor .)
    RSQB            reduce using rule 98 (factor -> MINUS factor .)
    RIGHTARROW      reduce using rule 98 (factor -> MINUS factor .)
    ELSE            reduce using rule 98 (factor -> MINUS factor .)
    ELIF            reduce using rule 98 (factor -> MINUS factor .)


state 60

    (21) lvalues -> lvalues_star NAME .
    (22) lvalues -> lvalues_star NAME . COMMA
    (24) lvalues_star -> lvalues_star NAME . COMMA

    EQUAL           reduce using rule 21 (lvalues -> lvalues_star NAME .)
    COMMA           shift and go to state 115


state 61

    (67) not_test -> NOT not_test .

    AND             reduce using rule 67 (not_test -> NOT not_test .)
    OR              reduce using rule 67 (not_test -> NOT not_test .)
    COMMA           reduce using rule 67 (not_test -> NOT not_test .)
    RPAR            reduce using rule 67 (not_test -> NOT not_test .)
    SEMI            reduce using rule 67 (not_test -> NOT not_test .)
    RBRACE          reduce using rule 67 (not_test -> NOT not_test .)
    $end            reduce using rule 67 (not_test -> NOT not_test .)
    COLON           reduce using rule 67 (not_test -> NOT not_test .)
    LBRACE          reduce using rule 67 (not_test -> NOT not_test .)
    RSQB            reduce using rule 67 (not_test -> NOT not_test .)
    RIGHTARROW      reduce using rule 67 (not_test -> NOT not_test .)
    ELSE            reduce using rule 67 (not_test -> NOT not_test .)
    ELIF            reduce using rule 67 (not_test -> NOT not_test .)


state 62

    (121) trailer -> DOT . NAME

    NAME            shift and go to state 116


state 63

    (118) trailer -> LPAR . RPAR
    (119) trailer -> LPAR . arglist RPAR
    (139) arglist -> . argument
    (140) arglist -> . argument COMMA
    (141) arglist -> . arglist_star argument
    (142) arglist -> . arglist_star argument COMMA
    (143) arglist -> . fcn1def
    (146) argument -> . expression
    (147) argument -> . NAME EQUAL expression
    (144) arglist_star -> . argument COMMA
    (145) arglist_star -> . arglist_star argument COMMA
    (35) fcn1def -> . parameter RIGHTARROW expression
    (36) fcn1def -> . parameter RIGHTARROW LBRACE suite RBRACE
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    RPAR            shift and go to state 117
    NAME            shift and go to state 97
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    argument                       shift and go to state 99
    power                          shift and go to state 24
    arglist                        shift and go to state 118
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    arglist_star                   shift and go to state 96
    expression                     shift and go to state 100
    fcn1def                        shift and go to state 101
    and_test                       shift and go to state 14
    term                           shift and go to state 33
    fcndef                         shift and go to state 5
    parameter                      shift and go to state 98

state 64

    (101) power -> atom DOUBLESTAR . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 119

state 65

    (120) trailer -> LSQB . subscriptlist RSQB
    (122) subscriptlist -> . subscript
    (123) subscriptlist -> . subscript COMMA
    (124) subscriptlist -> . subscript subscriptlist_star
    (125) subscriptlist -> . subscript subscriptlist_star COMMA
    (128) subscript -> . expression
    (129) subscript -> . COLON
    (130) subscript -> . COLON sliceop
    (131) subscript -> . COLON expression
    (132) subscript -> . COLON expression sliceop
    (133) subscript -> . expression COLON
    (134) subscript -> . expression COLON sliceop
    (135) subscript -> . expression COLON expression
    (136) subscript -> . expression COLON expression sliceop
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    COLON           shift and go to state 121
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    subscript                      shift and go to state 120
    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 122
    and_test                       shift and go to state 14
    term                           shift and go to state 33
    subscriptlist                  shift and go to state 123

state 66

    (104) power_star -> trailer .

    DOUBLESTAR      reduce using rule 104 (power_star -> trailer .)
    LPAR            reduce using rule 104 (power_star -> trailer .)
    LSQB            reduce using rule 104 (power_star -> trailer .)
    DOT             reduce using rule 104 (power_star -> trailer .)
    STAR            reduce using rule 104 (power_star -> trailer .)
    SLASH           reduce using rule 104 (power_star -> trailer .)
    PERCENT         reduce using rule 104 (power_star -> trailer .)
    DOUBLESLASH     reduce using rule 104 (power_star -> trailer .)
    PLUS            reduce using rule 104 (power_star -> trailer .)
    MINUS           reduce using rule 104 (power_star -> trailer .)
    LESS            reduce using rule 104 (power_star -> trailer .)
    GREATER         reduce using rule 104 (power_star -> trailer .)
    EQEQUAL         reduce using rule 104 (power_star -> trailer .)
    GREATEREQUAL    reduce using rule 104 (power_star -> trailer .)
    LESSEQUAL       reduce using rule 104 (power_star -> trailer .)
    NOTEQUAL        reduce using rule 104 (power_star -> trailer .)
    IN              reduce using rule 104 (power_star -> trailer .)
    NOT             reduce using rule 104 (power_star -> trailer .)
    AND             reduce using rule 104 (power_star -> trailer .)
    OR              reduce using rule 104 (power_star -> trailer .)
    SEMI            reduce using rule 104 (power_star -> trailer .)
    $end            reduce using rule 104 (power_star -> trailer .)
    RPAR            reduce using rule 104 (power_star -> trailer .)
    COLON           reduce using rule 104 (power_star -> trailer .)
    LBRACE          reduce using rule 104 (power_star -> trailer .)
    RBRACE          reduce using rule 104 (power_star -> trailer .)
    COMMA           reduce using rule 104 (power_star -> trailer .)
    RSQB            reduce using rule 104 (power_star -> trailer .)
    RIGHTARROW      reduce using rule 104 (power_star -> trailer .)
    ELSE            reduce using rule 104 (power_star -> trailer .)
    ELIF            reduce using rule 104 (power_star -> trailer .)


state 67

    (102) power -> atom power_star .
    (103) power -> atom power_star . DOUBLESTAR factor
    (105) power_star -> power_star . trailer
    (118) trailer -> . LPAR RPAR
    (119) trailer -> . LPAR arglist RPAR
    (120) trailer -> . LSQB subscriptlist RSQB
    (121) trailer -> . DOT NAME

    STAR            reduce using rule 102 (power -> atom power_star .)
    SLASH           reduce using rule 102 (power -> atom power_star .)
    PERCENT         reduce using rule 102 (power -> atom power_star .)
    DOUBLESLASH     reduce using rule 102 (power -> atom power_star .)
    PLUS            reduce using rule 102 (power -> atom power_star .)
    MINUS           reduce using rule 102 (power -> atom power_star .)
    LESS            reduce using rule 102 (power -> atom power_star .)
    GREATER         reduce using rule 102 (power -> atom power_star .)
    EQEQUAL         reduce using rule 102 (power -> atom power_star .)
    GREATEREQUAL    reduce using rule 102 (power -> atom power_star .)
    LESSEQUAL       reduce using rule 102 (power -> atom power_star .)
    NOTEQUAL        reduce using rule 102 (power -> atom power_star .)
    IN              reduce using rule 102 (power -> atom power_star .)
    NOT             reduce using rule 102 (power -> atom power_star .)
    AND             reduce using rule 102 (power -> atom power_star .)
    OR              reduce using rule 102 (power -> atom power_star .)
    COMMA           reduce using rule 102 (power -> atom power_star .)
    RPAR            reduce using rule 102 (power -> atom power_star .)
    RIGHTARROW      reduce using rule 102 (power -> atom power_star .)
    ELSE            reduce using rule 102 (power -> atom power_star .)
    ELIF            reduce using rule 102 (power -> atom power_star .)
    SEMI            reduce using rule 102 (power -> atom power_star .)
    $end            reduce using rule 102 (power -> atom power_star .)
    COLON           reduce using rule 102 (power -> atom power_star .)
    LBRACE          reduce using rule 102 (power -> atom power_star .)
    RBRACE          reduce using rule 102 (power -> atom power_star .)
    RSQB            reduce using rule 102 (power -> atom power_star .)
    DOUBLESTAR      shift and go to state 124
    LPAR            shift and go to state 63
    LSQB            shift and go to state 65
    DOT             shift and go to state 62

    trailer                        shift and go to state 125

state 68

    (51) ifblock -> IF expression . exprsuite ELSE exprsuite
    (52) ifblock -> IF expression . exprsuite ifblock_star ELSE exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 128

state 69

    (25) assignment -> lvalues EQUAL . closed_expression
    (31) closed_expression -> . closed_ifblock
    (32) closed_expression -> . fcndef
    (33) closed_expression -> . or_test SEMI
    (55) closed_ifblock -> . IF expression exprsuite ELSE closed_exprsuite
    (56) closed_ifblock -> . IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 132
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    closed_ifblock                 shift and go to state 129
    term                           shift and go to state 33
    closed_expression              shift and go to state 133
    power                          shift and go to state 24
    fcndef                         shift and go to state 130
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 131
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    and_test                       shift and go to state 14

state 70

    (15) suite_star2 -> suite_star2 assignment .
    (16) suite_star2 -> suite_star2 assignment . suite_star2_star
    (17) suite_star2_star -> . SEMI
    (18) suite_star2_star -> . suite_star2_star SEMI

    IF              reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    LBRACE          reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    NAME            reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    DEF             reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    NOT             reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    PLUS            reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    MINUS           reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    LPAR            reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    STRING          reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    IMAG_NUMBER     reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    FLOAT_NUMBER    reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    HEX_NUMBER      reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    OCT_NUMBER      reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    DEC_NUMBER      reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    ATARG           reduce using rule 15 (suite_star2 -> suite_star2 assignment .)
    SEMI            shift and go to state 51

    suite_star2_star               shift and go to state 134

state 71

    (7) suite -> suite_star2 expression .
    (8) suite -> suite_star2 expression . suite_star3
    (11) suite_star3 -> . SEMI
    (12) suite_star3 -> . suite_star3 SEMI

    RBRACE          reduce using rule 7 (suite -> suite_star2 expression .)
    $end            reduce using rule 7 (suite -> suite_star2 expression .)
    SEMI            shift and go to state 136

    suite_star3                    shift and go to state 135

state 72

    (65) and_test_star -> AND . not_test
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    not_test                       shift and go to state 137
    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8

state 73

    (64) and_test -> not_test and_test_star .
    (66) and_test_star -> and_test_star . AND not_test

    OR              reduce using rule 64 (and_test -> not_test and_test_star .)
    COMMA           reduce using rule 64 (and_test -> not_test and_test_star .)
    RPAR            reduce using rule 64 (and_test -> not_test and_test_star .)
    COLON           reduce using rule 64 (and_test -> not_test and_test_star .)
    LBRACE          reduce using rule 64 (and_test -> not_test and_test_star .)
    SEMI            reduce using rule 64 (and_test -> not_test and_test_star .)
    $end            reduce using rule 64 (and_test -> not_test and_test_star .)
    RBRACE          reduce using rule 64 (and_test -> not_test and_test_star .)
    RSQB            reduce using rule 64 (and_test -> not_test and_test_star .)
    RIGHTARROW      reduce using rule 64 (and_test -> not_test and_test_star .)
    ELSE            reduce using rule 64 (and_test -> not_test and_test_star .)
    ELIF            reduce using rule 64 (and_test -> not_test and_test_star .)
    AND             shift and go to state 138


state 74

    (9) suite_star -> SEMI .

    SEMI            reduce using rule 9 (suite_star -> SEMI .)
    $end            reduce using rule 9 (suite_star -> SEMI .)
    RBRACE          reduce using rule 9 (suite_star -> SEMI .)


state 75

    (6) suite -> expression suite_star .
    (10) suite_star -> suite_star . SEMI

    RBRACE          reduce using rule 6 (suite -> expression suite_star .)
    $end            reduce using rule 6 (suite -> expression suite_star .)
    SEMI            shift and go to state 139


state 76

    (97) factor -> PLUS factor .

    STAR            reduce using rule 97 (factor -> PLUS factor .)
    SLASH           reduce using rule 97 (factor -> PLUS factor .)
    PERCENT         reduce using rule 97 (factor -> PLUS factor .)
    DOUBLESLASH     reduce using rule 97 (factor -> PLUS factor .)
    PLUS            reduce using rule 97 (factor -> PLUS factor .)
    MINUS           reduce using rule 97 (factor -> PLUS factor .)
    LESS            reduce using rule 97 (factor -> PLUS factor .)
    GREATER         reduce using rule 97 (factor -> PLUS factor .)
    EQEQUAL         reduce using rule 97 (factor -> PLUS factor .)
    GREATEREQUAL    reduce using rule 97 (factor -> PLUS factor .)
    LESSEQUAL       reduce using rule 97 (factor -> PLUS factor .)
    NOTEQUAL        reduce using rule 97 (factor -> PLUS factor .)
    IN              reduce using rule 97 (factor -> PLUS factor .)
    NOT             reduce using rule 97 (factor -> PLUS factor .)
    AND             reduce using rule 97 (factor -> PLUS factor .)
    OR              reduce using rule 97 (factor -> PLUS factor .)
    SEMI            reduce using rule 97 (factor -> PLUS factor .)
    $end            reduce using rule 97 (factor -> PLUS factor .)
    RPAR            reduce using rule 97 (factor -> PLUS factor .)
    COLON           reduce using rule 97 (factor -> PLUS factor .)
    LBRACE          reduce using rule 97 (factor -> PLUS factor .)
    RBRACE          reduce using rule 97 (factor -> PLUS factor .)
    COMMA           reduce using rule 97 (factor -> PLUS factor .)
    RSQB            reduce using rule 97 (factor -> PLUS factor .)
    RIGHTARROW      reduce using rule 97 (factor -> PLUS factor .)
    ELSE            reduce using rule 97 (factor -> PLUS factor .)
    ELIF            reduce using rule 97 (factor -> PLUS factor .)


state 77

    (83) arith_expr_star -> PLUS . term
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    term                           shift and go to state 140
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    atom                           shift and go to state 21

state 78

    (82) arith_expr -> term arith_expr_star .
    (85) arith_expr_star -> arith_expr_star . PLUS term
    (86) arith_expr_star -> arith_expr_star . MINUS term

    LESS            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    GREATER         reduce using rule 82 (arith_expr -> term arith_expr_star .)
    EQEQUAL         reduce using rule 82 (arith_expr -> term arith_expr_star .)
    GREATEREQUAL    reduce using rule 82 (arith_expr -> term arith_expr_star .)
    LESSEQUAL       reduce using rule 82 (arith_expr -> term arith_expr_star .)
    NOTEQUAL        reduce using rule 82 (arith_expr -> term arith_expr_star .)
    IN              reduce using rule 82 (arith_expr -> term arith_expr_star .)
    NOT             reduce using rule 82 (arith_expr -> term arith_expr_star .)
    AND             reduce using rule 82 (arith_expr -> term arith_expr_star .)
    OR              reduce using rule 82 (arith_expr -> term arith_expr_star .)
    SEMI            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    RBRACE          reduce using rule 82 (arith_expr -> term arith_expr_star .)
    COLON           reduce using rule 82 (arith_expr -> term arith_expr_star .)
    COMMA           reduce using rule 82 (arith_expr -> term arith_expr_star .)
    RSQB            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    LBRACE          reduce using rule 82 (arith_expr -> term arith_expr_star .)
    RPAR            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    ELSE            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    ELIF            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    $end            reduce using rule 82 (arith_expr -> term arith_expr_star .)
    RIGHTARROW      reduce using rule 82 (arith_expr -> term arith_expr_star .)
    PLUS            shift and go to state 141
    MINUS           shift and go to state 142


state 79

    (84) arith_expr_star -> MINUS . term
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    term                           shift and go to state 143
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    atom                           shift and go to state 21

state 80

    (79) comp_op -> IN .

    PLUS            reduce using rule 79 (comp_op -> IN .)
    MINUS           reduce using rule 79 (comp_op -> IN .)
    LPAR            reduce using rule 79 (comp_op -> IN .)
    STRING          reduce using rule 79 (comp_op -> IN .)
    IMAG_NUMBER     reduce using rule 79 (comp_op -> IN .)
    FLOAT_NUMBER    reduce using rule 79 (comp_op -> IN .)
    HEX_NUMBER      reduce using rule 79 (comp_op -> IN .)
    OCT_NUMBER      reduce using rule 79 (comp_op -> IN .)
    DEC_NUMBER      reduce using rule 79 (comp_op -> IN .)
    ATARG           reduce using rule 79 (comp_op -> IN .)
    NAME            reduce using rule 79 (comp_op -> IN .)
    LBRACE          reduce using rule 79 (comp_op -> IN .)


state 81

    (80) comp_op -> NOT . IN

    IN              shift and go to state 144


state 82

    (78) comp_op -> NOTEQUAL .

    PLUS            reduce using rule 78 (comp_op -> NOTEQUAL .)
    MINUS           reduce using rule 78 (comp_op -> NOTEQUAL .)
    LPAR            reduce using rule 78 (comp_op -> NOTEQUAL .)
    STRING          reduce using rule 78 (comp_op -> NOTEQUAL .)
    IMAG_NUMBER     reduce using rule 78 (comp_op -> NOTEQUAL .)
    FLOAT_NUMBER    reduce using rule 78 (comp_op -> NOTEQUAL .)
    HEX_NUMBER      reduce using rule 78 (comp_op -> NOTEQUAL .)
    OCT_NUMBER      reduce using rule 78 (comp_op -> NOTEQUAL .)
    DEC_NUMBER      reduce using rule 78 (comp_op -> NOTEQUAL .)
    ATARG           reduce using rule 78 (comp_op -> NOTEQUAL .)
    NAME            reduce using rule 78 (comp_op -> NOTEQUAL .)
    LBRACE          reduce using rule 78 (comp_op -> NOTEQUAL .)


state 83

    (75) comp_op -> EQEQUAL .

    PLUS            reduce using rule 75 (comp_op -> EQEQUAL .)
    MINUS           reduce using rule 75 (comp_op -> EQEQUAL .)
    LPAR            reduce using rule 75 (comp_op -> EQEQUAL .)
    STRING          reduce using rule 75 (comp_op -> EQEQUAL .)
    IMAG_NUMBER     reduce using rule 75 (comp_op -> EQEQUAL .)
    FLOAT_NUMBER    reduce using rule 75 (comp_op -> EQEQUAL .)
    HEX_NUMBER      reduce using rule 75 (comp_op -> EQEQUAL .)
    OCT_NUMBER      reduce using rule 75 (comp_op -> EQEQUAL .)
    DEC_NUMBER      reduce using rule 75 (comp_op -> EQEQUAL .)
    ATARG           reduce using rule 75 (comp_op -> EQEQUAL .)
    NAME            reduce using rule 75 (comp_op -> EQEQUAL .)
    LBRACE          reduce using rule 75 (comp_op -> EQEQUAL .)


state 84

    (71) comparison_star -> comp_op . arith_expr
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 145

state 85

    (70) comparison -> arith_expr comparison_star .
    (72) comparison_star -> comparison_star . comp_op arith_expr
    (73) comp_op -> . LESS
    (74) comp_op -> . GREATER
    (75) comp_op -> . EQEQUAL
    (76) comp_op -> . GREATEREQUAL
    (77) comp_op -> . LESSEQUAL
    (78) comp_op -> . NOTEQUAL
    (79) comp_op -> . IN
    (80) comp_op -> . NOT IN

    AND             reduce using rule 70 (comparison -> arith_expr comparison_star .)
    OR              reduce using rule 70 (comparison -> arith_expr comparison_star .)
    SEMI            reduce using rule 70 (comparison -> arith_expr comparison_star .)
    $end            reduce using rule 70 (comparison -> arith_expr comparison_star .)
    RBRACE          reduce using rule 70 (comparison -> arith_expr comparison_star .)
    COLON           reduce using rule 70 (comparison -> arith_expr comparison_star .)
    COMMA           reduce using rule 70 (comparison -> arith_expr comparison_star .)
    RSQB            reduce using rule 70 (comparison -> arith_expr comparison_star .)
    LBRACE          reduce using rule 70 (comparison -> arith_expr comparison_star .)
    RPAR            reduce using rule 70 (comparison -> arith_expr comparison_star .)
    RIGHTARROW      reduce using rule 70 (comparison -> arith_expr comparison_star .)
    ELSE            reduce using rule 70 (comparison -> arith_expr comparison_star .)
    ELIF            reduce using rule 70 (comparison -> arith_expr comparison_star .)
    LESS            shift and go to state 87
    GREATER         shift and go to state 89
    EQEQUAL         shift and go to state 83
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 88
    NOTEQUAL        shift and go to state 82
    IN              shift and go to state 80
    NOT             shift and go to state 81

    comp_op                        shift and go to state 146

state 86

    (76) comp_op -> GREATEREQUAL .

    PLUS            reduce using rule 76 (comp_op -> GREATEREQUAL .)
    MINUS           reduce using rule 76 (comp_op -> GREATEREQUAL .)
    LPAR            reduce using rule 76 (comp_op -> GREATEREQUAL .)
    STRING          reduce using rule 76 (comp_op -> GREATEREQUAL .)
    IMAG_NUMBER     reduce using rule 76 (comp_op -> GREATEREQUAL .)
    FLOAT_NUMBER    reduce using rule 76 (comp_op -> GREATEREQUAL .)
    HEX_NUMBER      reduce using rule 76 (comp_op -> GREATEREQUAL .)
    OCT_NUMBER      reduce using rule 76 (comp_op -> GREATEREQUAL .)
    DEC_NUMBER      reduce using rule 76 (comp_op -> GREATEREQUAL .)
    ATARG           reduce using rule 76 (comp_op -> GREATEREQUAL .)
    NAME            reduce using rule 76 (comp_op -> GREATEREQUAL .)
    LBRACE          reduce using rule 76 (comp_op -> GREATEREQUAL .)


state 87

    (73) comp_op -> LESS .

    PLUS            reduce using rule 73 (comp_op -> LESS .)
    MINUS           reduce using rule 73 (comp_op -> LESS .)
    LPAR            reduce using rule 73 (comp_op -> LESS .)
    STRING          reduce using rule 73 (comp_op -> LESS .)
    IMAG_NUMBER     reduce using rule 73 (comp_op -> LESS .)
    FLOAT_NUMBER    reduce using rule 73 (comp_op -> LESS .)
    HEX_NUMBER      reduce using rule 73 (comp_op -> LESS .)
    OCT_NUMBER      reduce using rule 73 (comp_op -> LESS .)
    DEC_NUMBER      reduce using rule 73 (comp_op -> LESS .)
    ATARG           reduce using rule 73 (comp_op -> LESS .)
    NAME            reduce using rule 73 (comp_op -> LESS .)
    LBRACE          reduce using rule 73 (comp_op -> LESS .)


state 88

    (77) comp_op -> LESSEQUAL .

    PLUS            reduce using rule 77 (comp_op -> LESSEQUAL .)
    MINUS           reduce using rule 77 (comp_op -> LESSEQUAL .)
    LPAR            reduce using rule 77 (comp_op -> LESSEQUAL .)
    STRING          reduce using rule 77 (comp_op -> LESSEQUAL .)
    IMAG_NUMBER     reduce using rule 77 (comp_op -> LESSEQUAL .)
    FLOAT_NUMBER    reduce using rule 77 (comp_op -> LESSEQUAL .)
    HEX_NUMBER      reduce using rule 77 (comp_op -> LESSEQUAL .)
    OCT_NUMBER      reduce using rule 77 (comp_op -> LESSEQUAL .)
    DEC_NUMBER      reduce using rule 77 (comp_op -> LESSEQUAL .)
    ATARG           reduce using rule 77 (comp_op -> LESSEQUAL .)
    NAME            reduce using rule 77 (comp_op -> LESSEQUAL .)
    LBRACE          reduce using rule 77 (comp_op -> LESSEQUAL .)


state 89

    (74) comp_op -> GREATER .

    PLUS            reduce using rule 74 (comp_op -> GREATER .)
    MINUS           reduce using rule 74 (comp_op -> GREATER .)
    LPAR            reduce using rule 74 (comp_op -> GREATER .)
    STRING          reduce using rule 74 (comp_op -> GREATER .)
    IMAG_NUMBER     reduce using rule 74 (comp_op -> GREATER .)
    FLOAT_NUMBER    reduce using rule 74 (comp_op -> GREATER .)
    HEX_NUMBER      reduce using rule 74 (comp_op -> GREATER .)
    OCT_NUMBER      reduce using rule 74 (comp_op -> GREATER .)
    DEC_NUMBER      reduce using rule 74 (comp_op -> GREATER .)
    ATARG           reduce using rule 74 (comp_op -> GREATER .)
    NAME            reduce using rule 74 (comp_op -> GREATER .)
    LBRACE          reduce using rule 74 (comp_op -> GREATER .)


state 90

    (44) parameter -> NAME EQUAL . expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 147
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 91

    (38) paramlist -> parameter COMMA .
    (41) paramlist_star -> parameter COMMA .

    RIGHTARROW      reduce using rule 38 (paramlist -> parameter COMMA .)
    RPAR            reduce using rule 38 (paramlist -> parameter COMMA .)
    NAME            reduce using rule 41 (paramlist_star -> parameter COMMA .)


state 92

    (34) fcndef -> LBRACE paramlist RIGHTARROW . suite RBRACE
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NAME            shift and go to state 15
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    lvalues_star                   shift and go to state 18
    suite                          shift and go to state 148
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14
    not_test                       shift and go to state 30

state 93

    (39) paramlist -> paramlist_star parameter .
    (40) paramlist -> paramlist_star parameter . COMMA
    (42) paramlist_star -> paramlist_star parameter . COMMA

    RIGHTARROW      reduce using rule 39 (paramlist -> paramlist_star parameter .)
    RPAR            reduce using rule 39 (paramlist -> paramlist_star parameter .)
    COMMA           shift and go to state 149


state 94

    (107) atom -> LPAR expression RPAR .

    DOUBLESTAR      reduce using rule 107 (atom -> LPAR expression RPAR .)
    LPAR            reduce using rule 107 (atom -> LPAR expression RPAR .)
    LSQB            reduce using rule 107 (atom -> LPAR expression RPAR .)
    DOT             reduce using rule 107 (atom -> LPAR expression RPAR .)
    STAR            reduce using rule 107 (atom -> LPAR expression RPAR .)
    SLASH           reduce using rule 107 (atom -> LPAR expression RPAR .)
    PERCENT         reduce using rule 107 (atom -> LPAR expression RPAR .)
    DOUBLESLASH     reduce using rule 107 (atom -> LPAR expression RPAR .)
    PLUS            reduce using rule 107 (atom -> LPAR expression RPAR .)
    MINUS           reduce using rule 107 (atom -> LPAR expression RPAR .)
    LESS            reduce using rule 107 (atom -> LPAR expression RPAR .)
    GREATER         reduce using rule 107 (atom -> LPAR expression RPAR .)
    EQEQUAL         reduce using rule 107 (atom -> LPAR expression RPAR .)
    GREATEREQUAL    reduce using rule 107 (atom -> LPAR expression RPAR .)
    LESSEQUAL       reduce using rule 107 (atom -> LPAR expression RPAR .)
    NOTEQUAL        reduce using rule 107 (atom -> LPAR expression RPAR .)
    IN              reduce using rule 107 (atom -> LPAR expression RPAR .)
    NOT             reduce using rule 107 (atom -> LPAR expression RPAR .)
    AND             reduce using rule 107 (atom -> LPAR expression RPAR .)
    OR              reduce using rule 107 (atom -> LPAR expression RPAR .)
    COLON           reduce using rule 107 (atom -> LPAR expression RPAR .)
    LBRACE          reduce using rule 107 (atom -> LPAR expression RPAR .)
    SEMI            reduce using rule 107 (atom -> LPAR expression RPAR .)
    $end            reduce using rule 107 (atom -> LPAR expression RPAR .)
    RBRACE          reduce using rule 107 (atom -> LPAR expression RPAR .)
    RPAR            reduce using rule 107 (atom -> LPAR expression RPAR .)
    COMMA           reduce using rule 107 (atom -> LPAR expression RPAR .)
    RSQB            reduce using rule 107 (atom -> LPAR expression RPAR .)
    RIGHTARROW      reduce using rule 107 (atom -> LPAR expression RPAR .)
    ELSE            reduce using rule 107 (atom -> LPAR expression RPAR .)
    ELIF            reduce using rule 107 (atom -> LPAR expression RPAR .)


state 95

    (108) atom -> fcndef LPAR RPAR .

    DOUBLESTAR      reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    LPAR            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    LSQB            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    DOT             reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    STAR            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    SLASH           reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    PERCENT         reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    DOUBLESLASH     reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    PLUS            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    MINUS           reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    LESS            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    GREATER         reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    EQEQUAL         reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    GREATEREQUAL    reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    LESSEQUAL       reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    NOTEQUAL        reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    IN              reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    NOT             reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    AND             reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    OR              reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    COLON           reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    LBRACE          reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    SEMI            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    $end            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    RBRACE          reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    RPAR            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    COMMA           reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    RSQB            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    RIGHTARROW      reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    ELSE            reduce using rule 108 (atom -> fcndef LPAR RPAR .)
    ELIF            reduce using rule 108 (atom -> fcndef LPAR RPAR .)


state 96

    (141) arglist -> arglist_star . argument
    (142) arglist -> arglist_star . argument COMMA
    (145) arglist_star -> arglist_star . argument COMMA
    (146) argument -> . expression
    (147) argument -> . NAME EQUAL expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    NAME            shift and go to state 150
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    argument                       shift and go to state 151
    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 100
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 97

    (147) argument -> NAME . EQUAL expression
    (43) parameter -> NAME .
    (44) parameter -> NAME . EQUAL expression
    (117) atom -> NAME .

    EQUAL           shift and go to state 152
    RIGHTARROW      reduce using rule 43 (parameter -> NAME .)
    DOUBLESTAR      reduce using rule 117 (atom -> NAME .)
    LPAR            reduce using rule 117 (atom -> NAME .)
    LSQB            reduce using rule 117 (atom -> NAME .)
    DOT             reduce using rule 117 (atom -> NAME .)
    STAR            reduce using rule 117 (atom -> NAME .)
    SLASH           reduce using rule 117 (atom -> NAME .)
    PERCENT         reduce using rule 117 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 117 (atom -> NAME .)
    PLUS            reduce using rule 117 (atom -> NAME .)
    MINUS           reduce using rule 117 (atom -> NAME .)
    LESS            reduce using rule 117 (atom -> NAME .)
    GREATER         reduce using rule 117 (atom -> NAME .)
    EQEQUAL         reduce using rule 117 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 117 (atom -> NAME .)
    LESSEQUAL       reduce using rule 117 (atom -> NAME .)
    NOTEQUAL        reduce using rule 117 (atom -> NAME .)
    IN              reduce using rule 117 (atom -> NAME .)
    NOT             reduce using rule 117 (atom -> NAME .)
    AND             reduce using rule 117 (atom -> NAME .)
    OR              reduce using rule 117 (atom -> NAME .)
    COMMA           reduce using rule 117 (atom -> NAME .)
    RPAR            reduce using rule 117 (atom -> NAME .)


state 98

    (35) fcn1def -> parameter . RIGHTARROW expression
    (36) fcn1def -> parameter . RIGHTARROW LBRACE suite RBRACE

    RIGHTARROW      shift and go to state 153


state 99

    (139) arglist -> argument .
    (140) arglist -> argument . COMMA
    (144) arglist_star -> argument . COMMA

    RPAR            reduce using rule 139 (arglist -> argument .)
    COMMA           shift and go to state 154


state 100

    (146) argument -> expression .

    COMMA           reduce using rule 146 (argument -> expression .)
    RPAR            reduce using rule 146 (argument -> expression .)


state 101

    (143) arglist -> fcn1def .

    RPAR            reduce using rule 143 (arglist -> fcn1def .)


state 102

    (109) atom -> fcndef LPAR arglist . RPAR

    RPAR            shift and go to state 155


state 103

    (89) term_star -> STAR factor .

    STAR            reduce using rule 89 (term_star -> STAR factor .)
    SLASH           reduce using rule 89 (term_star -> STAR factor .)
    PERCENT         reduce using rule 89 (term_star -> STAR factor .)
    DOUBLESLASH     reduce using rule 89 (term_star -> STAR factor .)
    PLUS            reduce using rule 89 (term_star -> STAR factor .)
    MINUS           reduce using rule 89 (term_star -> STAR factor .)
    LESS            reduce using rule 89 (term_star -> STAR factor .)
    GREATER         reduce using rule 89 (term_star -> STAR factor .)
    EQEQUAL         reduce using rule 89 (term_star -> STAR factor .)
    GREATEREQUAL    reduce using rule 89 (term_star -> STAR factor .)
    LESSEQUAL       reduce using rule 89 (term_star -> STAR factor .)
    NOTEQUAL        reduce using rule 89 (term_star -> STAR factor .)
    IN              reduce using rule 89 (term_star -> STAR factor .)
    NOT             reduce using rule 89 (term_star -> STAR factor .)
    AND             reduce using rule 89 (term_star -> STAR factor .)
    OR              reduce using rule 89 (term_star -> STAR factor .)
    SEMI            reduce using rule 89 (term_star -> STAR factor .)
    $end            reduce using rule 89 (term_star -> STAR factor .)
    RPAR            reduce using rule 89 (term_star -> STAR factor .)
    COLON           reduce using rule 89 (term_star -> STAR factor .)
    LBRACE          reduce using rule 89 (term_star -> STAR factor .)
    RBRACE          reduce using rule 89 (term_star -> STAR factor .)
    COMMA           reduce using rule 89 (term_star -> STAR factor .)
    RSQB            reduce using rule 89 (term_star -> STAR factor .)
    RIGHTARROW      reduce using rule 89 (term_star -> STAR factor .)
    ELSE            reduce using rule 89 (term_star -> STAR factor .)
    ELIF            reduce using rule 89 (term_star -> STAR factor .)


state 104

    (93) term_star -> term_star STAR . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 156

state 105

    (96) term_star -> term_star DOUBLESLASH . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 157

state 106

    (95) term_star -> term_star PERCENT . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 158

state 107

    (94) term_star -> term_star SLASH . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 159

state 108

    (92) term_star -> DOUBLESLASH factor .

    STAR            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    SLASH           reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    PERCENT         reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    DOUBLESLASH     reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    PLUS            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    MINUS           reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    LESS            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    GREATER         reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    EQEQUAL         reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    GREATEREQUAL    reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    LESSEQUAL       reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    NOTEQUAL        reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    IN              reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    NOT             reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    AND             reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    OR              reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    SEMI            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    $end            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    RPAR            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    COLON           reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    LBRACE          reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    RBRACE          reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    COMMA           reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    RSQB            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    RIGHTARROW      reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    ELSE            reduce using rule 92 (term_star -> DOUBLESLASH factor .)
    ELIF            reduce using rule 92 (term_star -> DOUBLESLASH factor .)


state 109

    (91) term_star -> PERCENT factor .

    STAR            reduce using rule 91 (term_star -> PERCENT factor .)
    SLASH           reduce using rule 91 (term_star -> PERCENT factor .)
    PERCENT         reduce using rule 91 (term_star -> PERCENT factor .)
    DOUBLESLASH     reduce using rule 91 (term_star -> PERCENT factor .)
    PLUS            reduce using rule 91 (term_star -> PERCENT factor .)
    MINUS           reduce using rule 91 (term_star -> PERCENT factor .)
    LESS            reduce using rule 91 (term_star -> PERCENT factor .)
    GREATER         reduce using rule 91 (term_star -> PERCENT factor .)
    EQEQUAL         reduce using rule 91 (term_star -> PERCENT factor .)
    GREATEREQUAL    reduce using rule 91 (term_star -> PERCENT factor .)
    LESSEQUAL       reduce using rule 91 (term_star -> PERCENT factor .)
    NOTEQUAL        reduce using rule 91 (term_star -> PERCENT factor .)
    IN              reduce using rule 91 (term_star -> PERCENT factor .)
    NOT             reduce using rule 91 (term_star -> PERCENT factor .)
    AND             reduce using rule 91 (term_star -> PERCENT factor .)
    OR              reduce using rule 91 (term_star -> PERCENT factor .)
    SEMI            reduce using rule 91 (term_star -> PERCENT factor .)
    $end            reduce using rule 91 (term_star -> PERCENT factor .)
    RPAR            reduce using rule 91 (term_star -> PERCENT factor .)
    COLON           reduce using rule 91 (term_star -> PERCENT factor .)
    LBRACE          reduce using rule 91 (term_star -> PERCENT factor .)
    RBRACE          reduce using rule 91 (term_star -> PERCENT factor .)
    COMMA           reduce using rule 91 (term_star -> PERCENT factor .)
    RSQB            reduce using rule 91 (term_star -> PERCENT factor .)
    RIGHTARROW      reduce using rule 91 (term_star -> PERCENT factor .)
    ELSE            reduce using rule 91 (term_star -> PERCENT factor .)
    ELIF            reduce using rule 91 (term_star -> PERCENT factor .)


state 110

    (90) term_star -> SLASH factor .

    STAR            reduce using rule 90 (term_star -> SLASH factor .)
    SLASH           reduce using rule 90 (term_star -> SLASH factor .)
    PERCENT         reduce using rule 90 (term_star -> SLASH factor .)
    DOUBLESLASH     reduce using rule 90 (term_star -> SLASH factor .)
    PLUS            reduce using rule 90 (term_star -> SLASH factor .)
    MINUS           reduce using rule 90 (term_star -> SLASH factor .)
    LESS            reduce using rule 90 (term_star -> SLASH factor .)
    GREATER         reduce using rule 90 (term_star -> SLASH factor .)
    EQEQUAL         reduce using rule 90 (term_star -> SLASH factor .)
    GREATEREQUAL    reduce using rule 90 (term_star -> SLASH factor .)
    LESSEQUAL       reduce using rule 90 (term_star -> SLASH factor .)
    NOTEQUAL        reduce using rule 90 (term_star -> SLASH factor .)
    IN              reduce using rule 90 (term_star -> SLASH factor .)
    NOT             reduce using rule 90 (term_star -> SLASH factor .)
    AND             reduce using rule 90 (term_star -> SLASH factor .)
    OR              reduce using rule 90 (term_star -> SLASH factor .)
    SEMI            reduce using rule 90 (term_star -> SLASH factor .)
    $end            reduce using rule 90 (term_star -> SLASH factor .)
    RPAR            reduce using rule 90 (term_star -> SLASH factor .)
    COLON           reduce using rule 90 (term_star -> SLASH factor .)
    LBRACE          reduce using rule 90 (term_star -> SLASH factor .)
    RBRACE          reduce using rule 90 (term_star -> SLASH factor .)
    COMMA           reduce using rule 90 (term_star -> SLASH factor .)
    RSQB            reduce using rule 90 (term_star -> SLASH factor .)
    RIGHTARROW      reduce using rule 90 (term_star -> SLASH factor .)
    ELSE            reduce using rule 90 (term_star -> SLASH factor .)
    ELIF            reduce using rule 90 (term_star -> SLASH factor .)


state 111

    (27) fcnndef -> DEF NAME LPAR . paramlist RPAR closed_exprsuite
    (37) paramlist -> . parameter
    (38) paramlist -> . parameter COMMA
    (39) paramlist -> . paramlist_star parameter
    (40) paramlist -> . paramlist_star parameter COMMA
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (41) paramlist_star -> . parameter COMMA
    (42) paramlist_star -> . paramlist_star parameter COMMA

    NAME            shift and go to state 37

    parameter                      shift and go to state 38
    paramlist                      shift and go to state 160
    paramlist_star                 shift and go to state 40

state 112

    (18) suite_star2_star -> suite_star2_star SEMI .

    SEMI            reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    IF              reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    LBRACE          reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    NAME            reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    DEF             reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    NOT             reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    PLUS            reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    MINUS           reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    LPAR            reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    STRING          reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    IMAG_NUMBER     reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    FLOAT_NUMBER    reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    HEX_NUMBER      reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    OCT_NUMBER      reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    DEC_NUMBER      reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)
    ATARG           reduce using rule 18 (suite_star2_star -> suite_star2_star SEMI .)


state 113

    (61) or_test_star -> OR and_test .

    OR              reduce using rule 61 (or_test_star -> OR and_test .)
    SEMI            reduce using rule 61 (or_test_star -> OR and_test .)
    $end            reduce using rule 61 (or_test_star -> OR and_test .)
    RPAR            reduce using rule 61 (or_test_star -> OR and_test .)
    COLON           reduce using rule 61 (or_test_star -> OR and_test .)
    LBRACE          reduce using rule 61 (or_test_star -> OR and_test .)
    RBRACE          reduce using rule 61 (or_test_star -> OR and_test .)
    COMMA           reduce using rule 61 (or_test_star -> OR and_test .)
    RSQB            reduce using rule 61 (or_test_star -> OR and_test .)
    RIGHTARROW      reduce using rule 61 (or_test_star -> OR and_test .)
    ELSE            reduce using rule 61 (or_test_star -> OR and_test .)
    ELIF            reduce using rule 61 (or_test_star -> OR and_test .)


state 114

    (62) or_test_star -> or_test_star OR . and_test
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    not_test                       shift and go to state 30
    power                          shift and go to state 24
    atom                           shift and go to state 21
    and_test                       shift and go to state 161
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8

state 115

    (22) lvalues -> lvalues_star NAME COMMA .
    (24) lvalues_star -> lvalues_star NAME COMMA .

    EQUAL           reduce using rule 22 (lvalues -> lvalues_star NAME COMMA .)
    NAME            reduce using rule 24 (lvalues_star -> lvalues_star NAME COMMA .)


state 116

    (121) trailer -> DOT NAME .

    DOUBLESTAR      reduce using rule 121 (trailer -> DOT NAME .)
    LPAR            reduce using rule 121 (trailer -> DOT NAME .)
    LSQB            reduce using rule 121 (trailer -> DOT NAME .)
    DOT             reduce using rule 121 (trailer -> DOT NAME .)
    STAR            reduce using rule 121 (trailer -> DOT NAME .)
    SLASH           reduce using rule 121 (trailer -> DOT NAME .)
    PERCENT         reduce using rule 121 (trailer -> DOT NAME .)
    DOUBLESLASH     reduce using rule 121 (trailer -> DOT NAME .)
    PLUS            reduce using rule 121 (trailer -> DOT NAME .)
    MINUS           reduce using rule 121 (trailer -> DOT NAME .)
    LESS            reduce using rule 121 (trailer -> DOT NAME .)
    GREATER         reduce using rule 121 (trailer -> DOT NAME .)
    EQEQUAL         reduce using rule 121 (trailer -> DOT NAME .)
    GREATEREQUAL    reduce using rule 121 (trailer -> DOT NAME .)
    LESSEQUAL       reduce using rule 121 (trailer -> DOT NAME .)
    NOTEQUAL        reduce using rule 121 (trailer -> DOT NAME .)
    IN              reduce using rule 121 (trailer -> DOT NAME .)
    NOT             reduce using rule 121 (trailer -> DOT NAME .)
    AND             reduce using rule 121 (trailer -> DOT NAME .)
    OR              reduce using rule 121 (trailer -> DOT NAME .)
    SEMI            reduce using rule 121 (trailer -> DOT NAME .)
    $end            reduce using rule 121 (trailer -> DOT NAME .)
    RPAR            reduce using rule 121 (trailer -> DOT NAME .)
    COLON           reduce using rule 121 (trailer -> DOT NAME .)
    LBRACE          reduce using rule 121 (trailer -> DOT NAME .)
    RBRACE          reduce using rule 121 (trailer -> DOT NAME .)
    COMMA           reduce using rule 121 (trailer -> DOT NAME .)
    RSQB            reduce using rule 121 (trailer -> DOT NAME .)
    RIGHTARROW      reduce using rule 121 (trailer -> DOT NAME .)
    ELSE            reduce using rule 121 (trailer -> DOT NAME .)
    ELIF            reduce using rule 121 (trailer -> DOT NAME .)


state 117

    (118) trailer -> LPAR RPAR .

    DOUBLESTAR      reduce using rule 118 (trailer -> LPAR RPAR .)
    LPAR            reduce using rule 118 (trailer -> LPAR RPAR .)
    LSQB            reduce using rule 118 (trailer -> LPAR RPAR .)
    DOT             reduce using rule 118 (trailer -> LPAR RPAR .)
    STAR            reduce using rule 118 (trailer -> LPAR RPAR .)
    SLASH           reduce using rule 118 (trailer -> LPAR RPAR .)
    PERCENT         reduce using rule 118 (trailer -> LPAR RPAR .)
    DOUBLESLASH     reduce using rule 118 (trailer -> LPAR RPAR .)
    PLUS            reduce using rule 118 (trailer -> LPAR RPAR .)
    MINUS           reduce using rule 118 (trailer -> LPAR RPAR .)
    LESS            reduce using rule 118 (trailer -> LPAR RPAR .)
    GREATER         reduce using rule 118 (trailer -> LPAR RPAR .)
    EQEQUAL         reduce using rule 118 (trailer -> LPAR RPAR .)
    GREATEREQUAL    reduce using rule 118 (trailer -> LPAR RPAR .)
    LESSEQUAL       reduce using rule 118 (trailer -> LPAR RPAR .)
    NOTEQUAL        reduce using rule 118 (trailer -> LPAR RPAR .)
    IN              reduce using rule 118 (trailer -> LPAR RPAR .)
    NOT             reduce using rule 118 (trailer -> LPAR RPAR .)
    AND             reduce using rule 118 (trailer -> LPAR RPAR .)
    OR              reduce using rule 118 (trailer -> LPAR RPAR .)
    SEMI            reduce using rule 118 (trailer -> LPAR RPAR .)
    $end            reduce using rule 118 (trailer -> LPAR RPAR .)
    RPAR            reduce using rule 118 (trailer -> LPAR RPAR .)
    COLON           reduce using rule 118 (trailer -> LPAR RPAR .)
    LBRACE          reduce using rule 118 (trailer -> LPAR RPAR .)
    RBRACE          reduce using rule 118 (trailer -> LPAR RPAR .)
    COMMA           reduce using rule 118 (trailer -> LPAR RPAR .)
    RSQB            reduce using rule 118 (trailer -> LPAR RPAR .)
    RIGHTARROW      reduce using rule 118 (trailer -> LPAR RPAR .)
    ELSE            reduce using rule 118 (trailer -> LPAR RPAR .)
    ELIF            reduce using rule 118 (trailer -> LPAR RPAR .)


state 118

    (119) trailer -> LPAR arglist . RPAR

    RPAR            shift and go to state 162


state 119

    (101) power -> atom DOUBLESTAR factor .

    STAR            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    SLASH           reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    PERCENT         reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    DOUBLESLASH     reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    PLUS            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    MINUS           reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    LESS            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    GREATER         reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    EQEQUAL         reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    GREATEREQUAL    reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    LESSEQUAL       reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    NOTEQUAL        reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    IN              reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    NOT             reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    AND             reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    OR              reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    COMMA           reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    RPAR            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    RIGHTARROW      reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    ELSE            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    ELIF            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    SEMI            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    $end            reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    COLON           reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    LBRACE          reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    RBRACE          reduce using rule 101 (power -> atom DOUBLESTAR factor .)
    RSQB            reduce using rule 101 (power -> atom DOUBLESTAR factor .)


state 120

    (122) subscriptlist -> subscript .
    (123) subscriptlist -> subscript . COMMA
    (124) subscriptlist -> subscript . subscriptlist_star
    (125) subscriptlist -> subscript . subscriptlist_star COMMA
    (126) subscriptlist_star -> . COMMA subscript
    (127) subscriptlist_star -> . subscriptlist_star COMMA subscript

    RSQB            reduce using rule 122 (subscriptlist -> subscript .)
    COMMA           shift and go to state 163

    subscriptlist_star             shift and go to state 164

state 121

    (129) subscript -> COLON .
    (130) subscript -> COLON . sliceop
    (131) subscript -> COLON . expression
    (132) subscript -> COLON . expression sliceop
    (137) sliceop -> . COLON
    (138) sliceop -> . COLON expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    COMMA           reduce using rule 129 (subscript -> COLON .)
    RSQB            reduce using rule 129 (subscript -> COLON .)
    COLON           shift and go to state 165
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 167
    sliceop                        shift and go to state 166
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 122

    (128) subscript -> expression .
    (133) subscript -> expression . COLON
    (134) subscript -> expression . COLON sliceop
    (135) subscript -> expression . COLON expression
    (136) subscript -> expression . COLON expression sliceop

    COMMA           reduce using rule 128 (subscript -> expression .)
    RSQB            reduce using rule 128 (subscript -> expression .)
    COLON           shift and go to state 168


state 123

    (120) trailer -> LSQB subscriptlist . RSQB

    RSQB            shift and go to state 169


state 124

    (103) power -> atom power_star DOUBLESTAR . factor
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    power                          shift and go to state 24
    atom                           shift and go to state 21
    fcndef                         shift and go to state 58
    factor                         shift and go to state 170

state 125

    (105) power_star -> power_star trailer .

    DOUBLESTAR      reduce using rule 105 (power_star -> power_star trailer .)
    LPAR            reduce using rule 105 (power_star -> power_star trailer .)
    LSQB            reduce using rule 105 (power_star -> power_star trailer .)
    DOT             reduce using rule 105 (power_star -> power_star trailer .)
    STAR            reduce using rule 105 (power_star -> power_star trailer .)
    SLASH           reduce using rule 105 (power_star -> power_star trailer .)
    PERCENT         reduce using rule 105 (power_star -> power_star trailer .)
    DOUBLESLASH     reduce using rule 105 (power_star -> power_star trailer .)
    PLUS            reduce using rule 105 (power_star -> power_star trailer .)
    MINUS           reduce using rule 105 (power_star -> power_star trailer .)
    LESS            reduce using rule 105 (power_star -> power_star trailer .)
    GREATER         reduce using rule 105 (power_star -> power_star trailer .)
    EQEQUAL         reduce using rule 105 (power_star -> power_star trailer .)
    GREATEREQUAL    reduce using rule 105 (power_star -> power_star trailer .)
    LESSEQUAL       reduce using rule 105 (power_star -> power_star trailer .)
    NOTEQUAL        reduce using rule 105 (power_star -> power_star trailer .)
    IN              reduce using rule 105 (power_star -> power_star trailer .)
    NOT             reduce using rule 105 (power_star -> power_star trailer .)
    AND             reduce using rule 105 (power_star -> power_star trailer .)
    OR              reduce using rule 105 (power_star -> power_star trailer .)
    SEMI            reduce using rule 105 (power_star -> power_star trailer .)
    $end            reduce using rule 105 (power_star -> power_star trailer .)
    RPAR            reduce using rule 105 (power_star -> power_star trailer .)
    COLON           reduce using rule 105 (power_star -> power_star trailer .)
    LBRACE          reduce using rule 105 (power_star -> power_star trailer .)
    RBRACE          reduce using rule 105 (power_star -> power_star trailer .)
    COMMA           reduce using rule 105 (power_star -> power_star trailer .)
    RSQB            reduce using rule 105 (power_star -> power_star trailer .)
    RIGHTARROW      reduce using rule 105 (power_star -> power_star trailer .)
    ELSE            reduce using rule 105 (power_star -> power_star trailer .)
    ELIF            reduce using rule 105 (power_star -> power_star trailer .)


state 126

    (46) exprsuite -> LBRACE . suite RBRACE
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NAME            shift and go to state 15
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    lvalues_star                   shift and go to state 18
    suite                          shift and go to state 171
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14
    not_test                       shift and go to state 30

state 127

    (45) exprsuite -> COLON . expression
    (47) exprsuite -> COLON . LBRACE suite RBRACE
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    LBRACE          shift and go to state 172
    IF              shift and go to state 22
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 173
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 128

    (51) ifblock -> IF expression exprsuite . ELSE exprsuite
    (52) ifblock -> IF expression exprsuite . ifblock_star ELSE exprsuite
    (53) ifblock_star -> . ELIF expression exprsuite
    (54) ifblock_star -> . ifblock_star ELIF expression exprsuite

    ELSE            shift and go to state 175
    ELIF            shift and go to state 174

    ifblock_star                   shift and go to state 176

state 129

    (31) closed_expression -> closed_ifblock .

    SEMI            reduce using rule 31 (closed_expression -> closed_ifblock .)
    IF              reduce using rule 31 (closed_expression -> closed_ifblock .)
    LBRACE          reduce using rule 31 (closed_expression -> closed_ifblock .)
    NAME            reduce using rule 31 (closed_expression -> closed_ifblock .)
    DEF             reduce using rule 31 (closed_expression -> closed_ifblock .)
    NOT             reduce using rule 31 (closed_expression -> closed_ifblock .)
    PLUS            reduce using rule 31 (closed_expression -> closed_ifblock .)
    MINUS           reduce using rule 31 (closed_expression -> closed_ifblock .)
    LPAR            reduce using rule 31 (closed_expression -> closed_ifblock .)
    STRING          reduce using rule 31 (closed_expression -> closed_ifblock .)
    IMAG_NUMBER     reduce using rule 31 (closed_expression -> closed_ifblock .)
    FLOAT_NUMBER    reduce using rule 31 (closed_expression -> closed_ifblock .)
    HEX_NUMBER      reduce using rule 31 (closed_expression -> closed_ifblock .)
    OCT_NUMBER      reduce using rule 31 (closed_expression -> closed_ifblock .)
    DEC_NUMBER      reduce using rule 31 (closed_expression -> closed_ifblock .)
    ATARG           reduce using rule 31 (closed_expression -> closed_ifblock .)


state 130

    (32) closed_expression -> fcndef .
    (108) atom -> fcndef . LPAR RPAR
    (109) atom -> fcndef . LPAR arglist RPAR

  ! shift/reduce conflict for LPAR resolved as shift
    SEMI            reduce using rule 32 (closed_expression -> fcndef .)
    IF              reduce using rule 32 (closed_expression -> fcndef .)
    LBRACE          reduce using rule 32 (closed_expression -> fcndef .)
    NAME            reduce using rule 32 (closed_expression -> fcndef .)
    DEF             reduce using rule 32 (closed_expression -> fcndef .)
    NOT             reduce using rule 32 (closed_expression -> fcndef .)
    PLUS            reduce using rule 32 (closed_expression -> fcndef .)
    MINUS           reduce using rule 32 (closed_expression -> fcndef .)
    STRING          reduce using rule 32 (closed_expression -> fcndef .)
    IMAG_NUMBER     reduce using rule 32 (closed_expression -> fcndef .)
    FLOAT_NUMBER    reduce using rule 32 (closed_expression -> fcndef .)
    HEX_NUMBER      reduce using rule 32 (closed_expression -> fcndef .)
    OCT_NUMBER      reduce using rule 32 (closed_expression -> fcndef .)
    DEC_NUMBER      reduce using rule 32 (closed_expression -> fcndef .)
    ATARG           reduce using rule 32 (closed_expression -> fcndef .)
    LPAR            shift and go to state 44

  ! LPAR            [ reduce using rule 32 (closed_expression -> fcndef .) ]


state 131

    (33) closed_expression -> or_test . SEMI

    SEMI            shift and go to state 177


state 132

    (55) closed_ifblock -> IF . expression exprsuite ELSE closed_exprsuite
    (56) closed_ifblock -> IF . expression exprsuite closed_ifblock_star ELSE closed_exprsuite
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 178
    and_test                       shift and go to state 14
    term                           shift and go to state 33
    factor                         shift and go to state 6

state 133

    (25) assignment -> lvalues EQUAL closed_expression .

    SEMI            reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    IF              reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    LBRACE          reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    NAME            reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    DEF             reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    NOT             reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    PLUS            reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    MINUS           reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    LPAR            reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    STRING          reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    IMAG_NUMBER     reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    FLOAT_NUMBER    reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    HEX_NUMBER      reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    OCT_NUMBER      reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    DEC_NUMBER      reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)
    ATARG           reduce using rule 25 (assignment -> lvalues EQUAL closed_expression .)


state 134

    (16) suite_star2 -> suite_star2 assignment suite_star2_star .
    (18) suite_star2_star -> suite_star2_star . SEMI

    IF              reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    LBRACE          reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    NAME            reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    DEF             reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    NOT             reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    PLUS            reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    MINUS           reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    LPAR            reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    STRING          reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    IMAG_NUMBER     reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    FLOAT_NUMBER    reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    HEX_NUMBER      reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    OCT_NUMBER      reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    DEC_NUMBER      reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    ATARG           reduce using rule 16 (suite_star2 -> suite_star2 assignment suite_star2_star .)
    SEMI            shift and go to state 112


state 135

    (8) suite -> suite_star2 expression suite_star3 .
    (12) suite_star3 -> suite_star3 . SEMI

    RBRACE          reduce using rule 8 (suite -> suite_star2 expression suite_star3 .)
    $end            reduce using rule 8 (suite -> suite_star2 expression suite_star3 .)
    SEMI            shift and go to state 179


state 136

    (11) suite_star3 -> SEMI .

    SEMI            reduce using rule 11 (suite_star3 -> SEMI .)
    $end            reduce using rule 11 (suite_star3 -> SEMI .)
    RBRACE          reduce using rule 11 (suite_star3 -> SEMI .)


state 137

    (65) and_test_star -> AND not_test .

    AND             reduce using rule 65 (and_test_star -> AND not_test .)
    OR              reduce using rule 65 (and_test_star -> AND not_test .)
    SEMI            reduce using rule 65 (and_test_star -> AND not_test .)
    $end            reduce using rule 65 (and_test_star -> AND not_test .)
    RPAR            reduce using rule 65 (and_test_star -> AND not_test .)
    COLON           reduce using rule 65 (and_test_star -> AND not_test .)
    LBRACE          reduce using rule 65 (and_test_star -> AND not_test .)
    RBRACE          reduce using rule 65 (and_test_star -> AND not_test .)
    COMMA           reduce using rule 65 (and_test_star -> AND not_test .)
    RSQB            reduce using rule 65 (and_test_star -> AND not_test .)
    RIGHTARROW      reduce using rule 65 (and_test_star -> AND not_test .)
    ELSE            reduce using rule 65 (and_test_star -> AND not_test .)
    ELIF            reduce using rule 65 (and_test_star -> AND not_test .)


state 138

    (66) and_test_star -> and_test_star AND . not_test
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    not_test                       shift and go to state 180
    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8

state 139

    (10) suite_star -> suite_star SEMI .

    SEMI            reduce using rule 10 (suite_star -> suite_star SEMI .)
    $end            reduce using rule 10 (suite_star -> suite_star SEMI .)
    RBRACE          reduce using rule 10 (suite_star -> suite_star SEMI .)


state 140

    (83) arith_expr_star -> PLUS term .

    PLUS            reduce using rule 83 (arith_expr_star -> PLUS term .)
    MINUS           reduce using rule 83 (arith_expr_star -> PLUS term .)
    LESS            reduce using rule 83 (arith_expr_star -> PLUS term .)
    GREATER         reduce using rule 83 (arith_expr_star -> PLUS term .)
    EQEQUAL         reduce using rule 83 (arith_expr_star -> PLUS term .)
    GREATEREQUAL    reduce using rule 83 (arith_expr_star -> PLUS term .)
    LESSEQUAL       reduce using rule 83 (arith_expr_star -> PLUS term .)
    NOTEQUAL        reduce using rule 83 (arith_expr_star -> PLUS term .)
    IN              reduce using rule 83 (arith_expr_star -> PLUS term .)
    NOT             reduce using rule 83 (arith_expr_star -> PLUS term .)
    AND             reduce using rule 83 (arith_expr_star -> PLUS term .)
    OR              reduce using rule 83 (arith_expr_star -> PLUS term .)
    SEMI            reduce using rule 83 (arith_expr_star -> PLUS term .)
    $end            reduce using rule 83 (arith_expr_star -> PLUS term .)
    RPAR            reduce using rule 83 (arith_expr_star -> PLUS term .)
    COLON           reduce using rule 83 (arith_expr_star -> PLUS term .)
    LBRACE          reduce using rule 83 (arith_expr_star -> PLUS term .)
    RBRACE          reduce using rule 83 (arith_expr_star -> PLUS term .)
    COMMA           reduce using rule 83 (arith_expr_star -> PLUS term .)
    RSQB            reduce using rule 83 (arith_expr_star -> PLUS term .)
    RIGHTARROW      reduce using rule 83 (arith_expr_star -> PLUS term .)
    ELSE            reduce using rule 83 (arith_expr_star -> PLUS term .)
    ELIF            reduce using rule 83 (arith_expr_star -> PLUS term .)


state 141

    (85) arith_expr_star -> arith_expr_star PLUS . term
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 181
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6

state 142

    (86) arith_expr_star -> arith_expr_star MINUS . term
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 182
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6

state 143

    (84) arith_expr_star -> MINUS term .

    PLUS            reduce using rule 84 (arith_expr_star -> MINUS term .)
    MINUS           reduce using rule 84 (arith_expr_star -> MINUS term .)
    LESS            reduce using rule 84 (arith_expr_star -> MINUS term .)
    GREATER         reduce using rule 84 (arith_expr_star -> MINUS term .)
    EQEQUAL         reduce using rule 84 (arith_expr_star -> MINUS term .)
    GREATEREQUAL    reduce using rule 84 (arith_expr_star -> MINUS term .)
    LESSEQUAL       reduce using rule 84 (arith_expr_star -> MINUS term .)
    NOTEQUAL        reduce using rule 84 (arith_expr_star -> MINUS term .)
    IN              reduce using rule 84 (arith_expr_star -> MINUS term .)
    NOT             reduce using rule 84 (arith_expr_star -> MINUS term .)
    AND             reduce using rule 84 (arith_expr_star -> MINUS term .)
    OR              reduce using rule 84 (arith_expr_star -> MINUS term .)
    SEMI            reduce using rule 84 (arith_expr_star -> MINUS term .)
    $end            reduce using rule 84 (arith_expr_star -> MINUS term .)
    RPAR            reduce using rule 84 (arith_expr_star -> MINUS term .)
    COLON           reduce using rule 84 (arith_expr_star -> MINUS term .)
    LBRACE          reduce using rule 84 (arith_expr_star -> MINUS term .)
    RBRACE          reduce using rule 84 (arith_expr_star -> MINUS term .)
    COMMA           reduce using rule 84 (arith_expr_star -> MINUS term .)
    RSQB            reduce using rule 84 (arith_expr_star -> MINUS term .)
    RIGHTARROW      reduce using rule 84 (arith_expr_star -> MINUS term .)
    ELSE            reduce using rule 84 (arith_expr_star -> MINUS term .)
    ELIF            reduce using rule 84 (arith_expr_star -> MINUS term .)


state 144

    (80) comp_op -> NOT IN .

    PLUS            reduce using rule 80 (comp_op -> NOT IN .)
    MINUS           reduce using rule 80 (comp_op -> NOT IN .)
    LPAR            reduce using rule 80 (comp_op -> NOT IN .)
    STRING          reduce using rule 80 (comp_op -> NOT IN .)
    IMAG_NUMBER     reduce using rule 80 (comp_op -> NOT IN .)
    FLOAT_NUMBER    reduce using rule 80 (comp_op -> NOT IN .)
    HEX_NUMBER      reduce using rule 80 (comp_op -> NOT IN .)
    OCT_NUMBER      reduce using rule 80 (comp_op -> NOT IN .)
    DEC_NUMBER      reduce using rule 80 (comp_op -> NOT IN .)
    ATARG           reduce using rule 80 (comp_op -> NOT IN .)
    NAME            reduce using rule 80 (comp_op -> NOT IN .)
    LBRACE          reduce using rule 80 (comp_op -> NOT IN .)


state 145

    (71) comparison_star -> comp_op arith_expr .

    LESS            reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    GREATER         reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    EQEQUAL         reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    GREATEREQUAL    reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    LESSEQUAL       reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    NOTEQUAL        reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    IN              reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    NOT             reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    AND             reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    OR              reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    SEMI            reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    $end            reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    RPAR            reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    COLON           reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    LBRACE          reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    RBRACE          reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    COMMA           reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    RSQB            reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    RIGHTARROW      reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    ELSE            reduce using rule 71 (comparison_star -> comp_op arith_expr .)
    ELIF            reduce using rule 71 (comparison_star -> comp_op arith_expr .)


state 146

    (72) comparison_star -> comparison_star comp_op . arith_expr
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE

    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43
    LBRACE          shift and go to state 1

    atom                           shift and go to state 21
    power                          shift and go to state 24
    term                           shift and go to state 33
    fcndef                         shift and go to state 58
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 183

state 147

    (44) parameter -> NAME EQUAL expression .

    COMMA           reduce using rule 44 (parameter -> NAME EQUAL expression .)
    RIGHTARROW      reduce using rule 44 (parameter -> NAME EQUAL expression .)
    RPAR            reduce using rule 44 (parameter -> NAME EQUAL expression .)


state 148

    (34) fcndef -> LBRACE paramlist RIGHTARROW suite . RBRACE

    RBRACE          shift and go to state 184


state 149

    (40) paramlist -> paramlist_star parameter COMMA .
    (42) paramlist_star -> paramlist_star parameter COMMA .

    RIGHTARROW      reduce using rule 40 (paramlist -> paramlist_star parameter COMMA .)
    RPAR            reduce using rule 40 (paramlist -> paramlist_star parameter COMMA .)
    NAME            reduce using rule 42 (paramlist_star -> paramlist_star parameter COMMA .)


state 150

    (147) argument -> NAME . EQUAL expression
    (117) atom -> NAME .

    EQUAL           shift and go to state 185
    DOUBLESTAR      reduce using rule 117 (atom -> NAME .)
    LPAR            reduce using rule 117 (atom -> NAME .)
    LSQB            reduce using rule 117 (atom -> NAME .)
    DOT             reduce using rule 117 (atom -> NAME .)
    STAR            reduce using rule 117 (atom -> NAME .)
    SLASH           reduce using rule 117 (atom -> NAME .)
    PERCENT         reduce using rule 117 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 117 (atom -> NAME .)
    PLUS            reduce using rule 117 (atom -> NAME .)
    MINUS           reduce using rule 117 (atom -> NAME .)
    LESS            reduce using rule 117 (atom -> NAME .)
    GREATER         reduce using rule 117 (atom -> NAME .)
    EQEQUAL         reduce using rule 117 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 117 (atom -> NAME .)
    LESSEQUAL       reduce using rule 117 (atom -> NAME .)
    NOTEQUAL        reduce using rule 117 (atom -> NAME .)
    IN              reduce using rule 117 (atom -> NAME .)
    NOT             reduce using rule 117 (atom -> NAME .)
    AND             reduce using rule 117 (atom -> NAME .)
    OR              reduce using rule 117 (atom -> NAME .)
    COMMA           reduce using rule 117 (atom -> NAME .)
    RPAR            reduce using rule 117 (atom -> NAME .)


state 151

    (141) arglist -> arglist_star argument .
    (142) arglist -> arglist_star argument . COMMA
    (145) arglist_star -> arglist_star argument . COMMA

    RPAR            reduce using rule 141 (arglist -> arglist_star argument .)
    COMMA           shift and go to state 186


state 152

    (147) argument -> NAME EQUAL . expression
    (44) parameter -> NAME EQUAL . expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 187
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 153

    (35) fcn1def -> parameter RIGHTARROW . expression
    (36) fcn1def -> parameter RIGHTARROW . LBRACE suite RBRACE
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    LBRACE          shift and go to state 188
    IF              shift and go to state 22
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 189
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 154

    (140) arglist -> argument COMMA .
    (144) arglist_star -> argument COMMA .

    RPAR            reduce using rule 140 (arglist -> argument COMMA .)
    NAME            reduce using rule 144 (arglist_star -> argument COMMA .)
    IF              reduce using rule 144 (arglist_star -> argument COMMA .)
    LBRACE          reduce using rule 144 (arglist_star -> argument COMMA .)
    NOT             reduce using rule 144 (arglist_star -> argument COMMA .)
    PLUS            reduce using rule 144 (arglist_star -> argument COMMA .)
    MINUS           reduce using rule 144 (arglist_star -> argument COMMA .)
    LPAR            reduce using rule 144 (arglist_star -> argument COMMA .)
    STRING          reduce using rule 144 (arglist_star -> argument COMMA .)
    IMAG_NUMBER     reduce using rule 144 (arglist_star -> argument COMMA .)
    FLOAT_NUMBER    reduce using rule 144 (arglist_star -> argument COMMA .)
    HEX_NUMBER      reduce using rule 144 (arglist_star -> argument COMMA .)
    OCT_NUMBER      reduce using rule 144 (arglist_star -> argument COMMA .)
    DEC_NUMBER      reduce using rule 144 (arglist_star -> argument COMMA .)
    ATARG           reduce using rule 144 (arglist_star -> argument COMMA .)


state 155

    (109) atom -> fcndef LPAR arglist RPAR .

    DOUBLESTAR      reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    LPAR            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    LSQB            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    DOT             reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    STAR            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    SLASH           reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    PERCENT         reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    DOUBLESLASH     reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    PLUS            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    MINUS           reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    LESS            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    GREATER         reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    EQEQUAL         reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    GREATEREQUAL    reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    LESSEQUAL       reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    NOTEQUAL        reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    IN              reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    NOT             reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    AND             reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    OR              reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    COLON           reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    LBRACE          reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    SEMI            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    $end            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    RBRACE          reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    RPAR            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    COMMA           reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    RSQB            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    RIGHTARROW      reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    ELSE            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)
    ELIF            reduce using rule 109 (atom -> fcndef LPAR arglist RPAR .)


state 156

    (93) term_star -> term_star STAR factor .

    STAR            reduce using rule 93 (term_star -> term_star STAR factor .)
    SLASH           reduce using rule 93 (term_star -> term_star STAR factor .)
    PERCENT         reduce using rule 93 (term_star -> term_star STAR factor .)
    DOUBLESLASH     reduce using rule 93 (term_star -> term_star STAR factor .)
    PLUS            reduce using rule 93 (term_star -> term_star STAR factor .)
    MINUS           reduce using rule 93 (term_star -> term_star STAR factor .)
    LESS            reduce using rule 93 (term_star -> term_star STAR factor .)
    GREATER         reduce using rule 93 (term_star -> term_star STAR factor .)
    EQEQUAL         reduce using rule 93 (term_star -> term_star STAR factor .)
    GREATEREQUAL    reduce using rule 93 (term_star -> term_star STAR factor .)
    LESSEQUAL       reduce using rule 93 (term_star -> term_star STAR factor .)
    NOTEQUAL        reduce using rule 93 (term_star -> term_star STAR factor .)
    IN              reduce using rule 93 (term_star -> term_star STAR factor .)
    NOT             reduce using rule 93 (term_star -> term_star STAR factor .)
    AND             reduce using rule 93 (term_star -> term_star STAR factor .)
    OR              reduce using rule 93 (term_star -> term_star STAR factor .)
    SEMI            reduce using rule 93 (term_star -> term_star STAR factor .)
    $end            reduce using rule 93 (term_star -> term_star STAR factor .)
    RPAR            reduce using rule 93 (term_star -> term_star STAR factor .)
    COLON           reduce using rule 93 (term_star -> term_star STAR factor .)
    LBRACE          reduce using rule 93 (term_star -> term_star STAR factor .)
    RBRACE          reduce using rule 93 (term_star -> term_star STAR factor .)
    COMMA           reduce using rule 93 (term_star -> term_star STAR factor .)
    RSQB            reduce using rule 93 (term_star -> term_star STAR factor .)
    RIGHTARROW      reduce using rule 93 (term_star -> term_star STAR factor .)
    ELSE            reduce using rule 93 (term_star -> term_star STAR factor .)
    ELIF            reduce using rule 93 (term_star -> term_star STAR factor .)


state 157

    (96) term_star -> term_star DOUBLESLASH factor .

    STAR            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    SLASH           reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    PERCENT         reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    DOUBLESLASH     reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    PLUS            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    MINUS           reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    LESS            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    GREATER         reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    EQEQUAL         reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    GREATEREQUAL    reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    LESSEQUAL       reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    NOTEQUAL        reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    IN              reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    NOT             reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    AND             reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    OR              reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    SEMI            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    $end            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    RPAR            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    COLON           reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    LBRACE          reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    RBRACE          reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    COMMA           reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    RSQB            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    RIGHTARROW      reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    ELSE            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)
    ELIF            reduce using rule 96 (term_star -> term_star DOUBLESLASH factor .)


state 158

    (95) term_star -> term_star PERCENT factor .

    STAR            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    SLASH           reduce using rule 95 (term_star -> term_star PERCENT factor .)
    PERCENT         reduce using rule 95 (term_star -> term_star PERCENT factor .)
    DOUBLESLASH     reduce using rule 95 (term_star -> term_star PERCENT factor .)
    PLUS            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    MINUS           reduce using rule 95 (term_star -> term_star PERCENT factor .)
    LESS            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    GREATER         reduce using rule 95 (term_star -> term_star PERCENT factor .)
    EQEQUAL         reduce using rule 95 (term_star -> term_star PERCENT factor .)
    GREATEREQUAL    reduce using rule 95 (term_star -> term_star PERCENT factor .)
    LESSEQUAL       reduce using rule 95 (term_star -> term_star PERCENT factor .)
    NOTEQUAL        reduce using rule 95 (term_star -> term_star PERCENT factor .)
    IN              reduce using rule 95 (term_star -> term_star PERCENT factor .)
    NOT             reduce using rule 95 (term_star -> term_star PERCENT factor .)
    AND             reduce using rule 95 (term_star -> term_star PERCENT factor .)
    OR              reduce using rule 95 (term_star -> term_star PERCENT factor .)
    SEMI            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    $end            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    RPAR            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    COLON           reduce using rule 95 (term_star -> term_star PERCENT factor .)
    LBRACE          reduce using rule 95 (term_star -> term_star PERCENT factor .)
    RBRACE          reduce using rule 95 (term_star -> term_star PERCENT factor .)
    COMMA           reduce using rule 95 (term_star -> term_star PERCENT factor .)
    RSQB            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    RIGHTARROW      reduce using rule 95 (term_star -> term_star PERCENT factor .)
    ELSE            reduce using rule 95 (term_star -> term_star PERCENT factor .)
    ELIF            reduce using rule 95 (term_star -> term_star PERCENT factor .)


state 159

    (94) term_star -> term_star SLASH factor .

    STAR            reduce using rule 94 (term_star -> term_star SLASH factor .)
    SLASH           reduce using rule 94 (term_star -> term_star SLASH factor .)
    PERCENT         reduce using rule 94 (term_star -> term_star SLASH factor .)
    DOUBLESLASH     reduce using rule 94 (term_star -> term_star SLASH factor .)
    PLUS            reduce using rule 94 (term_star -> term_star SLASH factor .)
    MINUS           reduce using rule 94 (term_star -> term_star SLASH factor .)
    LESS            reduce using rule 94 (term_star -> term_star SLASH factor .)
    GREATER         reduce using rule 94 (term_star -> term_star SLASH factor .)
    EQEQUAL         reduce using rule 94 (term_star -> term_star SLASH factor .)
    GREATEREQUAL    reduce using rule 94 (term_star -> term_star SLASH factor .)
    LESSEQUAL       reduce using rule 94 (term_star -> term_star SLASH factor .)
    NOTEQUAL        reduce using rule 94 (term_star -> term_star SLASH factor .)
    IN              reduce using rule 94 (term_star -> term_star SLASH factor .)
    NOT             reduce using rule 94 (term_star -> term_star SLASH factor .)
    AND             reduce using rule 94 (term_star -> term_star SLASH factor .)
    OR              reduce using rule 94 (term_star -> term_star SLASH factor .)
    SEMI            reduce using rule 94 (term_star -> term_star SLASH factor .)
    $end            reduce using rule 94 (term_star -> term_star SLASH factor .)
    RPAR            reduce using rule 94 (term_star -> term_star SLASH factor .)
    COLON           reduce using rule 94 (term_star -> term_star SLASH factor .)
    LBRACE          reduce using rule 94 (term_star -> term_star SLASH factor .)
    RBRACE          reduce using rule 94 (term_star -> term_star SLASH factor .)
    COMMA           reduce using rule 94 (term_star -> term_star SLASH factor .)
    RSQB            reduce using rule 94 (term_star -> term_star SLASH factor .)
    RIGHTARROW      reduce using rule 94 (term_star -> term_star SLASH factor .)
    ELSE            reduce using rule 94 (term_star -> term_star SLASH factor .)
    ELIF            reduce using rule 94 (term_star -> term_star SLASH factor .)


state 160

    (27) fcnndef -> DEF NAME LPAR paramlist . RPAR closed_exprsuite

    RPAR            shift and go to state 190


state 161

    (62) or_test_star -> or_test_star OR and_test .

    OR              reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    SEMI            reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    $end            reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    RPAR            reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    COLON           reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    LBRACE          reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    RBRACE          reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    COMMA           reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    RSQB            reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    RIGHTARROW      reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    ELSE            reduce using rule 62 (or_test_star -> or_test_star OR and_test .)
    ELIF            reduce using rule 62 (or_test_star -> or_test_star OR and_test .)


state 162

    (119) trailer -> LPAR arglist RPAR .

    DOUBLESTAR      reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    LPAR            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    LSQB            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    DOT             reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    STAR            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    SLASH           reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    PERCENT         reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    DOUBLESLASH     reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    PLUS            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    MINUS           reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    LESS            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    GREATER         reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    EQEQUAL         reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    GREATEREQUAL    reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    LESSEQUAL       reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    NOTEQUAL        reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    IN              reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    NOT             reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    AND             reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    OR              reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    SEMI            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    $end            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    RPAR            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    COLON           reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    LBRACE          reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    RBRACE          reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    COMMA           reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    RSQB            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    RIGHTARROW      reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    ELSE            reduce using rule 119 (trailer -> LPAR arglist RPAR .)
    ELIF            reduce using rule 119 (trailer -> LPAR arglist RPAR .)


state 163

    (123) subscriptlist -> subscript COMMA .
    (126) subscriptlist_star -> COMMA . subscript
    (128) subscript -> . expression
    (129) subscript -> . COLON
    (130) subscript -> . COLON sliceop
    (131) subscript -> . COLON expression
    (132) subscript -> . COLON expression sliceop
    (133) subscript -> . expression COLON
    (134) subscript -> . expression COLON sliceop
    (135) subscript -> . expression COLON expression
    (136) subscript -> . expression COLON expression sliceop
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    RSQB            reduce using rule 123 (subscriptlist -> subscript COMMA .)
    COLON           shift and go to state 121
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    subscript                      shift and go to state 191
    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 122
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 164

    (124) subscriptlist -> subscript subscriptlist_star .
    (125) subscriptlist -> subscript subscriptlist_star . COMMA
    (127) subscriptlist_star -> subscriptlist_star . COMMA subscript

    RSQB            reduce using rule 124 (subscriptlist -> subscript subscriptlist_star .)
    COMMA           shift and go to state 192


state 165

    (137) sliceop -> COLON .
    (138) sliceop -> COLON . expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    COMMA           reduce using rule 137 (sliceop -> COLON .)
    RSQB            reduce using rule 137 (sliceop -> COLON .)
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 193
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 166

    (130) subscript -> COLON sliceop .

    COMMA           reduce using rule 130 (subscript -> COLON sliceop .)
    RSQB            reduce using rule 130 (subscript -> COLON sliceop .)


state 167

    (131) subscript -> COLON expression .
    (132) subscript -> COLON expression . sliceop
    (137) sliceop -> . COLON
    (138) sliceop -> . COLON expression

    COMMA           reduce using rule 131 (subscript -> COLON expression .)
    RSQB            reduce using rule 131 (subscript -> COLON expression .)
    COLON           shift and go to state 165

    sliceop                        shift and go to state 194

state 168

    (133) subscript -> expression COLON .
    (134) subscript -> expression COLON . sliceop
    (135) subscript -> expression COLON . expression
    (136) subscript -> expression COLON . expression sliceop
    (137) sliceop -> . COLON
    (138) sliceop -> . COLON expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    COMMA           reduce using rule 133 (subscript -> expression COLON .)
    RSQB            reduce using rule 133 (subscript -> expression COLON .)
    COLON           shift and go to state 165
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 196
    sliceop                        shift and go to state 195
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 169

    (120) trailer -> LSQB subscriptlist RSQB .

    DOUBLESTAR      reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    LPAR            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    LSQB            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    DOT             reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    STAR            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    SLASH           reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    PERCENT         reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    DOUBLESLASH     reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    PLUS            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    MINUS           reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    LESS            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    GREATER         reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    EQEQUAL         reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    GREATEREQUAL    reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    LESSEQUAL       reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    NOTEQUAL        reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    IN              reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    NOT             reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    AND             reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    OR              reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    SEMI            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    $end            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    RPAR            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    COLON           reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    LBRACE          reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    RBRACE          reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    COMMA           reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    RSQB            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    RIGHTARROW      reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    ELSE            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)
    ELIF            reduce using rule 120 (trailer -> LSQB subscriptlist RSQB .)


state 170

    (103) power -> atom power_star DOUBLESTAR factor .

    STAR            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    SLASH           reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    PERCENT         reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    DOUBLESLASH     reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    PLUS            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    MINUS           reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    LESS            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    GREATER         reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    EQEQUAL         reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    GREATEREQUAL    reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    LESSEQUAL       reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    NOTEQUAL        reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    IN              reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    NOT             reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    AND             reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    OR              reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    COMMA           reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    RPAR            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    RIGHTARROW      reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    ELSE            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    ELIF            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    SEMI            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    $end            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    COLON           reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    LBRACE          reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    RBRACE          reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)
    RSQB            reduce using rule 103 (power -> atom power_star DOUBLESTAR factor .)


state 171

    (46) exprsuite -> LBRACE suite . RBRACE

    RBRACE          shift and go to state 197


state 172

    (47) exprsuite -> COLON LBRACE . suite RBRACE
    (34) fcndef -> LBRACE . paramlist RIGHTARROW suite RBRACE
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (37) paramlist -> . parameter
    (38) paramlist -> . parameter COMMA
    (39) paramlist -> . paramlist_star parameter
    (40) paramlist -> . paramlist_star parameter COMMA
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (41) paramlist_star -> . parameter COMMA
    (42) paramlist_star -> . paramlist_star parameter COMMA
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    NAME            shift and go to state 198
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    not_test                       shift and go to state 30
    suite                          shift and go to state 199
    lvalues_star                   shift and go to state 18
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    paramlist                      shift and go to state 39
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    paramlist_star                 shift and go to state 40
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14
    or_test                        shift and go to state 9
    parameter                      shift and go to state 38

state 173

    (45) exprsuite -> COLON expression .

    ELSE            reduce using rule 45 (exprsuite -> COLON expression .)
    ELIF            reduce using rule 45 (exprsuite -> COLON expression .)
    SEMI            reduce using rule 45 (exprsuite -> COLON expression .)
    $end            reduce using rule 45 (exprsuite -> COLON expression .)
    RPAR            reduce using rule 45 (exprsuite -> COLON expression .)
    COLON           reduce using rule 45 (exprsuite -> COLON expression .)
    LBRACE          reduce using rule 45 (exprsuite -> COLON expression .)
    RBRACE          reduce using rule 45 (exprsuite -> COLON expression .)
    COMMA           reduce using rule 45 (exprsuite -> COLON expression .)
    RSQB            reduce using rule 45 (exprsuite -> COLON expression .)
    RIGHTARROW      reduce using rule 45 (exprsuite -> COLON expression .)


state 174

    (53) ifblock_star -> ELIF . expression exprsuite
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 200
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 175

    (51) ifblock -> IF expression exprsuite ELSE . exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 201

state 176

    (52) ifblock -> IF expression exprsuite ifblock_star . ELSE exprsuite
    (54) ifblock_star -> ifblock_star . ELIF expression exprsuite

    ELSE            shift and go to state 203
    ELIF            shift and go to state 202


state 177

    (33) closed_expression -> or_test SEMI .

    SEMI            reduce using rule 33 (closed_expression -> or_test SEMI .)
    IF              reduce using rule 33 (closed_expression -> or_test SEMI .)
    LBRACE          reduce using rule 33 (closed_expression -> or_test SEMI .)
    NAME            reduce using rule 33 (closed_expression -> or_test SEMI .)
    DEF             reduce using rule 33 (closed_expression -> or_test SEMI .)
    NOT             reduce using rule 33 (closed_expression -> or_test SEMI .)
    PLUS            reduce using rule 33 (closed_expression -> or_test SEMI .)
    MINUS           reduce using rule 33 (closed_expression -> or_test SEMI .)
    LPAR            reduce using rule 33 (closed_expression -> or_test SEMI .)
    STRING          reduce using rule 33 (closed_expression -> or_test SEMI .)
    IMAG_NUMBER     reduce using rule 33 (closed_expression -> or_test SEMI .)
    FLOAT_NUMBER    reduce using rule 33 (closed_expression -> or_test SEMI .)
    HEX_NUMBER      reduce using rule 33 (closed_expression -> or_test SEMI .)
    OCT_NUMBER      reduce using rule 33 (closed_expression -> or_test SEMI .)
    DEC_NUMBER      reduce using rule 33 (closed_expression -> or_test SEMI .)
    ATARG           reduce using rule 33 (closed_expression -> or_test SEMI .)


state 178

    (55) closed_ifblock -> IF expression . exprsuite ELSE closed_exprsuite
    (56) closed_ifblock -> IF expression . exprsuite closed_ifblock_star ELSE closed_exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 204

state 179

    (12) suite_star3 -> suite_star3 SEMI .

    SEMI            reduce using rule 12 (suite_star3 -> suite_star3 SEMI .)
    $end            reduce using rule 12 (suite_star3 -> suite_star3 SEMI .)
    RBRACE          reduce using rule 12 (suite_star3 -> suite_star3 SEMI .)


state 180

    (66) and_test_star -> and_test_star AND not_test .

    AND             reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    OR              reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    SEMI            reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    $end            reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    RPAR            reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    COLON           reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    LBRACE          reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    RBRACE          reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    COMMA           reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    RSQB            reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    RIGHTARROW      reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    ELSE            reduce using rule 66 (and_test_star -> and_test_star AND not_test .)
    ELIF            reduce using rule 66 (and_test_star -> and_test_star AND not_test .)


state 181

    (85) arith_expr_star -> arith_expr_star PLUS term .

    PLUS            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    MINUS           reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    LESS            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    GREATER         reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    EQEQUAL         reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    GREATEREQUAL    reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    LESSEQUAL       reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    NOTEQUAL        reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    IN              reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    NOT             reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    AND             reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    OR              reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    SEMI            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    $end            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    RPAR            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    COLON           reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    LBRACE          reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    RBRACE          reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    COMMA           reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    RSQB            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    RIGHTARROW      reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    ELSE            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)
    ELIF            reduce using rule 85 (arith_expr_star -> arith_expr_star PLUS term .)


state 182

    (86) arith_expr_star -> arith_expr_star MINUS term .

    PLUS            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    MINUS           reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    LESS            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    GREATER         reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    EQEQUAL         reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    GREATEREQUAL    reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    LESSEQUAL       reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    NOTEQUAL        reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    IN              reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    NOT             reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    AND             reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    OR              reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    SEMI            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    $end            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    RPAR            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    COLON           reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    LBRACE          reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    RBRACE          reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    COMMA           reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    RSQB            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    RIGHTARROW      reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    ELSE            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)
    ELIF            reduce using rule 86 (arith_expr_star -> arith_expr_star MINUS term .)


state 183

    (72) comparison_star -> comparison_star comp_op arith_expr .

    LESS            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    GREATER         reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    EQEQUAL         reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    GREATEREQUAL    reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    LESSEQUAL       reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    NOTEQUAL        reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    IN              reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    NOT             reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    AND             reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    OR              reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    SEMI            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    $end            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    RPAR            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    COLON           reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    LBRACE          reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    RBRACE          reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    COMMA           reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    RSQB            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    RIGHTARROW      reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    ELSE            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)
    ELIF            reduce using rule 72 (comparison_star -> comparison_star comp_op arith_expr .)


state 184

    (34) fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .

    LPAR            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    SEMI            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    RBRACE          reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    COLON           reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    LBRACE          reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    IF              reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    NAME            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    DEF             reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    NOT             reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    PLUS            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    MINUS           reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    STRING          reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    IMAG_NUMBER     reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    FLOAT_NUMBER    reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    HEX_NUMBER      reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    OCT_NUMBER      reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    DEC_NUMBER      reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    ATARG           reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    COMMA           reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    RSQB            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    RPAR            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    RIGHTARROW      reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    ELSE            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    ELIF            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)
    $end            reduce using rule 34 (fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE .)


state 185

    (147) argument -> NAME EQUAL . expression
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 205
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 186

    (142) arglist -> arglist_star argument COMMA .
    (145) arglist_star -> arglist_star argument COMMA .

    RPAR            reduce using rule 142 (arglist -> arglist_star argument COMMA .)
    NAME            reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    IF              reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    LBRACE          reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    NOT             reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    PLUS            reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    MINUS           reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    LPAR            reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    STRING          reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    IMAG_NUMBER     reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    FLOAT_NUMBER    reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    HEX_NUMBER      reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    OCT_NUMBER      reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    DEC_NUMBER      reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)
    ATARG           reduce using rule 145 (arglist_star -> arglist_star argument COMMA .)


state 187

    (147) argument -> NAME EQUAL expression .
    (44) parameter -> NAME EQUAL expression .

    COMMA           reduce using rule 147 (argument -> NAME EQUAL expression .)
    RPAR            reduce using rule 147 (argument -> NAME EQUAL expression .)
    RIGHTARROW      reduce using rule 44 (parameter -> NAME EQUAL expression .)


state 188

    (36) fcn1def -> parameter RIGHTARROW LBRACE . suite RBRACE
    (34) fcndef -> LBRACE . paramlist RIGHTARROW suite RBRACE
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (37) paramlist -> . parameter
    (38) paramlist -> . parameter COMMA
    (39) paramlist -> . paramlist_star parameter
    (40) paramlist -> . paramlist_star parameter COMMA
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (41) paramlist_star -> . parameter COMMA
    (42) paramlist_star -> . paramlist_star parameter COMMA
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    NAME            shift and go to state 198
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    not_test                       shift and go to state 30
    suite                          shift and go to state 206
    lvalues_star                   shift and go to state 18
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    paramlist                      shift and go to state 39
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    paramlist_star                 shift and go to state 40
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14
    or_test                        shift and go to state 9
    parameter                      shift and go to state 38

state 189

    (35) fcn1def -> parameter RIGHTARROW expression .

    RPAR            reduce using rule 35 (fcn1def -> parameter RIGHTARROW expression .)


state 190

    (27) fcnndef -> DEF NAME LPAR paramlist RPAR . closed_exprsuite
    (48) closed_exprsuite -> . COLON closed_expression
    (49) closed_exprsuite -> . LBRACE suite RBRACE
    (50) closed_exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 207
    LBRACE          shift and go to state 209

    closed_exprsuite               shift and go to state 208

state 191

    (126) subscriptlist_star -> COMMA subscript .

    COMMA           reduce using rule 126 (subscriptlist_star -> COMMA subscript .)
    RSQB            reduce using rule 126 (subscriptlist_star -> COMMA subscript .)


state 192

    (125) subscriptlist -> subscript subscriptlist_star COMMA .
    (127) subscriptlist_star -> subscriptlist_star COMMA . subscript
    (128) subscript -> . expression
    (129) subscript -> . COLON
    (130) subscript -> . COLON sliceop
    (131) subscript -> . COLON expression
    (132) subscript -> . COLON expression sliceop
    (133) subscript -> . expression COLON
    (134) subscript -> . expression COLON sliceop
    (135) subscript -> . expression COLON expression
    (136) subscript -> . expression COLON expression sliceop
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    RSQB            reduce using rule 125 (subscriptlist -> subscript subscriptlist_star COMMA .)
    COLON           shift and go to state 121
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    subscript                      shift and go to state 210
    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 122
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 193

    (138) sliceop -> COLON expression .

    COMMA           reduce using rule 138 (sliceop -> COLON expression .)
    RSQB            reduce using rule 138 (sliceop -> COLON expression .)


state 194

    (132) subscript -> COLON expression sliceop .

    COMMA           reduce using rule 132 (subscript -> COLON expression sliceop .)
    RSQB            reduce using rule 132 (subscript -> COLON expression sliceop .)


state 195

    (134) subscript -> expression COLON sliceop .

    COMMA           reduce using rule 134 (subscript -> expression COLON sliceop .)
    RSQB            reduce using rule 134 (subscript -> expression COLON sliceop .)


state 196

    (135) subscript -> expression COLON expression .
    (136) subscript -> expression COLON expression . sliceop
    (137) sliceop -> . COLON
    (138) sliceop -> . COLON expression

    COMMA           reduce using rule 135 (subscript -> expression COLON expression .)
    RSQB            reduce using rule 135 (subscript -> expression COLON expression .)
    COLON           shift and go to state 165

    sliceop                        shift and go to state 211

state 197

    (46) exprsuite -> LBRACE suite RBRACE .

    ELSE            reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    ELIF            reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    SEMI            reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    $end            reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    RPAR            reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    COLON           reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    LBRACE          reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    RBRACE          reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    COMMA           reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    RSQB            reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)
    RIGHTARROW      reduce using rule 46 (exprsuite -> LBRACE suite RBRACE .)


state 198

    (43) parameter -> NAME .
    (44) parameter -> NAME . EQUAL expression
    (19) lvalues -> NAME .
    (20) lvalues -> NAME . COMMA
    (23) lvalues_star -> NAME . COMMA
    (117) atom -> NAME .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RIGHTARROW      reduce using rule 43 (parameter -> NAME .)
    EQUAL           shift and go to state 90
    COMMA           shift and go to state 57
    DOUBLESTAR      reduce using rule 117 (atom -> NAME .)
    LPAR            reduce using rule 117 (atom -> NAME .)
    LSQB            reduce using rule 117 (atom -> NAME .)
    DOT             reduce using rule 117 (atom -> NAME .)
    STAR            reduce using rule 117 (atom -> NAME .)
    SLASH           reduce using rule 117 (atom -> NAME .)
    PERCENT         reduce using rule 117 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 117 (atom -> NAME .)
    PLUS            reduce using rule 117 (atom -> NAME .)
    MINUS           reduce using rule 117 (atom -> NAME .)
    LESS            reduce using rule 117 (atom -> NAME .)
    GREATER         reduce using rule 117 (atom -> NAME .)
    EQEQUAL         reduce using rule 117 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 117 (atom -> NAME .)
    LESSEQUAL       reduce using rule 117 (atom -> NAME .)
    NOTEQUAL        reduce using rule 117 (atom -> NAME .)
    IN              reduce using rule 117 (atom -> NAME .)
    NOT             reduce using rule 117 (atom -> NAME .)
    AND             reduce using rule 117 (atom -> NAME .)
    OR              reduce using rule 117 (atom -> NAME .)
    SEMI            reduce using rule 117 (atom -> NAME .)
    RBRACE          reduce using rule 117 (atom -> NAME .)

  ! COMMA           [ reduce using rule 43 (parameter -> NAME .) ]
  ! EQUAL           [ reduce using rule 19 (lvalues -> NAME .) ]


state 199

    (47) exprsuite -> COLON LBRACE suite . RBRACE

    RBRACE          shift and go to state 212


state 200

    (53) ifblock_star -> ELIF expression . exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 213

state 201

    (51) ifblock -> IF expression exprsuite ELSE exprsuite .

    COMMA           reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    RPAR            reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    COLON           reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    RSQB            reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    LBRACE          reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    RIGHTARROW      reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    SEMI            reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    RBRACE          reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    ELSE            reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    ELIF            reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)
    $end            reduce using rule 51 (ifblock -> IF expression exprsuite ELSE exprsuite .)


state 202

    (54) ifblock_star -> ifblock_star ELIF . expression exprsuite
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 214
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 203

    (52) ifblock -> IF expression exprsuite ifblock_star ELSE . exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 215

state 204

    (55) closed_ifblock -> IF expression exprsuite . ELSE closed_exprsuite
    (56) closed_ifblock -> IF expression exprsuite . closed_ifblock_star ELSE closed_exprsuite
    (57) closed_ifblock_star -> . ELIF expression exprsuite
    (58) closed_ifblock_star -> . closed_ifblock_star ELIF expression exprsuite

    ELSE            shift and go to state 218
    ELIF            shift and go to state 217

    closed_ifblock_star            shift and go to state 216

state 205

    (147) argument -> NAME EQUAL expression .

    COMMA           reduce using rule 147 (argument -> NAME EQUAL expression .)
    RPAR            reduce using rule 147 (argument -> NAME EQUAL expression .)


state 206

    (36) fcn1def -> parameter RIGHTARROW LBRACE suite . RBRACE

    RBRACE          shift and go to state 219


state 207

    (48) closed_exprsuite -> COLON . closed_expression
    (50) closed_exprsuite -> COLON . LBRACE suite RBRACE
    (31) closed_expression -> . closed_ifblock
    (32) closed_expression -> . fcndef
    (33) closed_expression -> . or_test SEMI
    (55) closed_ifblock -> . IF expression exprsuite ELSE closed_exprsuite
    (56) closed_ifblock -> . IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    LBRACE          shift and go to state 220
    IF              shift and go to state 132
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    closed_ifblock                 shift and go to state 129
    term                           shift and go to state 33
    closed_expression              shift and go to state 221
    power                          shift and go to state 24
    fcndef                         shift and go to state 130
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 131
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    and_test                       shift and go to state 14

state 208

    (27) fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .

    SEMI            reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    IF              reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    LBRACE          reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    NAME            reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    DEF             reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    NOT             reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    PLUS            reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    MINUS           reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    LPAR            reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    STRING          reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    IMAG_NUMBER     reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    FLOAT_NUMBER    reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    HEX_NUMBER      reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    OCT_NUMBER      reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    DEC_NUMBER      reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)
    ATARG           reduce using rule 27 (fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite .)


state 209

    (49) closed_exprsuite -> LBRACE . suite RBRACE
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NAME            shift and go to state 15
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    lvalues_star                   shift and go to state 18
    suite                          shift and go to state 222
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14
    not_test                       shift and go to state 30

state 210

    (127) subscriptlist_star -> subscriptlist_star COMMA subscript .

    COMMA           reduce using rule 127 (subscriptlist_star -> subscriptlist_star COMMA subscript .)
    RSQB            reduce using rule 127 (subscriptlist_star -> subscriptlist_star COMMA subscript .)


state 211

    (136) subscript -> expression COLON expression sliceop .

    COMMA           reduce using rule 136 (subscript -> expression COLON expression sliceop .)
    RSQB            reduce using rule 136 (subscript -> expression COLON expression sliceop .)


state 212

    (47) exprsuite -> COLON LBRACE suite RBRACE .

    ELSE            reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    ELIF            reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    SEMI            reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    $end            reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    RPAR            reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    COLON           reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    LBRACE          reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    RBRACE          reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    COMMA           reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    RSQB            reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)
    RIGHTARROW      reduce using rule 47 (exprsuite -> COLON LBRACE suite RBRACE .)


state 213

    (53) ifblock_star -> ELIF expression exprsuite .

    ELSE            reduce using rule 53 (ifblock_star -> ELIF expression exprsuite .)
    ELIF            reduce using rule 53 (ifblock_star -> ELIF expression exprsuite .)


state 214

    (54) ifblock_star -> ifblock_star ELIF expression . exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 223

state 215

    (52) ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .

    COMMA           reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    RPAR            reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    COLON           reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    RSQB            reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    LBRACE          reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    RIGHTARROW      reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    SEMI            reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    RBRACE          reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    ELSE            reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    ELIF            reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)
    $end            reduce using rule 52 (ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite .)


state 216

    (56) closed_ifblock -> IF expression exprsuite closed_ifblock_star . ELSE closed_exprsuite
    (58) closed_ifblock_star -> closed_ifblock_star . ELIF expression exprsuite

    ELSE            shift and go to state 225
    ELIF            shift and go to state 224


state 217

    (57) closed_ifblock_star -> ELIF . expression exprsuite
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 226
    and_test                       shift and go to state 14
    term                           shift and go to state 33

state 218

    (55) closed_ifblock -> IF expression exprsuite ELSE . closed_exprsuite
    (48) closed_exprsuite -> . COLON closed_expression
    (49) closed_exprsuite -> . LBRACE suite RBRACE
    (50) closed_exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 207
    LBRACE          shift and go to state 209

    closed_exprsuite               shift and go to state 227

state 219

    (36) fcn1def -> parameter RIGHTARROW LBRACE suite RBRACE .

    RPAR            reduce using rule 36 (fcn1def -> parameter RIGHTARROW LBRACE suite RBRACE .)


state 220

    (50) closed_exprsuite -> COLON LBRACE . suite RBRACE
    (34) fcndef -> LBRACE . paramlist RIGHTARROW suite RBRACE
    (5) suite -> . expression
    (6) suite -> . expression suite_star
    (7) suite -> . suite_star2 expression
    (8) suite -> . suite_star2 expression suite_star3
    (37) paramlist -> . parameter
    (38) paramlist -> . parameter COMMA
    (39) paramlist -> . paramlist_star parameter
    (40) paramlist -> . paramlist_star parameter COMMA
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (13) suite_star2 -> . assignment
    (14) suite_star2 -> . assignment suite_star2_star
    (15) suite_star2 -> . suite_star2 assignment
    (16) suite_star2 -> . suite_star2 assignment suite_star2_star
    (43) parameter -> . NAME
    (44) parameter -> . NAME EQUAL expression
    (41) paramlist_star -> . parameter COMMA
    (42) paramlist_star -> . paramlist_star parameter COMMA
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (25) assignment -> . lvalues EQUAL closed_expression
    (26) assignment -> . fcnndef
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (19) lvalues -> . NAME
    (20) lvalues -> . NAME COMMA
    (21) lvalues -> . lvalues_star NAME
    (22) lvalues -> . lvalues_star NAME COMMA
    (27) fcnndef -> . DEF NAME LPAR paramlist RPAR closed_exprsuite
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (23) lvalues_star -> . NAME COMMA
    (24) lvalues_star -> . lvalues_star NAME COMMA
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    NAME            shift and go to state 198
    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    DEF             shift and go to state 7
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16

    not_test                       shift and go to state 30
    suite                          shift and go to state 228
    lvalues_star                   shift and go to state 18
    fcnndef                        shift and go to state 4
    term                           shift and go to state 33
    paramlist                      shift and go to state 39
    lvalues                        shift and go to state 23
    power                          shift and go to state 24
    suite_star2                    shift and go to state 26
    fcndef                         shift and go to state 5
    factor                         shift and go to state 6
    ifblock                        shift and go to state 28
    comparison                     shift and go to state 8
    paramlist_star                 shift and go to state 40
    assignment                     shift and go to state 10
    atom                           shift and go to state 21
    arith_expr                     shift and go to state 35
    expression                     shift and go to state 31
    and_test                       shift and go to state 14
    or_test                        shift and go to state 9
    parameter                      shift and go to state 38

state 221

    (48) closed_exprsuite -> COLON closed_expression .

    SEMI            reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    IF              reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    LBRACE          reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    NAME            reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    DEF             reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    NOT             reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    PLUS            reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    MINUS           reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    LPAR            reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    STRING          reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    IMAG_NUMBER     reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    FLOAT_NUMBER    reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    HEX_NUMBER      reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    OCT_NUMBER      reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    DEC_NUMBER      reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)
    ATARG           reduce using rule 48 (closed_exprsuite -> COLON closed_expression .)


state 222

    (49) closed_exprsuite -> LBRACE suite . RBRACE

    RBRACE          shift and go to state 229


state 223

    (54) ifblock_star -> ifblock_star ELIF expression exprsuite .

    ELSE            reduce using rule 54 (ifblock_star -> ifblock_star ELIF expression exprsuite .)
    ELIF            reduce using rule 54 (ifblock_star -> ifblock_star ELIF expression exprsuite .)


state 224

    (58) closed_ifblock_star -> closed_ifblock_star ELIF . expression exprsuite
    (28) expression -> . ifblock
    (29) expression -> . fcndef
    (30) expression -> . or_test
    (51) ifblock -> . IF expression exprsuite ELSE exprsuite
    (52) ifblock -> . IF expression exprsuite ifblock_star ELSE exprsuite
    (34) fcndef -> . LBRACE paramlist RIGHTARROW suite RBRACE
    (59) or_test -> . and_test
    (60) or_test -> . and_test or_test_star
    (63) and_test -> . not_test
    (64) and_test -> . not_test and_test_star
    (67) not_test -> . NOT not_test
    (68) not_test -> . comparison
    (69) comparison -> . arith_expr
    (70) comparison -> . arith_expr comparison_star
    (81) arith_expr -> . term
    (82) arith_expr -> . term arith_expr_star
    (87) term -> . factor
    (88) term -> . factor term_star
    (97) factor -> . PLUS factor
    (98) factor -> . MINUS factor
    (99) factor -> . power
    (100) power -> . atom
    (101) power -> . atom DOUBLESTAR factor
    (102) power -> . atom power_star
    (103) power -> . atom power_star DOUBLESTAR factor
    (106) atom -> . LPAR RPAR
    (107) atom -> . LPAR expression RPAR
    (108) atom -> . fcndef LPAR RPAR
    (109) atom -> . fcndef LPAR arglist RPAR
    (110) atom -> . STRING
    (111) atom -> . IMAG_NUMBER
    (112) atom -> . FLOAT_NUMBER
    (113) atom -> . HEX_NUMBER
    (114) atom -> . OCT_NUMBER
    (115) atom -> . DEC_NUMBER
    (116) atom -> . ATARG
    (117) atom -> . NAME

    IF              shift and go to state 22
    LBRACE          shift and go to state 1
    NOT             shift and go to state 20
    PLUS            shift and go to state 32
    MINUS           shift and go to state 17
    LPAR            shift and go to state 3
    STRING          shift and go to state 25
    IMAG_NUMBER     shift and go to state 13
    FLOAT_NUMBER    shift and go to state 11
    HEX_NUMBER      shift and go to state 27
    OCT_NUMBER      shift and go to state 2
    DEC_NUMBER      shift and go to state 29
    ATARG           shift and go to state 16
    NAME            shift and go to state 43

    power                          shift and go to state 24
    fcndef                         shift and go to state 5
    arith_expr                     shift and go to state 35
    comparison                     shift and go to state 8
    or_test                        shift and go to state 9
    not_test                       shift and go to state 30
    atom                           shift and go to state 21
    ifblock                        shift and go to state 28
    expression                     shift and go to state 230
    and_test                       shift and go to state 14
    term                           shift and go to state 33
    factor                         shift and go to state 6

state 225

    (56) closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE . closed_exprsuite
    (48) closed_exprsuite -> . COLON closed_expression
    (49) closed_exprsuite -> . LBRACE suite RBRACE
    (50) closed_exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 207
    LBRACE          shift and go to state 209

    closed_exprsuite               shift and go to state 231

state 226

    (57) closed_ifblock_star -> ELIF expression . exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 232

state 227

    (55) closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .

    SEMI            reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    IF              reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    LBRACE          reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    NAME            reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    DEF             reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    NOT             reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    PLUS            reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    MINUS           reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    LPAR            reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    STRING          reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    IMAG_NUMBER     reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    FLOAT_NUMBER    reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    HEX_NUMBER      reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    OCT_NUMBER      reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    DEC_NUMBER      reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)
    ATARG           reduce using rule 55 (closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite .)


state 228

    (50) closed_exprsuite -> COLON LBRACE suite . RBRACE

    RBRACE          shift and go to state 233


state 229

    (49) closed_exprsuite -> LBRACE suite RBRACE .

    SEMI            reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    IF              reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    LBRACE          reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    NAME            reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    DEF             reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    NOT             reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    PLUS            reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    MINUS           reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    LPAR            reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    STRING          reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    IMAG_NUMBER     reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    FLOAT_NUMBER    reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    HEX_NUMBER      reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    OCT_NUMBER      reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    DEC_NUMBER      reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)
    ATARG           reduce using rule 49 (closed_exprsuite -> LBRACE suite RBRACE .)


state 230

    (58) closed_ifblock_star -> closed_ifblock_star ELIF expression . exprsuite
    (45) exprsuite -> . COLON expression
    (46) exprsuite -> . LBRACE suite RBRACE
    (47) exprsuite -> . COLON LBRACE suite RBRACE

    COLON           shift and go to state 127
    LBRACE          shift and go to state 126

    exprsuite                      shift and go to state 234

state 231

    (56) closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .

    SEMI            reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    IF              reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    LBRACE          reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    NAME            reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    DEF             reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    NOT             reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    PLUS            reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    MINUS           reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    LPAR            reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    STRING          reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    IMAG_NUMBER     reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    FLOAT_NUMBER    reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    HEX_NUMBER      reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    OCT_NUMBER      reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    DEC_NUMBER      reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)
    ATARG           reduce using rule 56 (closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite .)


state 232

    (57) closed_ifblock_star -> ELIF expression exprsuite .

    ELSE            reduce using rule 57 (closed_ifblock_star -> ELIF expression exprsuite .)
    ELIF            reduce using rule 57 (closed_ifblock_star -> ELIF expression exprsuite .)


state 233

    (50) closed_exprsuite -> COLON LBRACE suite RBRACE .

    SEMI            reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    IF              reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    LBRACE          reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    NAME            reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    DEF             reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    NOT             reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    PLUS            reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    MINUS           reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    LPAR            reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    STRING          reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    IMAG_NUMBER     reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    FLOAT_NUMBER    reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    HEX_NUMBER      reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    OCT_NUMBER      reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    DEC_NUMBER      reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)
    ATARG           reduce using rule 50 (closed_exprsuite -> COLON LBRACE suite RBRACE .)


state 234

    (58) closed_ifblock_star -> closed_ifblock_star ELIF expression exprsuite .

    ELSE            reduce using rule 58 (closed_ifblock_star -> closed_ifblock_star ELIF expression exprsuite .)
    ELIF            reduce using rule 58 (closed_ifblock_star -> closed_ifblock_star ELIF expression exprsuite .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAR in state 130 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 198 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 198 resolved as shift
