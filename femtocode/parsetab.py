
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '865C16CF67D8AF459C0C84AC95D1614F'
    
_lr_action_items = {'RPAR':([2,3,5,6,8,9,11,13,14,16,21,24,25,27,28,29,30,33,35,37,38,41,42,43,44,46,56,59,61,63,66,67,73,76,78,85,91,93,94,95,97,99,100,101,102,103,108,109,110,113,116,117,118,119,125,137,140,143,145,147,149,150,151,154,155,156,157,158,159,160,161,162,169,170,173,180,181,182,183,184,186,187,189,197,201,205,212,215,219,],[-114,41,-29,-87,-68,-30,-112,-111,-59,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-43,-37,-106,94,-117,95,-88,-60,-98,-67,117,-104,-102,-64,-97,-82,-70,-38,-39,-107,-108,-117,-139,-146,-143,155,-89,-92,-91,-90,-61,-121,-118,162,-101,-105,-65,-83,-84,-71,-44,-40,-117,-141,-140,-109,-93,-96,-95,-94,190,-62,-119,-120,-103,-45,-66,-85,-86,-72,-34,-142,-147,-35,-46,-51,-147,-47,-52,-36,]),'LBRACE':([0,2,3,4,5,6,8,9,10,11,12,13,14,16,17,20,21,22,24,25,26,27,28,29,30,32,33,35,36,41,43,44,45,46,47,48,49,51,52,54,55,56,59,61,63,64,65,66,67,68,69,70,72,73,76,77,78,79,80,82,83,84,85,86,87,88,89,90,92,94,95,96,103,104,105,106,107,108,109,110,112,113,114,116,117,119,121,124,125,126,127,129,130,132,133,134,137,138,140,141,142,143,144,145,146,152,153,154,155,156,157,158,159,161,162,163,165,168,169,170,172,173,174,175,177,178,180,181,182,183,184,185,186,188,190,192,197,200,201,202,203,207,208,209,212,214,215,217,218,220,221,224,225,226,227,229,230,231,233,],[1,-114,1,-26,-29,-87,-68,-30,-13,-112,1,-111,-59,-116,1,1,-100,1,-99,-110,1,-113,-28,-115,-63,1,-81,-69,-3,-106,-117,1,1,-88,1,1,1,-17,-14,-4,1,-60,-98,-67,1,1,1,-104,-102,126,1,-15,1,-64,-97,1,-82,1,-79,-78,-75,1,-70,-76,-73,-77,-74,1,1,-107,-108,1,-89,1,1,1,1,-92,-91,-90,-18,-61,1,-121,-118,-101,1,1,-105,1,172,-31,-32,1,-25,-16,-65,1,-83,1,1,-84,-80,-71,1,1,188,-144,-109,-93,-96,-95,-94,-62,-119,1,1,1,-120,-103,1,-45,1,126,-33,126,-66,-85,-86,-72,-34,1,-145,1,209,1,-46,126,-51,1,126,220,-27,1,-47,126,-52,1,209,1,-48,1,209,126,-55,-49,126,-56,-50,]),'NOT':([0,2,3,4,6,10,11,12,13,15,16,20,21,22,24,25,26,27,29,33,35,36,41,43,44,46,51,52,54,55,59,63,65,66,67,69,70,72,76,78,85,90,92,94,95,96,97,103,108,109,110,112,114,116,117,119,121,125,126,127,129,130,132,133,134,138,140,143,145,150,152,153,154,155,156,157,158,159,162,163,165,168,169,170,172,174,177,181,182,183,184,185,186,188,192,198,202,207,208,209,217,220,221,224,227,229,231,233,],[20,-114,20,-26,-87,-13,-112,20,-111,-117,-116,20,-100,20,-99,-110,20,-113,-115,-81,81,-3,-106,-117,20,-88,-17,-14,-4,20,-98,20,20,-104,-102,20,-15,20,-97,-82,81,20,20,-107,-108,20,-117,-89,-92,-91,-90,-18,20,-121,-118,-101,20,-105,20,20,-31,-32,20,-25,-16,20,-83,-84,-71,-117,20,20,-144,-109,-93,-96,-95,-94,-119,20,20,20,-120,-103,20,20,-33,-85,-86,-72,-34,20,-145,20,20,-117,20,20,-27,20,20,20,-48,20,-55,-49,-56,-50,]),'LPAR':([0,2,3,4,5,10,11,12,13,15,16,17,20,21,22,25,26,27,29,32,36,41,43,44,45,47,48,49,50,51,52,54,55,58,63,64,65,66,67,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,94,95,96,97,104,105,106,107,112,114,116,117,121,124,125,126,127,129,130,132,133,134,138,141,142,144,146,150,152,153,154,155,162,163,165,168,169,172,174,177,184,185,186,188,192,198,202,207,208,209,217,220,221,224,227,229,231,233,],[3,-114,3,-26,44,-13,-112,3,-111,-117,-116,3,3,63,3,-110,3,-113,-115,3,-3,-106,-117,3,3,3,3,3,111,-17,-14,-4,3,44,3,3,3,-104,63,3,-15,3,3,3,-79,-78,-75,3,-76,-73,-77,-74,3,3,-107,-108,3,-117,3,3,3,3,-18,3,-121,-118,3,3,-105,3,3,-31,44,3,-25,-16,3,3,3,-80,3,-117,3,3,-144,-109,-119,3,3,3,-120,3,3,-33,-34,3,-145,3,3,-117,3,3,-27,3,3,3,-48,3,-55,-49,-56,-50,]),'DOUBLESTAR':([2,11,13,15,16,21,25,27,29,41,43,66,67,94,95,97,116,117,125,150,155,162,169,198,],[-114,-112,-111,-117,-116,64,-110,-113,-115,-106,-117,-104,124,-107,-108,-117,-121,-118,-105,-117,-109,-119,-120,-117,]),'MINUS':([0,2,3,4,6,10,11,12,13,15,16,17,20,21,22,24,25,26,27,29,32,33,36,41,43,44,45,46,47,48,49,51,52,54,55,59,63,64,65,66,67,69,70,72,76,77,78,79,80,82,83,84,86,87,88,89,90,92,94,95,96,97,103,104,105,106,107,108,109,110,112,114,116,117,119,121,124,125,126,127,129,130,132,133,134,138,140,141,142,143,144,146,150,152,153,154,155,156,157,158,159,162,163,165,168,169,170,172,174,177,181,182,184,185,186,188,192,198,202,207,208,209,217,220,221,224,227,229,231,233,],[17,-114,17,-26,-87,-13,-112,17,-111,-117,-116,17,17,-100,17,-99,-110,17,-113,-115,17,79,-3,-106,-117,17,17,-88,17,17,17,-17,-14,-4,17,-98,17,17,17,-104,-102,17,-15,17,-97,17,142,17,-79,-78,-75,17,-76,-73,-77,-74,17,17,-107,-108,17,-117,-89,17,17,17,17,-92,-91,-90,-18,17,-121,-118,-101,17,17,-105,17,17,-31,-32,17,-25,-16,17,-83,17,17,-84,-80,17,-117,17,17,-144,-109,-93,-96,-95,-94,-119,17,17,17,-120,-103,17,17,-33,-85,-86,-34,17,-145,17,17,-117,17,17,-27,17,17,17,-48,17,-55,-49,-56,-50,]),'COMMA':([2,5,6,8,9,11,13,14,15,16,21,24,25,27,28,29,30,33,35,37,38,41,43,46,56,59,60,61,66,67,73,76,78,85,93,94,95,97,99,100,103,108,109,110,113,116,117,119,120,121,122,125,137,140,143,145,147,150,151,155,156,157,158,159,161,162,164,165,166,167,168,169,170,173,180,181,182,183,184,187,191,193,194,195,196,197,198,201,205,210,211,212,215,],[-114,-29,-87,-68,-30,-112,-111,-59,57,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-43,91,-106,-117,-88,-60,-98,115,-67,-104,-102,-64,-97,-82,-70,149,-107,-108,-117,154,-146,-89,-92,-91,-90,-61,-121,-118,-101,163,-129,-128,-105,-65,-83,-84,-71,-44,-117,186,-109,-93,-96,-95,-94,-62,-119,192,-137,-130,-131,-133,-120,-103,-45,-66,-85,-86,-72,-34,-147,-126,-138,-132,-134,-135,-46,57,-51,-147,-127,-136,-47,-52,]),'IF':([0,3,4,10,12,22,26,36,44,51,52,54,63,65,69,70,90,92,96,112,121,126,127,129,130,132,133,134,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[22,22,-26,-13,22,22,22,-3,22,-17,-14,-4,22,22,132,-15,22,22,22,-18,22,22,22,-31,-32,22,-25,-16,22,22,-144,22,22,22,22,22,-33,-34,22,-145,22,22,22,132,-27,22,22,22,-48,22,-55,-49,-56,-50,]),'PERCENT':([2,6,11,13,15,16,21,24,25,27,29,41,43,46,59,66,67,76,94,95,97,103,108,109,110,116,117,119,125,150,155,156,157,158,159,162,169,170,198,],[-114,48,-112,-111,-117,-116,-100,-99,-110,-113,-115,-106,-117,106,-98,-104,-102,-97,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-117,-109,-93,-96,-95,-94,-119,-120,-103,-117,]),'OCT_NUMBER':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[2,2,-26,-13,2,2,2,2,2,2,-3,2,2,2,2,2,-17,-14,-4,2,2,2,2,2,-15,2,2,2,-79,-78,-75,2,-76,-73,-77,-74,2,2,2,2,2,2,2,-18,2,2,2,2,2,-31,-32,2,-25,-16,2,2,2,-80,2,2,2,-144,2,2,2,2,2,-33,-34,2,-145,2,2,2,2,-27,2,2,2,-48,2,-55,-49,-56,-50,]),'ELIF':([2,5,6,8,9,11,13,14,16,21,24,25,27,28,29,30,33,35,41,43,46,56,59,61,66,67,73,76,78,85,94,95,103,108,109,110,113,116,117,119,125,128,137,140,143,145,155,156,157,158,159,161,162,169,170,173,176,180,181,182,183,184,197,201,204,212,213,215,216,223,232,234,],[-114,-29,-87,-68,-30,-112,-111,-59,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-106,-117,-88,-60,-98,-67,-104,-102,-64,-97,-82,-70,-107,-108,-89,-92,-91,-90,-61,-121,-118,-101,-105,174,-65,-83,-84,-71,-109,-93,-96,-95,-94,-62,-119,-120,-103,-45,202,-66,-85,-86,-72,-34,-46,-51,217,-47,-53,-52,224,-54,-57,-58,]),'NOTEQUAL':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,82,-106,-117,-88,-98,-104,-102,-97,-82,82,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),'EQEQUAL':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,83,-106,-117,-88,-98,-104,-102,-97,-82,83,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),'RIGHTARROW':([2,5,6,8,9,11,13,14,16,21,24,25,27,28,29,30,33,35,37,38,39,41,43,46,56,59,61,66,67,73,76,78,85,91,93,94,95,97,98,103,108,109,110,113,116,117,119,125,137,140,143,145,147,149,155,156,157,158,159,161,162,169,170,173,180,181,182,183,184,187,197,198,201,212,215,],[-114,-29,-87,-68,-30,-112,-111,-59,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-43,-37,92,-106,-117,-88,-60,-98,-67,-104,-102,-64,-97,-82,-70,-38,-39,-107,-108,-43,153,-89,-92,-91,-90,-61,-121,-118,-101,-105,-65,-83,-84,-71,-44,-40,-109,-93,-96,-95,-94,-62,-119,-120,-103,-45,-66,-85,-86,-72,-34,-44,-46,-43,-51,-47,-52,]),'ELSE':([2,5,6,8,9,11,13,14,16,21,24,25,27,28,29,30,33,35,41,43,46,56,59,61,66,67,73,76,78,85,94,95,103,108,109,110,113,116,117,119,125,128,137,140,143,145,155,156,157,158,159,161,162,169,170,173,176,180,181,182,183,184,197,201,204,212,213,215,216,223,232,234,],[-114,-29,-87,-68,-30,-112,-111,-59,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-106,-117,-88,-60,-98,-67,-104,-102,-64,-97,-82,-70,-107,-108,-89,-92,-91,-90,-61,-121,-118,-101,-105,175,-65,-83,-84,-71,-109,-93,-96,-95,-94,-62,-119,-120,-103,-45,203,-66,-85,-86,-72,-34,-46,-51,218,-47,-53,-52,225,-54,-57,-58,]),'DOUBLESLASH':([2,6,11,13,15,16,21,24,25,27,29,41,43,46,59,66,67,76,94,95,97,103,108,109,110,116,117,119,125,150,155,156,157,158,159,162,169,170,198,],[-114,47,-112,-111,-117,-116,-100,-99,-110,-113,-115,-106,-117,105,-98,-104,-102,-97,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-117,-109,-93,-96,-95,-94,-119,-120,-103,-117,]),'DEF':([0,4,10,12,26,36,51,52,54,70,92,112,126,129,130,133,134,172,177,184,188,208,209,220,221,227,229,231,233,],[7,-26,-13,7,7,-3,-17,-14,-4,-15,7,-18,7,-31,-32,-25,-16,7,-33,-34,7,-27,7,7,-48,-55,-49,-56,-50,]),'DEC_NUMBER':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[29,29,-26,-13,29,29,29,29,29,29,-3,29,29,29,29,29,-17,-14,-4,29,29,29,29,29,-15,29,29,29,-79,-78,-75,29,-76,-73,-77,-74,29,29,29,29,29,29,29,-18,29,29,29,29,29,-31,-32,29,-25,-16,29,29,29,-80,29,29,29,-144,29,29,29,29,29,-33,-34,29,-145,29,29,29,29,-27,29,29,29,-48,29,-55,-49,-56,-50,]),'STAR':([2,6,11,13,15,16,21,24,25,27,29,41,43,46,59,66,67,76,94,95,97,103,108,109,110,116,117,119,125,150,155,156,157,158,159,162,169,170,198,],[-114,45,-112,-111,-117,-116,-100,-99,-110,-113,-115,-106,-117,104,-98,-104,-102,-97,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-117,-109,-93,-96,-95,-94,-119,-120,-103,-117,]),'EQUAL':([15,23,37,57,60,97,115,150,198,],[-19,69,90,-20,-21,152,-22,185,90,]),'COLON':([2,5,6,8,9,11,13,14,16,21,24,25,27,28,29,30,33,35,41,43,46,56,59,61,65,66,67,68,73,76,78,85,94,95,103,108,109,110,113,116,117,119,121,122,125,137,140,143,145,155,156,157,158,159,161,162,163,167,168,169,170,173,175,178,180,181,182,183,184,190,192,196,197,200,201,203,212,214,215,218,225,226,230,],[-114,-29,-87,-68,-30,-112,-111,-59,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-106,-117,-88,-60,-98,-67,121,-104,-102,127,-64,-97,-82,-70,-107,-108,-89,-92,-91,-90,-61,-121,-118,-101,165,168,-105,-65,-83,-84,-71,-109,-93,-96,-95,-94,-62,-119,121,165,165,-120,-103,-45,127,127,-66,-85,-86,-72,-34,207,121,165,-46,127,-51,127,-47,127,-52,207,207,127,127,]),'HEX_NUMBER':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[27,27,-26,-13,27,27,27,27,27,27,-3,27,27,27,27,27,-17,-14,-4,27,27,27,27,27,-15,27,27,27,-79,-78,-75,27,-76,-73,-77,-74,27,27,27,27,27,27,27,-18,27,27,27,27,27,-31,-32,27,-25,-16,27,27,27,-80,27,27,27,-144,27,27,27,27,27,-33,-34,27,-145,27,27,27,27,-27,27,27,27,-48,27,-55,-49,-56,-50,]),'FLOAT_NUMBER':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[11,11,-26,-13,11,11,11,11,11,11,-3,11,11,11,11,11,-17,-14,-4,11,11,11,11,11,-15,11,11,11,-79,-78,-75,11,-76,-73,-77,-74,11,11,11,11,11,11,11,-18,11,11,11,11,11,-31,-32,11,-25,-16,11,11,11,-80,11,11,11,-144,11,11,11,11,11,-33,-34,11,-145,11,11,11,11,-27,11,11,11,-48,11,-55,-49,-56,-50,]),'SLASH':([2,6,11,13,15,16,21,24,25,27,29,41,43,46,59,66,67,76,94,95,97,103,108,109,110,116,117,119,125,150,155,156,157,158,159,162,169,170,198,],[-114,49,-112,-111,-117,-116,-100,-99,-110,-113,-115,-106,-117,107,-98,-104,-102,-97,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-117,-109,-93,-96,-95,-94,-119,-120,-103,-117,]),'RBRACE':([2,5,6,8,9,11,13,14,15,16,21,24,25,27,28,29,30,31,33,35,41,43,46,56,59,61,66,67,71,73,74,75,76,78,85,94,95,103,108,109,110,113,116,117,119,125,135,136,137,139,140,143,145,148,155,156,157,158,159,161,162,169,170,171,173,179,180,181,182,183,184,197,198,199,201,206,212,215,222,228,],[-114,-29,-87,-68,-30,-112,-111,-59,-117,-116,-100,-99,-110,-113,-28,-115,-63,-5,-81,-69,-106,-117,-88,-60,-98,-67,-104,-102,-7,-64,-9,-6,-97,-82,-70,-107,-108,-89,-92,-91,-90,-61,-121,-118,-101,-105,-8,-11,-65,-10,-83,-84,-71,184,-109,-93,-96,-95,-94,-62,-119,-120,-103,197,-45,-12,-66,-85,-86,-72,-34,-46,-117,212,-51,219,-47,-52,229,233,]),'IN':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,81,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,80,-106,-117,-88,-98,-104,-102,-97,-82,144,80,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),'OR':([2,6,8,11,13,14,15,16,21,24,25,27,29,30,33,35,41,43,46,56,59,61,66,67,73,76,78,85,94,95,97,103,108,109,110,113,116,117,119,125,137,140,143,145,150,155,156,157,158,159,161,162,169,170,180,181,182,183,198,],[-114,-87,-68,-112,-111,55,-117,-116,-100,-99,-110,-113,-115,-63,-81,-69,-106,-117,-88,114,-98,-67,-104,-102,-64,-97,-82,-70,-107,-108,-117,-89,-92,-91,-90,-61,-121,-118,-101,-105,-65,-83,-84,-71,-117,-109,-93,-96,-95,-94,-62,-119,-120,-103,-66,-85,-86,-72,-117,]),'AND':([2,6,8,11,13,15,16,21,24,25,27,29,30,33,35,41,43,46,59,61,66,67,73,76,78,85,94,95,97,103,108,109,110,116,117,119,125,137,140,143,145,150,155,156,157,158,159,162,169,170,180,181,182,183,198,],[-114,-87,-68,-112,-111,-117,-116,-100,-99,-110,-113,-115,72,-81,-69,-106,-117,-88,-98,-67,-104,-102,138,-97,-82,-70,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-65,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-66,-85,-86,-72,-117,]),'LESS':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,87,-106,-117,-88,-98,-104,-102,-97,-82,87,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),'PLUS':([0,2,3,4,6,10,11,12,13,15,16,17,20,21,22,24,25,26,27,29,32,33,36,41,43,44,45,46,47,48,49,51,52,54,55,59,63,64,65,66,67,69,70,72,76,77,78,79,80,82,83,84,86,87,88,89,90,92,94,95,96,97,103,104,105,106,107,108,109,110,112,114,116,117,119,121,124,125,126,127,129,130,132,133,134,138,140,141,142,143,144,146,150,152,153,154,155,156,157,158,159,162,163,165,168,169,170,172,174,177,181,182,184,185,186,188,192,198,202,207,208,209,217,220,221,224,227,229,231,233,],[32,-114,32,-26,-87,-13,-112,32,-111,-117,-116,32,32,-100,32,-99,-110,32,-113,-115,32,77,-3,-106,-117,32,32,-88,32,32,32,-17,-14,-4,32,-98,32,32,32,-104,-102,32,-15,32,-97,32,141,32,-79,-78,-75,32,-76,-73,-77,-74,32,32,-107,-108,32,-117,-89,32,32,32,32,-92,-91,-90,-18,32,-121,-118,-101,32,32,-105,32,32,-31,-32,32,-25,-16,32,-83,32,32,-84,-80,32,-117,32,32,-144,-109,-93,-96,-95,-94,-119,32,32,32,-120,-103,32,32,-33,-85,-86,-34,32,-145,32,32,-117,32,32,-27,32,32,32,-48,32,-55,-49,-56,-50,]),'IMAG_NUMBER':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[13,13,-26,-13,13,13,13,13,13,13,-3,13,13,13,13,13,-17,-14,-4,13,13,13,13,13,-15,13,13,13,-79,-78,-75,13,-76,-73,-77,-74,13,13,13,13,13,13,13,-18,13,13,13,13,13,-31,-32,13,-25,-16,13,13,13,-80,13,13,13,-144,13,13,13,13,13,-33,-34,13,-145,13,13,13,13,-27,13,13,13,-48,13,-55,-49,-56,-50,]),'LSQB':([2,11,13,15,16,21,25,27,29,41,43,66,67,94,95,97,116,117,125,150,155,162,169,198,],[-114,-112,-111,-117,-116,65,-110,-113,-115,-106,-117,-104,65,-107,-108,-117,-121,-118,-105,-117,-109,-119,-120,-117,]),'NAME':([0,1,3,4,7,10,12,17,18,20,22,26,32,36,40,44,45,47,48,49,51,52,54,55,57,62,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,91,92,96,104,105,106,107,111,112,114,115,121,124,126,127,129,130,132,133,134,138,141,142,144,146,149,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[15,37,43,-26,50,-13,15,43,60,43,43,15,43,-3,37,97,43,43,43,43,-17,-14,-4,43,-23,116,97,43,43,43,-15,43,43,43,-79,-78,-75,43,-76,-73,-77,-74,43,-41,15,150,43,43,43,43,37,-18,43,-24,43,43,15,43,-31,-32,43,-25,-16,43,43,43,-80,43,-42,43,43,-144,43,43,43,198,43,-33,-34,43,-145,198,43,43,43,-27,15,43,198,-48,43,-55,-49,-56,-50,]),'RSQB':([2,5,6,8,9,11,13,14,16,21,24,25,27,28,29,30,33,35,41,43,46,56,59,61,66,67,73,76,78,85,94,95,103,108,109,110,113,116,117,119,120,121,122,123,125,137,140,143,145,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,173,180,181,182,183,184,191,192,193,194,195,196,197,201,210,211,212,215,],[-114,-29,-87,-68,-30,-112,-111,-59,-116,-100,-99,-110,-113,-28,-115,-63,-81,-69,-106,-117,-88,-60,-98,-67,-104,-102,-64,-97,-82,-70,-107,-108,-89,-92,-91,-90,-61,-121,-118,-101,-122,-129,-128,169,-105,-65,-83,-84,-71,-109,-93,-96,-95,-94,-62,-119,-123,-124,-137,-130,-131,-133,-120,-103,-45,-66,-85,-86,-72,-34,-126,-125,-138,-132,-134,-135,-46,-51,-127,-136,-47,-52,]),'ATARG':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[16,16,-26,-13,16,16,16,16,16,16,-3,16,16,16,16,16,-17,-14,-4,16,16,16,16,16,-15,16,16,16,-79,-78,-75,16,-76,-73,-77,-74,16,16,16,16,16,16,16,-18,16,16,16,16,16,-31,-32,16,-25,-16,16,16,16,-80,16,16,16,-144,16,16,16,16,16,-33,-34,16,-145,16,16,16,16,-27,16,16,16,-48,16,-55,-49,-56,-50,]),'GREATEREQUAL':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,86,-106,-117,-88,-98,-104,-102,-97,-82,86,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),'STRING':([0,3,4,10,12,17,20,22,26,32,36,44,45,47,48,49,51,52,54,55,63,64,65,69,70,72,77,79,80,82,83,84,86,87,88,89,90,92,96,104,105,106,107,112,114,121,124,126,127,129,130,132,133,134,138,141,142,144,146,152,153,154,163,165,168,172,174,177,184,185,186,188,192,202,207,208,209,217,220,221,224,227,229,231,233,],[25,25,-26,-13,25,25,25,25,25,25,-3,25,25,25,25,25,-17,-14,-4,25,25,25,25,25,-15,25,25,25,-79,-78,-75,25,-76,-73,-77,-74,25,25,25,25,25,25,25,-18,25,25,25,25,25,-31,-32,25,-25,-16,25,25,25,-80,25,25,25,-144,25,25,25,25,25,-33,-34,25,-145,25,25,25,25,-27,25,25,25,-48,25,-55,-49,-56,-50,]),'$end':([2,5,6,8,9,11,13,14,15,16,19,21,24,25,27,28,29,30,31,33,34,35,41,43,46,53,56,59,61,66,67,71,73,74,75,76,78,85,94,95,103,108,109,110,113,116,117,119,125,135,136,137,139,140,143,145,155,156,157,158,159,161,162,169,170,173,179,180,181,182,183,184,197,201,212,215,],[-114,-29,-87,-68,-30,-112,-111,-59,-117,-116,-1,-100,-99,-110,-113,-28,-115,-63,-5,-81,0,-69,-106,-117,-88,-2,-60,-98,-67,-104,-102,-7,-64,-9,-6,-97,-82,-70,-107,-108,-89,-92,-91,-90,-61,-121,-118,-101,-105,-8,-11,-65,-10,-83,-84,-71,-109,-93,-96,-95,-94,-62,-119,-120,-103,-45,-12,-66,-85,-86,-72,-34,-46,-51,-47,-52,]),'DOT':([2,11,13,15,16,21,25,27,29,41,43,66,67,94,95,97,116,117,125,150,155,162,169,198,],[-114,-112,-111,-117,-116,62,-110,-113,-115,-106,-117,-104,62,-107,-108,-117,-121,-118,-105,-117,-109,-119,-120,-117,]),'SEMI':([0,2,4,5,6,8,9,10,11,12,13,14,15,16,21,24,25,27,28,29,30,31,33,35,36,41,43,46,51,52,54,56,59,61,66,67,70,71,73,74,75,76,78,85,94,95,103,108,109,110,112,113,116,117,119,125,129,130,131,133,134,135,136,137,139,140,143,145,155,156,157,158,159,161,162,169,170,173,177,179,180,181,182,183,184,197,198,201,208,212,215,221,227,229,231,233,],[36,-114,-26,-29,-87,-68,-30,51,-112,54,-111,-59,-117,-116,-100,-99,-110,-113,-28,-115,-63,74,-81,-69,-3,-106,-117,-88,-17,112,-4,-60,-98,-67,-104,-102,51,136,-64,-9,139,-97,-82,-70,-107,-108,-89,-92,-91,-90,-18,-61,-121,-118,-101,-105,-31,-32,177,-25,112,179,-11,-65,-10,-83,-84,-71,-109,-93,-96,-95,-94,-62,-119,-120,-103,-45,-33,-12,-66,-85,-86,-72,-34,-46,-117,-51,-27,-47,-52,-48,-55,-49,-56,-50,]),'LESSEQUAL':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,88,-106,-117,-88,-98,-104,-102,-97,-82,88,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),'GREATER':([2,6,11,13,15,16,21,24,25,27,29,33,35,41,43,46,59,66,67,76,78,85,94,95,97,103,108,109,110,116,117,119,125,140,143,145,150,155,156,157,158,159,162,169,170,181,182,183,198,],[-114,-87,-112,-111,-117,-116,-100,-99,-110,-113,-115,-81,89,-106,-117,-88,-98,-104,-102,-97,-82,89,-107,-108,-117,-89,-92,-91,-90,-121,-118,-101,-105,-83,-84,-71,-117,-109,-93,-96,-95,-94,-119,-120,-103,-85,-86,-72,-117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'closed_ifblock':([69,207,],[129,129,]),'or_test_star':([14,],[56,]),'and_test_star':([30,],[73,]),'fcnndef':([0,12,26,92,126,172,188,209,220,],[4,4,4,4,4,4,4,4,4,]),'subscript':([65,163,192,],[120,191,210,]),'suite_star2_star':([10,70,],[52,134,]),'subscriptlist_star':([120,],[164,]),'fcndef':([0,3,12,17,20,22,26,32,44,45,47,48,49,55,63,64,65,69,72,77,79,84,90,92,96,104,105,106,107,114,121,124,126,127,132,138,141,142,146,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[5,5,5,58,58,5,5,58,5,58,58,58,58,58,5,58,5,130,58,58,58,58,5,5,5,58,58,58,58,58,5,58,5,5,5,58,58,58,58,5,5,5,5,5,5,5,5,5,5,5,130,5,5,5,5,]),'factor':([0,3,12,17,20,22,26,32,44,45,47,48,49,55,63,64,65,69,72,77,79,84,90,92,96,104,105,106,107,114,121,124,126,127,132,138,141,142,146,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[6,6,6,59,6,6,6,76,6,103,108,109,110,6,6,119,6,6,6,6,6,6,6,6,6,156,157,158,159,6,6,170,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'trailer':([21,67,],[66,125,]),'comparison':([0,3,12,20,22,26,44,55,63,65,69,72,90,92,96,114,121,126,127,132,138,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'or_test':([0,3,12,22,26,44,63,65,69,90,92,96,121,126,127,132,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[9,9,9,9,9,9,9,9,131,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,131,9,9,9,9,]),'assignment':([0,12,26,92,126,172,188,209,220,],[10,10,70,10,10,10,10,10,10,]),'atom':([0,3,12,17,20,22,26,32,44,45,47,48,49,55,63,64,65,69,72,77,79,84,90,92,96,104,105,106,107,114,121,124,126,127,132,138,141,142,146,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'term_star':([6,],[46,]),'arith_expr':([0,3,12,20,22,26,44,55,63,65,69,72,84,90,92,96,114,121,126,127,132,138,146,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[35,35,35,35,35,35,35,35,35,35,35,35,145,35,35,35,35,35,35,35,35,35,183,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'arglist_star':([44,63,],[96,96,]),'closed_ifblock_star':([204,],[216,]),'argument':([44,63,96,],[99,99,151,]),'body_star':([0,],[12,]),'and_test':([0,3,12,22,26,44,55,63,65,69,90,92,96,114,121,126,127,132,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[14,14,14,14,14,14,113,14,14,14,14,14,14,161,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'closed_expression':([69,207,],[133,221,]),'arith_expr_star':([33,],[78,]),'power_star':([21,],[67,]),'parameter':([1,40,44,63,111,172,188,220,],[38,93,98,98,38,38,38,38,]),'ifblock_star':([128,],[176,]),'suite_star3':([71,],[135,]),'lvalues_star':([0,12,26,92,126,172,188,209,220,],[18,18,18,18,18,18,18,18,18,]),'suite':([0,12,92,126,172,188,209,220,],[19,53,148,171,199,206,222,228,]),'comp_op':([35,85,],[84,146,]),'suite_star':([31,],[75,]),'exprsuite':([68,175,178,200,203,214,226,230,],[128,201,204,213,215,223,232,234,]),'paramlist':([1,111,172,188,220,],[39,160,39,39,39,]),'lvalues':([0,12,26,92,126,172,188,209,220,],[23,23,23,23,23,23,23,23,23,]),'power':([0,3,12,17,20,22,26,32,44,45,47,48,49,55,63,64,65,69,72,77,79,84,90,92,96,104,105,106,107,114,121,124,126,127,132,138,141,142,146,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'suite_star2':([0,12,92,126,172,188,209,220,],[26,26,26,26,26,26,26,26,]),'sliceop':([121,167,168,196,],[166,194,195,211,]),'ifblock':([0,3,12,22,26,44,63,65,90,92,96,121,126,127,132,152,153,163,165,168,172,174,185,188,192,202,209,217,220,224,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'paramlist_star':([1,111,172,188,220,],[40,40,40,40,40,]),'not_test':([0,3,12,20,22,26,44,55,63,65,69,72,90,92,96,114,121,126,127,132,138,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[30,30,30,61,30,30,30,30,30,30,30,137,30,30,30,30,30,30,30,30,180,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'closed_exprsuite':([190,218,225,],[208,227,231,]),'expression':([0,3,12,22,26,44,63,65,90,92,96,121,126,127,132,152,153,163,165,168,172,174,185,188,192,202,209,217,220,224,],[31,42,31,68,71,100,100,122,147,31,100,167,31,173,178,187,189,122,193,196,31,200,205,31,122,214,31,226,31,230,]),'fcn1def':([44,63,],[101,101,]),'term':([0,3,12,20,22,26,44,55,63,65,69,72,77,79,84,90,92,96,114,121,126,127,132,138,141,142,146,152,153,163,165,168,172,174,185,188,192,202,207,209,217,220,224,],[33,33,33,33,33,33,33,33,33,33,33,33,140,143,33,33,33,33,33,33,33,33,33,33,181,182,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'body':([0,],[34,]),'comparison_star':([35,],[85,]),'arglist':([44,63,],[102,118,]),'subscriptlist':([65,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> suite','body',1,'p_body_1','parser.py',290),
  ('body -> body_star suite','body',2,'p_body_2','parser.py',294),
  ('body_star -> SEMI','body_star',1,'p_body_star_1','parser.py',299),
  ('body_star -> body_star SEMI','body_star',2,'p_body_star_2','parser.py',303),
  ('suite -> expression','suite',1,'p_suite_1','parser.py',309),
  ('suite -> expression suite_star','suite',2,'p_suite_2','parser.py',314),
  ('suite -> suite_star2 expression','suite',2,'p_suite_3','parser.py',319),
  ('suite -> suite_star2 expression suite_star3','suite',3,'p_suite_4','parser.py',324),
  ('suite_star -> SEMI','suite_star',1,'p_suite_star_1','parser.py',330),
  ('suite_star -> suite_star SEMI','suite_star',2,'p_suite_star_2','parser.py',334),
  ('suite_star3 -> SEMI','suite_star3',1,'p_suite_star3_1','parser.py',339),
  ('suite_star3 -> suite_star3 SEMI','suite_star3',2,'p_suite_star3_2','parser.py',343),
  ('suite_star2 -> assignment','suite_star2',1,'p_suite_star2_1','parser.py',348),
  ('suite_star2 -> assignment suite_star2_star','suite_star2',2,'p_suite_star2_2','parser.py',352),
  ('suite_star2 -> suite_star2 assignment','suite_star2',2,'p_suite_star2_3','parser.py',356),
  ('suite_star2 -> suite_star2 assignment suite_star2_star','suite_star2',3,'p_suite_star2_4','parser.py',360),
  ('suite_star2_star -> SEMI','suite_star2_star',1,'p_suite_star2_star_1','parser.py',365),
  ('suite_star2_star -> suite_star2_star SEMI','suite_star2_star',2,'p_suite_star2_star_2','parser.py',369),
  ('lvalues -> NAME','lvalues',1,'p_lvalues_1','parser.py',375),
  ('lvalues -> NAME COMMA','lvalues',2,'p_lvalues_2','parser.py',379),
  ('lvalues -> lvalues_star NAME','lvalues',2,'p_lvalues_3','parser.py',383),
  ('lvalues -> lvalues_star NAME COMMA','lvalues',3,'p_lvalues_4','parser.py',387),
  ('lvalues_star -> NAME COMMA','lvalues_star',2,'p_lvalues_star_1','parser.py',392),
  ('lvalues_star -> lvalues_star NAME COMMA','lvalues_star',3,'p_lvalues_star_2','parser.py',396),
  ('assignment -> lvalues EQUAL closed_expression','assignment',3,'p_assignment_1','parser.py',402),
  ('assignment -> fcnndef','assignment',1,'p_assignment_2','parser.py',407),
  ('fcnndef -> DEF NAME LPAR paramlist RPAR closed_exprsuite','fcnndef',6,'p_fcnndef','parser.py',413),
  ('expression -> ifblock','expression',1,'p_expression_1','parser.py',421),
  ('expression -> fcndef','expression',1,'p_expression_2','parser.py',425),
  ('expression -> or_test','expression',1,'p_expression_3','parser.py',429),
  ('closed_expression -> closed_ifblock','closed_expression',1,'p_closed_expression_1','parser.py',435),
  ('closed_expression -> fcndef','closed_expression',1,'p_closed_expression_2','parser.py',439),
  ('closed_expression -> or_test SEMI','closed_expression',2,'p_closed_expression_3','parser.py',443),
  ('fcndef -> LBRACE paramlist RIGHTARROW suite RBRACE','fcndef',5,'p_fcndef','parser.py',449),
  ('fcn1def -> parameter RIGHTARROW expression','fcn1def',3,'p_fcn1def_1','parser.py',456),
  ('fcn1def -> parameter RIGHTARROW LBRACE suite RBRACE','fcn1def',5,'p_fcn1def_2','parser.py',462),
  ('paramlist -> parameter','paramlist',1,'p_paramlist_1','parser.py',470),
  ('paramlist -> parameter COMMA','paramlist',2,'p_paramlist_2','parser.py',474),
  ('paramlist -> paramlist_star parameter','paramlist',2,'p_paramlist_3','parser.py',478),
  ('paramlist -> paramlist_star parameter COMMA','paramlist',3,'p_paramlist_4','parser.py',484),
  ('paramlist_star -> parameter COMMA','paramlist_star',2,'p_paramlist_star_1','parser.py',491),
  ('paramlist_star -> paramlist_star parameter COMMA','paramlist_star',3,'p_paramlist_star_2','parser.py',495),
  ('parameter -> NAME','parameter',1,'p_parameter_1','parser.py',503),
  ('parameter -> NAME EQUAL expression','parameter',3,'p_parameter_2','parser.py',507),
  ('exprsuite -> COLON expression','exprsuite',2,'p_exprsuite_1','parser.py',513),
  ('exprsuite -> LBRACE suite RBRACE','exprsuite',3,'p_exprsuite_2','parser.py',518),
  ('exprsuite -> COLON LBRACE suite RBRACE','exprsuite',4,'p_exprsuite_3','parser.py',522),
  ('closed_exprsuite -> COLON closed_expression','closed_exprsuite',2,'p_closed_exprsuite_1','parser.py',528),
  ('closed_exprsuite -> LBRACE suite RBRACE','closed_exprsuite',3,'p_closed_exprsuite_2','parser.py',533),
  ('closed_exprsuite -> COLON LBRACE suite RBRACE','closed_exprsuite',4,'p_closed_exprsuite_3','parser.py',537),
  ('ifblock -> IF expression exprsuite ELSE exprsuite','ifblock',5,'p_ifblock_1','parser.py',543),
  ('ifblock -> IF expression exprsuite ifblock_star ELSE exprsuite','ifblock',6,'p_ifblock_2','parser.py',547),
  ('ifblock_star -> ELIF expression exprsuite','ifblock_star',3,'p_ifblock_star_1','parser.py',552),
  ('ifblock_star -> ifblock_star ELIF expression exprsuite','ifblock_star',4,'p_ifblock_star_2','parser.py',556),
  ('closed_ifblock -> IF expression exprsuite ELSE closed_exprsuite','closed_ifblock',5,'p_closed_ifblock_1','parser.py',565),
  ('closed_ifblock -> IF expression exprsuite closed_ifblock_star ELSE closed_exprsuite','closed_ifblock',6,'p_closed_ifblock_2','parser.py',569),
  ('closed_ifblock_star -> ELIF expression exprsuite','closed_ifblock_star',3,'p_closed_ifblock_star_1','parser.py',574),
  ('closed_ifblock_star -> closed_ifblock_star ELIF expression exprsuite','closed_ifblock_star',4,'p_closed_ifblock_star_2','parser.py',578),
  ('or_test -> and_test','or_test',1,'p_or_test_1','parser.py',586),
  ('or_test -> and_test or_test_star','or_test',2,'p_or_test_2','parser.py',590),
  ('or_test_star -> OR and_test','or_test_star',2,'p_or_test_star_1','parser.py',598),
  ('or_test_star -> or_test_star OR and_test','or_test_star',3,'p_or_test_star_2','parser.py',602),
  ('and_test -> not_test','and_test',1,'p_and_test_1','parser.py',608),
  ('and_test -> not_test and_test_star','and_test',2,'p_and_test_2','parser.py',612),
  ('and_test_star -> AND not_test','and_test_star',2,'p_and_test_star_1','parser.py',620),
  ('and_test_star -> and_test_star AND not_test','and_test_star',3,'p_and_test_star_2','parser.py',624),
  ('not_test -> NOT not_test','not_test',2,'p_not_test_1','parser.py',630),
  ('not_test -> comparison','not_test',1,'p_not_test_2','parser.py',636),
  ('comparison -> arith_expr','comparison',1,'p_comparison_1','parser.py',642),
  ('comparison -> arith_expr comparison_star','comparison',2,'p_comparison_2','parser.py',646),
  ('comparison_star -> comp_op arith_expr','comparison_star',2,'p_comparison_star_1','parser.py',653),
  ('comparison_star -> comparison_star comp_op arith_expr','comparison_star',3,'p_comparison_star_2','parser.py',658),
  ('comp_op -> LESS','comp_op',1,'p_comp_op_1','parser.py',666),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op_2','parser.py',670),
  ('comp_op -> EQEQUAL','comp_op',1,'p_comp_op_3','parser.py',674),
  ('comp_op -> GREATEREQUAL','comp_op',1,'p_comp_op_4','parser.py',678),
  ('comp_op -> LESSEQUAL','comp_op',1,'p_comp_op_5','parser.py',682),
  ('comp_op -> NOTEQUAL','comp_op',1,'p_comp_op_6','parser.py',686),
  ('comp_op -> IN','comp_op',1,'p_comp_op_7','parser.py',690),
  ('comp_op -> NOT IN','comp_op',2,'p_comp_op_8','parser.py',694),
  ('arith_expr -> term','arith_expr',1,'p_arith_expr_1','parser.py',700),
  ('arith_expr -> term arith_expr_star','arith_expr',2,'p_arith_expr_2','parser.py',704),
  ('arith_expr_star -> PLUS term','arith_expr_star',2,'p_arith_expr_star_1','parser.py',709),
  ('arith_expr_star -> MINUS term','arith_expr_star',2,'p_arith_expr_star_2','parser.py',713),
  ('arith_expr_star -> arith_expr_star PLUS term','arith_expr_star',3,'p_arith_expr_star_3','parser.py',717),
  ('arith_expr_star -> arith_expr_star MINUS term','arith_expr_star',3,'p_arith_expr_star_4','parser.py',721),
  ('term -> factor','term',1,'p_term_1','parser.py',727),
  ('term -> factor term_star','term',2,'p_term_2','parser.py',731),
  ('term_star -> STAR factor','term_star',2,'p_term_star_1','parser.py',736),
  ('term_star -> SLASH factor','term_star',2,'p_term_star_2','parser.py',740),
  ('term_star -> PERCENT factor','term_star',2,'p_term_star_3','parser.py',744),
  ('term_star -> DOUBLESLASH factor','term_star',2,'p_term_star_4','parser.py',748),
  ('term_star -> term_star STAR factor','term_star',3,'p_term_star_5','parser.py',752),
  ('term_star -> term_star SLASH factor','term_star',3,'p_term_star_6','parser.py',756),
  ('term_star -> term_star PERCENT factor','term_star',3,'p_term_star_7','parser.py',760),
  ('term_star -> term_star DOUBLESLASH factor','term_star',3,'p_term_star_8','parser.py',764),
  ('factor -> PLUS factor','factor',2,'p_factor_1','parser.py',770),
  ('factor -> MINUS factor','factor',2,'p_factor_2','parser.py',776),
  ('factor -> power','factor',1,'p_factor_3','parser.py',788),
  ('power -> atom','power',1,'p_power_1','parser.py',794),
  ('power -> atom DOUBLESTAR factor','power',3,'p_power_2','parser.py',798),
  ('power -> atom power_star','power',2,'p_power_3','parser.py',803),
  ('power -> atom power_star DOUBLESTAR factor','power',4,'p_power_4','parser.py',807),
  ('power_star -> trailer','power_star',1,'p_power_star_1','parser.py',813),
  ('power_star -> power_star trailer','power_star',2,'p_power_star_2','parser.py',817),
  ('atom -> LPAR RPAR','atom',2,'p_atom_1','parser.py',832),
  ('atom -> LPAR expression RPAR','atom',3,'p_atom_2','parser.py',836),
  ('atom -> fcndef LPAR RPAR','atom',3,'p_atom_3','parser.py',840),
  ('atom -> fcndef LPAR arglist RPAR','atom',4,'p_atom_4','parser.py',845),
  ('atom -> STRING','atom',1,'p_atom_5','parser.py',851),
  ('atom -> IMAG_NUMBER','atom',1,'p_atom_6','parser.py',855),
  ('atom -> FLOAT_NUMBER','atom',1,'p_atom_7','parser.py',859),
  ('atom -> HEX_NUMBER','atom',1,'p_atom_8','parser.py',863),
  ('atom -> OCT_NUMBER','atom',1,'p_atom_9','parser.py',867),
  ('atom -> DEC_NUMBER','atom',1,'p_atom_10','parser.py',871),
  ('atom -> ATARG','atom',1,'p_atom_11','parser.py',875),
  ('atom -> NAME','atom',1,'p_atom_12','parser.py',879),
  ('trailer -> LPAR RPAR','trailer',2,'p_trailer_1','parser.py',885),
  ('trailer -> LPAR arglist RPAR','trailer',3,'p_trailer_2','parser.py',889),
  ('trailer -> LSQB subscriptlist RSQB','trailer',3,'p_trailer_3','parser.py',893),
  ('trailer -> DOT NAME','trailer',2,'p_trailer_4','parser.py',897),
  ('subscriptlist -> subscript','subscriptlist',1,'p_subscriptlist_1','parser.py',903),
  ('subscriptlist -> subscript COMMA','subscriptlist',2,'p_subscriptlist_2','parser.py',907),
  ('subscriptlist -> subscript subscriptlist_star','subscriptlist',2,'p_subscriptlist_3','parser.py',918),
  ('subscriptlist -> subscript subscriptlist_star COMMA','subscriptlist',3,'p_subscriptlist_4','parser.py',930),
  ('subscriptlist_star -> COMMA subscript','subscriptlist_star',2,'p_subscriptlist_star_1','parser.py',943),
  ('subscriptlist_star -> subscriptlist_star COMMA subscript','subscriptlist_star',3,'p_subscriptlist_star_2','parser.py',947),
  ('subscript -> expression','subscript',1,'p_subscript_1','parser.py',953),
  ('subscript -> COLON','subscript',1,'p_subscript_2','parser.py',958),
  ('subscript -> COLON sliceop','subscript',2,'p_subscript_3','parser.py',962),
  ('subscript -> COLON expression','subscript',2,'p_subscript_4','parser.py',966),
  ('subscript -> COLON expression sliceop','subscript',3,'p_subscript_5','parser.py',970),
  ('subscript -> expression COLON','subscript',2,'p_subscript_6','parser.py',974),
  ('subscript -> expression COLON sliceop','subscript',3,'p_subscript_7','parser.py',979),
  ('subscript -> expression COLON expression','subscript',3,'p_subscript_8','parser.py',984),
  ('subscript -> expression COLON expression sliceop','subscript',4,'p_subscript_9','parser.py',989),
  ('sliceop -> COLON','sliceop',1,'p_sliceop_1','parser.py',996),
  ('sliceop -> COLON expression','sliceop',2,'p_sliceop_2','parser.py',1000),
  ('arglist -> argument','arglist',1,'p_arglist_1','parser.py',1006),
  ('arglist -> argument COMMA','arglist',2,'p_arglist_2','parser.py',1010),
  ('arglist -> arglist_star argument','arglist',2,'p_arglist_3','parser.py',1014),
  ('arglist -> arglist_star argument COMMA','arglist',3,'p_arglist_4','parser.py',1021),
  ('arglist -> fcn1def','arglist',1,'p_arglist_5','parser.py',1028),
  ('arglist_star -> argument COMMA','arglist_star',2,'p_arglist_star_1','parser.py',1034),
  ('arglist_star -> arglist_star argument COMMA','arglist_star',3,'p_arglist_star_2','parser.py',1038),
  ('argument -> expression','argument',1,'p_argument_1','parser.py',1047),
  ('argument -> NAME EQUAL expression','argument',3,'p_argument_2','parser.py',1052),
]
